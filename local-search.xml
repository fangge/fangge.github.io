<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>利用高德地图和小红书MCP生成旅行规划图</title>
    <link href="/2025/04/30/fed14/"/>
    <url>/2025/04/30/fed14/</url>
    
    <content type="html"><![CDATA[<p>最近网上有很多关于MCP实战的例子，我也非常感兴趣，照着网上最火的旅游规划实践例子，也玩了一下，确实非常有趣和方便，下面介绍利用<strong>高德地图</strong>和<strong>小红书</strong>MCP生成旅游规划网页的详细步骤</p><blockquote><p>首先感谢<strong>AI产品自由</strong>写的攻略文档<a href="https://mp.weixin.qq.com/s/SM05H7MKnfvoVynmUfuwTA">AI + 高德MCP：10分钟搞定一份旅行攻略！</a>,本篇是在这个文档的基础上，再锦上添花优化一下配置的步骤</p></blockquote><h2 id="一、前期准备"><a href="#一、前期准备" class="headerlink" title="一、前期准备"></a>一、前期准备</h2><ul><li>最新版本的 Node.js（v18 或更新版本）<ul><li>通过运行检查：node –version</li><li>从以下网址安装：<a href="https://nodejs.org/">https://nodejs.org/</a></li></ul></li><li>最新版本的 Python（v3.8 或更新版本）<ul><li>通过运行检查：python –version</li><li>从以下网址安装：<a href="https://python.org/">https://python.org/</a></li></ul></li><li>UV 包管理器<ul><li>安装 Python 后，运行：<code>pip install uv</code></li><li>通过运行验证：<code>uv --version</code></li></ul></li><li>高德地图开放平台<ul><li>注册并认证成为开发者</li><li>进入<strong>控制台</strong>后，找到应用管理，创建新应用</li><li>添加两种key，一个是<code>web服务</code>类型，一个是<code>web端</code>类型</li></ul></li><li>科学上网（你懂的）</li></ul><blockquote><p>macOS系统，装了python后，命令行要加版本号，比如<code>pip3 install uv</code></p></blockquote><h2 id="二、安装MCP"><a href="#二、安装MCP" class="headerlink" title="二、安装MCP"></a>二、安装MCP</h2><p>市面的主流的编辑器或者插件都能支持MCP，这里我用<strong>vscode</strong>的<strong>cline</strong>插件为例，来说明这个实践例子中，安装MCP的具体步骤</p><blockquote><p>MCP库网站推荐：<a href="https://mcp.so/">https://mcp.so/</a></p></blockquote><h3 id="安装高德地图MCP"><a href="#安装高德地图MCP" class="headerlink" title="安装高德地图MCP"></a>安装高德地图MCP</h3><ol><li>安装页面：<a href="https://pypi.org/project/amap-mcp-server/">https://pypi.org/project/amap-mcp-server/</a></li><li>安装命令：<code>pip install amap-mcp-server</code> or <code>pip3 install amap-mcp-server</code></li><li>cline插件添加高德MCP：<br><img src="/img/blog/amapmcp.png" alt="高德MCP"><blockquote><p>记得用前期准备建好的Web服务的key<br><img src="/img/blog/amapmcp2.png" alt="高德MCP"></p></blockquote><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs json"><span class="hljs-punctuation">&#123;</span><br>  <span class="hljs-attr">&quot;mcpServers&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>      <span class="hljs-attr">&quot;amap-mcp-server&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>          <span class="hljs-attr">&quot;command&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;uvx&quot;</span><span class="hljs-punctuation">,</span><br>          <span class="hljs-attr">&quot;args&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span><br>              <span class="hljs-string">&quot;amap-mcp-server&quot;</span><br>          <span class="hljs-punctuation">]</span><span class="hljs-punctuation">,</span><br>          <span class="hljs-attr">&quot;env&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>              <span class="hljs-attr">&quot;AMAP_MAPS_API_KEY&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;高德Web服务的key&quot;</span><br>          <span class="hljs-punctuation">&#125;</span><br>      <span class="hljs-punctuation">&#125;</span><br>  <span class="hljs-punctuation">&#125;</span><br><span class="hljs-punctuation">&#125;</span><br></code></pre></td></tr></table></figure></li></ol><h3 id="安装小红书MCP"><a href="#安装小红书MCP" class="headerlink" title="安装小红书MCP"></a>安装小红书MCP</h3><p><a href="https://mcp.so/zh/server/xhs-mcp/jobsonlook">小红书MCP介绍</a></p><ol><li>安装依赖<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">git <span class="hljs-built_in">clone</span> git@github.com:jobsonlook/xhs-mcp.git<br><span class="hljs-built_in">cd</span> xhs-mcp<br>uv <span class="hljs-built_in">sync</span> <br></code></pre></td></tr></table></figure><blockquote><p>如果ssh clone有问题，也可以用<code>git clone https://github.com/jobsonlook/xhs-mcp.git</code></p></blockquote></li><li>cline插件添加小红书MCP<figure class="highlight prolog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs prolog">&#123;<br>    <span class="hljs-string">&quot;mcpServers&quot;</span>: &#123;<br>        <span class="hljs-string">&quot;xhs-mcp&quot;</span>: &#123;<br>            <span class="hljs-string">&quot;command&quot;</span>: <span class="hljs-string">&quot;uv&quot;</span>,<br>            <span class="hljs-string">&quot;args&quot;</span>: [<br>                <span class="hljs-string">&quot;--directory&quot;</span>,<br>                <span class="hljs-string">&quot;小红书mcp项目的路径&quot;</span>,<br>                <span class="hljs-string">&quot;run&quot;</span>,<br>                <span class="hljs-string">&quot;main.py&quot;</span><br>            ],<br>            <span class="hljs-string">&quot;env&quot;</span>: &#123;<br>                <span class="hljs-string">&quot;XHS_COOKIE&quot;</span>: <span class="hljs-string">&quot;xxxx&quot;</span><br>            &#125;<br>        &#125;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure>小红书mcp项目的路径的获取分系统</li></ol><ul><li><strong>macOS</strong>: 选中刚才clone下来的小红书的mcp目录，快捷键Option+Command+C，就可以复制当前目录的路径，然后直接粘贴即可</li><li><strong>windows</strong>：比如你放在G盘的根目录下，那么路径就是<code>G:\\xhs-mcp</code>,记录路径分割线用<code>\\</code></li></ul><ol start="3"><li>获取小红书cookie</li></ol><ul><li>打开<a href="https://www.xiaohongshu.com/explore">小红书web端</a></li><li>登陆<br><img src="/img/blog/xhs.png" alt="小红书web端"></li><li>登陆成功后，按F12，或鼠标右键检查，打开控制台，然后刷新一下页面</li><li>选择Network选项，然后筛选处选Fetch&#x2F;XHR,任意选择一个请求，点击后查看里面的Cookies，复制到配置中的<code>XHS_COOKIE</code></li></ul><p><img src="/img/blog/xhs2.png" alt="小红书Cookie获取"></p><h2 id="检测MCP是否安装成功"><a href="#检测MCP是否安装成功" class="headerlink" title="检测MCP是否安装成功"></a>检测MCP是否安装成功</h2><p>直接cline提问即可，比如你直接提问，看看是否能成功调用mcp服务即可</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">根据小红书mcp，获取关于海贼王的最热门的前5个帖子<br>根据高德地图mcp，获取广州塔的具体经纬度<br></code></pre></td></tr></table></figure><p>同时mcp服务如果运行正常，插件也会有类似的绿色提示<br><img src="/img/blog/mcp3.png" alt="MCP"></p><h2 id="三、生成规划旅行网页"><a href="#三、生成规划旅行网页" class="headerlink" title="三、生成规划旅行网页"></a>三、生成规划旅行网页</h2><blockquote><p>参考AI产品自由写的提示词：<a href="https://o90p05z3t4.feishu.cn/wiki/Lfmuwq3jjiSozQkglU6cFEOAnjc">旅行规划提示词</a>，我在原有提示词上做了更新</p></blockquote><h3 id="新建提示词文档"><a href="#新建提示词文档" class="headerlink" title="新建提示词文档"></a>新建提示词文档</h3><p>在项目根目录新建<code>提示词.md</code>的markdown文件，粘贴以下内容</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br></pre></td><td class="code"><pre><code class="hljs markdown"><span class="hljs-section"># 风格说明</span><br><br>你是一位国际顶尖的数字杂志艺术总监和前端开发专家，曾为Vogue、Elle等时尚杂志设计过数字版面，擅长将奢华杂志美学与现代网页设计完美融合，创造出令人惊艳的视觉体验。<br><br>请设计高级时尚杂志风格的手机app旅行攻略，将旅行信息以精致奢华的杂志编排呈现，让用户感受到如同翻阅高端杂志般的视觉享受。<br><br><span class="hljs-strong">**可选设计风格：**</span><br><br>构成主义风格 (Constructivism)<br>采用构成主义风格设计，体现20世纪早期俄国前卫艺术运动的革命性美学。必须使用大胆的几何形状和对角线元素创造动态张力，强调结构与构成。色彩应限制在红、黑两色为主，可辅以少量白色或灰色，体现革命色彩。排版是关键元素，文字应成为设计的一部分而非简单的内容载体，可使用不同大小、粗细和方向的文字创造视觉层次，标题应大胆且具冲击力，可斜向排列或分割成多行。必须使用几何形状如三角形、圆形、直线和对角线作为主要视觉元素，这些元素应相互重叠和交织。照片或图像应使用锐利的对比度和几何化处理，可使用照片蒙太奇技术。整体构图应不对称且充满张力，仿佛元素间存在力的相互作用。可添加工业元素如齿轮、工厂或机械部件的抽象表现。整体设计应呈现出前卫、动态且具有政治宣传性质的视觉效果，参考亚历山大·罗德琴科(Alexander Rodchenko)和埃尔·利西茨基(El Lissitzky)的海报设计，体现&quot;艺术进入生活&quot;的设计理念。<br><br><span class="hljs-strong">**每种风格都应包含以下元素，但视觉表现各不相同：**</span><br><br><span class="hljs-bullet">1.</span> <span class="hljs-strong">**行程标题区**</span>：<br><span class="hljs-bullet">   -</span> 目的地名称（主标题，醒目位置）<br><span class="hljs-bullet">   -</span> 旅行日期和总天数<br><span class="hljs-bullet">   -</span> 旅行者姓名/团队名称（可选）<br><span class="hljs-bullet">   -</span> 天气信息摘要<br><br><span class="hljs-bullet">2.</span> <span class="hljs-strong">**行程概览区**</span>：<br><span class="hljs-bullet">   -</span> 按日期分区的行程简表<br><span class="hljs-bullet">   -</span> 每天主要活动/景点的概览<br><span class="hljs-bullet">   -</span> 使用图标标识不同类型的活动<br><br><span class="hljs-bullet">3.</span> <span class="hljs-strong">**详细时间表区**</span>：<br><span class="hljs-bullet">   -</span> 以表格或时间轴形式呈现详细行程<br><span class="hljs-bullet">   -</span> 包含时间、地点、活动描述<br><span class="hljs-bullet">   -</span> 每个景点的停留时间<br><span class="hljs-bullet">   -</span> 标注门票价格和必要预订信息<br><br><span class="hljs-bullet">4.</span> <span class="hljs-strong">**交通信息区**</span>：<br><span class="hljs-bullet">   -</span> 主要交通换乘点及方式<br><span class="hljs-bullet">   -</span> 地铁/公交线路和站点信息<br><span class="hljs-bullet">   -</span> 预计交通时间<br><span class="hljs-bullet">   -</span> 使用箭头或连线表示行程路线<br><br><span class="hljs-bullet">5.</span> <span class="hljs-strong">**住宿与餐饮区**</span>：<br><span class="hljs-bullet">   -</span> 酒店/住宿地址和联系方式<br><span class="hljs-bullet">   -</span> 入住和退房时间<br><span class="hljs-bullet">   -</span> 推荐餐厅列表（标注特色菜和价格区间）<br><span class="hljs-bullet">   -</span> 附近便利设施（如超市、药店等）<br><br><span class="hljs-bullet">6.</span> <span class="hljs-strong">**实用信息区**</span>：<br><span class="hljs-bullet">   -</span> 紧急联系电话<br><span class="hljs-bullet">   -</span> 重要提示和注意事项<br><span class="hljs-bullet">   -</span> 预算摘要<br><span class="hljs-bullet">   -</span> 行李清单提醒<br><br><span class="hljs-section"># 示例内容（基于上海一日游）</span><br><br><span class="hljs-strong">**目的地**</span>：上海一日游<br><span class="hljs-strong">**日期**</span>：2025年3月30日（星期日）<br><span class="hljs-strong">**天气**</span>：阴，13°C/7°C，东风1-3级<br><br><span class="hljs-strong">**时间表**</span>：<br>| 时间 | 活动 | 地点 | 备注 |<br>|------|------|------|------|<br>| 09:00-11:00 | 游览豫园 | 福佑路168号 | 门票：40元 |<br>| 11:00-12:30 | 城隍庙午餐 | 城隍庙商圈 | 推荐：南翔小笼包 |<br>| 13:30-15:00 | 参观东方明珠 | 世纪大道1号 | 门票：80元起 |<br>| 15:30-17:30 | 漫步陆家嘴 | 陆家嘴金融区 | 免费活动 |<br>| 18:30-21:00 | 黄浦江夜游 | 码头位置 | 夜游票：120元 |<br><br><span class="hljs-strong">**交通路线**</span>：<br><span class="hljs-bullet">-</span> 豫园→东方明珠：地铁14号线（豫园站→陆家嘴站），约25分钟<br><span class="hljs-bullet">-</span> 东方明珠→黄浦江夜游码头：步行15分钟<br><br><span class="hljs-strong">**实用提示**</span>：<br><span class="hljs-bullet">-</span> 携带雨伞，天气多变<br><span class="hljs-bullet">-</span> 避开东方明珠午间高峰<br><span class="hljs-bullet">-</span> 准备移动支付<br><span class="hljs-bullet">-</span> 注意保管随身物品<br><br><span class="hljs-strong">**重要电话**</span>：<br><span class="hljs-bullet">-</span> 旅游咨询：021-12301<br><span class="hljs-bullet">-</span> 紧急求助：110/120<br><br><span class="hljs-strong">**小红书攻略推荐**</span><br><span class="hljs-bullet">-</span> 搜索和旅行规划主题相关的观看人数最多的5篇小红书文章，并列举出来<br><br>请创建一个美观且易于在手机上浏览的旅行规划长图，帮助用户清晰了解整个行程安排。长图设计应确保在手机上阅读舒适，信息层次分明。<br><br><span class="hljs-section"># 技术规范：</span><br><br><span class="hljs-bullet">*</span> 使用HTML5、Font Awesome、Tailwind CSS和必要的JavaScript<br><span class="hljs-bullet">  *</span> Font Awesome: [<span class="hljs-string">https://lf6-cdn-tos.bytecdntp.com/cdn/expire-100-M/font-awesome/6.0.0/css/all.min.css</span>](<span class="hljs-link">https://lf6-cdn-tos.bytecdntp.com/cdn/expire-100-M/font-awesome/6.0.0/css/all.min.css</span>)<br><span class="hljs-bullet">  *</span> Tailwind CSS: [<span class="hljs-string">https://lf3-cdn-tos.bytecdntp.com/cdn/expire-1-M/tailwindcss/2.2.19/tailwind.min.css</span>](<span class="hljs-link">https://lf3-cdn-tos.bytecdntp.com/cdn/expire-1-M/tailwindcss/2.2.19/tailwind.min.css</span>)<br><span class="hljs-bullet">  *</span> 中文字体: [<span class="hljs-string">https://fonts.googleapis.com/css2?family=Noto+Serif+SC:wght@400;500;600;700&amp;family=Noto+Sans+SC:wght@300;400;500;700&amp;display=swap</span>](<span class="hljs-link">https://fonts.googleapis.com/css2?family=Noto+Serif+SC:wght@400;500;600;700&amp;family=Noto+Sans+SC:wght@300;400;500;700&amp;display=swap</span>)<br><span class="hljs-bullet">*</span> 确保代码简洁高效，注重性能和可维护性<br><span class="hljs-bullet">*</span> 使用CSS变量管理颜色和间距，便于风格统一<br><br><span class="hljs-section"># 输出要求：</span><br><br><span class="hljs-bullet">*</span> 提供一个完整的HTML文件，包含所有设计风格的卡片<br><span class="hljs-bullet">*</span> 代码应当优雅且符合最佳实践，CSS应体现出对细节的极致追求<br><span class="hljs-bullet">*</span> 网页应使用响应式布局，在web端和移动端都有良好的视觉效果<br><span class="hljs-bullet">*</span> 行程的规划需要根据用户提供的时间的对应的天气信息进行规划，比如下雨天就尽量安排室内活动<br><span class="hljs-bullet">*</span> 每一个地点需要利用高德地图的MCP生成地点链接，点击后可以直接跳转到高德地图导航<br><span class="hljs-bullet">*</span> 每一天的时间行程需要增加一个高德地图的在线预览，将当前天的所有行程地图连接起来，方便查看今日行程，利用高德地图的js api，直接在网页上显示，不需要跳转<br><span class="hljs-bullet">*</span> 小红书的文章要给出具体帖子的链接，不需要搜索的链接<br><span class="hljs-bullet">*</span> 设计的宽度根据手机宽度自适应<br><span class="hljs-bullet">*</span> 永远用中文输出<br><span class="hljs-bullet">*</span> 注意文字的可阅读性，保持文字背景干净和字体颜色不一致<br><span class="hljs-bullet">*</span> 保证信息的完整性<br><br>请以国际顶尖杂志艺术总监的眼光和审美标准，创造风格迥异但同样令人惊艳的手机app旅行攻略，让用户感受到&quot;这不是普通的信息卡片，而是一件可收藏的数字艺术品&quot;。<br></code></pre></td></tr></table></figure><h3 id="生成页面"><a href="#生成页面" class="headerlink" title="生成页面"></a>生成页面</h3><p>在编辑器中输入类似内容，让AI生成页面<br><img src="/img/blog/mcp.png" alt="提示词示例"><br>然后就能见证奇迹的发生<br><img src="/img/blog/qiji.jpeg" alt="Magic！！"></p><h3 id="美化页面"><a href="#美化页面" class="headerlink" title="美化页面"></a>美化页面</h3><ol><li>再次感谢大佬整理的风格提示词：<a href="https://o90p05z3t4.feishu.cn/wiki/LBSDwq4z1iTUWqkEjoNcFGHvnsc">旅行规划设计主题提示词</a>，可以选择喜欢的风格，然后粘贴到提示词文档里面的<strong>可选设计风格</strong>部分</li><li>高德地图的js api，在页面生成后，如果发现在线地图预览有问题，则需要修改地图的js引入<blockquote><p>地图接口文档：<a href="https://lbs.amap.com/api/javascript-api-v2/guide/abc/jscode">JS API 2.0</a></p></blockquote></li></ol><p>就用你刚开始高德控制后台新建的<strong>Web端</strong>的key，取key和安全密钥分别填到一下代码中，然后再继续地图的相关初始化代码<br><img src="/img/blog/amap.png" alt="高德地图JS API初始化"></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text/javascript&quot;</span>&gt;</span><span class="language-javascript"></span><br><span class="language-javascript">  <span class="hljs-variable language_">window</span>.<span class="hljs-property">_AMapSecurityConfig</span> = &#123;</span><br><span class="language-javascript">    <span class="hljs-attr">securityJsCode</span>: <span class="hljs-string">&quot;「你申请的安全密钥」&quot;</span>,</span><br><span class="language-javascript">  &#125;;</span><br><span class="language-javascript"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">script</span></span><br><span class="hljs-tag">  <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text/javascript&quot;</span></span><br><span class="hljs-tag">  <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;https://webapi.amap.com/maps?v=2.0&amp;key=你申请的key值&quot;</span></span><br><span class="hljs-tag">&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br></code></pre></td></tr></table></figure><p>例如我生成的页面中，最下面的代码就是地图的js初始化<br><img src="/img/blog/amap2.png" alt="高德地图JS API初始化"></p><h2 id="四、完成规划"><a href="#四、完成规划" class="headerlink" title="四、完成规划"></a>四、完成规划</h2><p>最后再根据生成好的页面，进行相应的行程调整和规划，然后将生成好的html文件，丢到任意可以在线预览网页的服务器即可，恭喜你完成了你的旅行规划！！</p>]]></content>
    
    
    <categories>
      
      <category>前端</category>
      
      <category>AI</category>
      
    </categories>
    
    
    <tags>
      
      <tag>前端开发</tag>
      
      <tag>HTML</tag>
      
      <tag>CSS</tag>
      
      <tag>Javascript</tag>
      
      <tag>AI</tag>
      
      <tag>MCP</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>分享一个可爱的loading小仓鼠</title>
    <link href="/2024/07/11/fed13/"/>
    <url>/2024/07/11/fed13/</url>
    
    <content type="html"><![CDATA[<blockquote><p>来源：<a href="https://uiverse.io/Nawsome/wet-mayfly-23">https://uiverse.io/Nawsome/wet-mayfly-23</a></p></blockquote><style>.wheel-and-hamster {  --dur: 1s;  position: relative;  width: 12em;  height: 12em;  font-size: 14px;}.wheel, .hamster, .hamster div, .spoke {  position: absolute;}.wheel, .spoke {  border-radius: 50%;  top: 0;  left: 0;  width: 100%;  height: 100%;}.wheel {  background: radial-gradient(100% 100% at center, rgba(153, 153, 153, 0) 47.8%, #999 48%);  z-index: 2;}.hamster {  animation: hamster var(--dur) ease-in-out infinite;  top: 50%;  left: calc(50% - 3.5em);  width: 7em;  height: 3.75em;  transform: rotate(4deg) translate(-0.8em, 1.85em);  transform-origin: 50% 0;  z-index: 1;}.hamster__head {  animation: hamsterHead var(--dur) ease-in-out infinite;  background: #f48c25;  border-radius: 70% 30% 0 100% / 40% 25% 25% 60%;  box-shadow: 0 -0.25em 0 #facc9e inset, 0.75em -1.55em 0 #fce6cf inset;  top: 0;  left: -2em;  width: 2.75em;  height: 2.5em;  transform-origin: 100% 50%;}.hamster__ear {  animation: hamsterEar var(--dur) ease-in-out infinite;  background: #fbb6b6;  border-radius: 50%;  box-shadow: -0.25em 0 #f48c25 inset;  top: -0.25em;  right: -0.25em;  width: 0.75em;  height: 0.75em;  transform-origin: 50% 75%;}.hamster__eye {  animation: hamsterEye var(--dur) linear infinite;  background-color: black;  border-radius: 50%;  top: 0.375em;  left: 1.25em;  width: 0.5em;  height: 0.5em;}.hamster__nose {  background: #f98686;  border-radius: 35% 65% 85% 15% / 70% 50% 50% 30%;  top: 0.75em;  left: 0;  width: 0.2em;  height: 0.25em;}.hamster__body {  animation: hamsterBody var(--dur) ease-in-out infinite;  background: #fce6cf;  border-radius: 50% 30% 50% 30% / 15% 60% 40% 40%;  box-shadow: 0.1em 0.75em 0 #f48c25 inset, 0.15em -0.5em 0 #facc9e inset;  top: 0.25em;  left: 2em;  width: 4.5em;  height: 3em;  transform-origin: 17% 50%;  transform-style: preserve-3d;}.hamster__limb--fr, .hamster__limb--fl {  clip-path: polygon(0 0, 100% 0, 70% 80%, 60% 100%, 0% 100%, 40% 80%);  top: 2em;  left: 0.5em;  width: 1em;  height: 1.5em;  transform-origin: 50% 0;}.hamster__limb--fr {  animation: hamsterFRLimb var(--dur) linear infinite;  background: linear-gradient(#facc9e 80%, #f98686 80%);  transform: rotate(15deg) translateZ(-1px);}.hamster__limb--fl {  animation: hamsterFLLimb var(--dur) linear infinite;  background: linear-gradient(#fce6cf 80%, #fbb6b6 80%);  transform: rotate(15deg);}.hamster__limb--br, .hamster__limb--bl {  border-radius: 0.75em 0.75em 0 0;  clip-path: polygon(0 0, 100% 0, 100% 30%, 70% 90%, 70% 100%, 30% 100%, 40% 90%, 0% 30%);  top: 1em;  left: 2.8em;  width: 1.5em;  height: 2.5em;  transform-origin: 50% 30%;}.hamster__limb--br {  animation: hamsterBRLimb var(--dur) linear infinite;  background: linear-gradient(#facc9e 90%, #f98686 90%);  transform: rotate(-25deg) translateZ(-1px);}.hamster__limb--bl {  animation: hamsterBLLimb var(--dur) linear infinite;  background: linear-gradient(#fce6cf 90%, #fbb6b6 90%);  transform: rotate(-25deg);}.hamster__tail {  animation: hamsterTail var(--dur) linear infinite;  background: #fbb6b6;  border-radius: 0.25em 50% 50% 0.25em;  box-shadow: 0 -0.2em 0 #f98686 inset;  top: 1.5em;  right: -0.5em;  width: 1em;  height: 0.5em;  transform: rotate(30deg) translateZ(-1px);  transform-origin: 0.25em 0.25em;}.spoke {  animation: spoke var(--dur) linear infinite;  background: radial-gradient(100% 100% at center, #999 4.8%, rgba(153, 153, 153, 0) 5%), linear-gradient(rgba(140, 140, 140, 0) 46.9%, #a6a6a6 47% 52.9%, rgba(166, 166, 166, 0) 53%) 50% 50% / 99% 99% no-repeat;}/* Animations */@keyframes hamster {  from, to {    transform: rotate(4deg) translate(-0.8em, 1.85em);  }  50% {    transform: rotate(0) translate(-0.8em, 1.85em);  }}@keyframes hamsterHead {  from, 25%, 50%, 75%, to {    transform: rotate(0);  }  12.5%, 37.5%, 62.5%, 87.5% {    transform: rotate(8deg);  }}@keyframes hamsterEye {  from, 90%, to {    transform: scaleY(1);  }  95% {    transform: scaleY(0);  }}@keyframes hamsterEar {  from, 25%, 50%, 75%, to {    transform: rotate(0);  }  12.5%, 37.5%, 62.5%, 87.5% {    transform: rotate(12deg);  }}@keyframes hamsterBody {  from, 25%, 50%, 75%, to {    transform: rotate(0);  }  12.5%, 37.5%, 62.5%, 87.5% {    transform: rotate(-2deg);  }}@keyframes hamsterFRLimb {  from, 25%, 50%, 75%, to {    transform: rotate(50deg) translateZ(-1px);  }  12.5%, 37.5%, 62.5%, 87.5% {    transform: rotate(-30deg) translateZ(-1px);  }}@keyframes hamsterFLLimb {  from, 25%, 50%, 75%, to {    transform: rotate(-30deg);  }  12.5%, 37.5%, 62.5%, 87.5% {    transform: rotate(50deg);  }}@keyframes hamsterBRLimb {  from, 25%, 50%, 75%, to {    transform: rotate(-60deg) translateZ(-1px);  }  12.5%, 37.5%, 62.5%, 87.5% {    transform: rotate(20deg) translateZ(-1px);  }}@keyframes hamsterBLLimb {  from, 25%, 50%, 75%, to {    transform: rotate(20deg);  }  12.5%, 37.5%, 62.5%, 87.5% {    transform: rotate(-60deg);  }}@keyframes hamsterTail {  from, 25%, 50%, 75%, to {    transform: rotate(30deg) translateZ(-1px);  }  12.5%, 37.5%, 62.5%, 87.5% {    transform: rotate(10deg) translateZ(-1px);  }}@keyframes spoke {  from {    transform: rotate(0);  }  to {    transform: rotate(-1turn);  }}</style><div aria-label="Orange and tan hamster running in a metal wheel" role="img" class="wheel-and-hamster">    <div class="wheel"></div>    <div class="hamster">        <div class="hamster__body">            <div class="hamster__head">                <div class="hamster__ear"></div>                <div class="hamster__eye"></div>                <div class="hamster__nose"></div>            </div>            <div class="hamster__limb hamster__limb--fr"></div>            <div class="hamster__limb hamster__limb--fl"></div>            <div class="hamster__limb hamster__limb--br"></div>            <div class="hamster__limb hamster__limb--bl"></div>            <div class="hamster__tail"></div>        </div>    </div>    <div class="spoke"></div></div><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">aria-label</span>=<span class="hljs-string">&quot;Orange and tan hamster running in a metal wheel&quot;</span> <span class="hljs-attr">role</span>=<span class="hljs-string">&quot;img&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;wheel-and-hamster&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;wheel&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;hamster&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;hamster__body&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;hamster__head&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;hamster__ear&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;hamster__eye&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;hamster__nose&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;hamster__limb hamster__limb--fr&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;hamster__limb hamster__limb--fl&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;hamster__limb hamster__limb--br&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;hamster__limb hamster__limb--bl&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;hamster__tail&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;spoke&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br></code></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-class">.wheel-and-hamster</span> &#123;<br>  <span class="hljs-attr">--dur</span>: <span class="hljs-number">1s</span>;<br>  <span class="hljs-attribute">position</span>: relative;<br>  <span class="hljs-attribute">width</span>: <span class="hljs-number">12em</span>;<br>  <span class="hljs-attribute">height</span>: <span class="hljs-number">12em</span>;<br>  <span class="hljs-attribute">font-size</span>: <span class="hljs-number">14px</span>;<br>&#125;<br><br><span class="hljs-selector-class">.wheel</span>,<br><span class="hljs-selector-class">.hamster</span>,<br><span class="hljs-selector-class">.hamster</span> <span class="hljs-selector-tag">div</span>,<br><span class="hljs-selector-class">.spoke</span> &#123;<br>  <span class="hljs-attribute">position</span>: absolute;<br>&#125;<br><br><span class="hljs-selector-class">.wheel</span>,<br><span class="hljs-selector-class">.spoke</span> &#123;<br>  <span class="hljs-attribute">border-radius</span>: <span class="hljs-number">50%</span>;<br>  <span class="hljs-attribute">top</span>: <span class="hljs-number">0</span>;<br>  <span class="hljs-attribute">left</span>: <span class="hljs-number">0</span>;<br>  <span class="hljs-attribute">width</span>: <span class="hljs-number">100%</span>;<br>  <span class="hljs-attribute">height</span>: <span class="hljs-number">100%</span>;<br>&#125;<br><br><span class="hljs-selector-class">.wheel</span> &#123;<br>  <span class="hljs-attribute">background</span>: <span class="hljs-built_in">radial-gradient</span>(<span class="hljs-number">100%</span> <span class="hljs-number">100%</span> at center,<span class="hljs-built_in">hsla</span>(<span class="hljs-number">0</span>,<span class="hljs-number">0%</span>,<span class="hljs-number">60%</span>,<span class="hljs-number">0</span>) <span class="hljs-number">47.8%</span>,<span class="hljs-built_in">hsl</span>(<span class="hljs-number">0</span>,<span class="hljs-number">0%</span>,<span class="hljs-number">60%</span>) <span class="hljs-number">48%</span>);<br>  <span class="hljs-attribute">z-index</span>: <span class="hljs-number">2</span>;<br>&#125;<br><br><span class="hljs-selector-class">.hamster</span> &#123;<br>  <span class="hljs-attribute">animation</span>: hamster <span class="hljs-built_in">var</span>(--dur) ease-in-out infinite;<br>  <span class="hljs-attribute">top</span>: <span class="hljs-number">50%</span>;<br>  <span class="hljs-attribute">left</span>: <span class="hljs-built_in">calc</span>(<span class="hljs-number">50%</span> - <span class="hljs-number">3.5em</span>);<br>  <span class="hljs-attribute">width</span>: <span class="hljs-number">7em</span>;<br>  <span class="hljs-attribute">height</span>: <span class="hljs-number">3.75em</span>;<br>  <span class="hljs-attribute">transform</span>: <span class="hljs-built_in">rotate</span>(<span class="hljs-number">4deg</span>) <span class="hljs-built_in">translate</span>(-<span class="hljs-number">0.8em</span>,<span class="hljs-number">1.85em</span>);<br>  <span class="hljs-attribute">transform-origin</span>: <span class="hljs-number">50%</span> <span class="hljs-number">0</span>;<br>  <span class="hljs-attribute">z-index</span>: <span class="hljs-number">1</span>;<br>&#125;<br><br><span class="hljs-selector-class">.hamster__head</span> &#123;<br>  <span class="hljs-attribute">animation</span>: hamsterHead <span class="hljs-built_in">var</span>(--dur) ease-in-out infinite;<br>  <span class="hljs-attribute">background</span>: <span class="hljs-built_in">hsl</span>(<span class="hljs-number">30</span>,<span class="hljs-number">90%</span>,<span class="hljs-number">55%</span>);<br>  <span class="hljs-attribute">border-radius</span>: <span class="hljs-number">70%</span> <span class="hljs-number">30%</span> <span class="hljs-number">0</span> <span class="hljs-number">100%</span> / <span class="hljs-number">40%</span> <span class="hljs-number">25%</span> <span class="hljs-number">25%</span> <span class="hljs-number">60%</span>;<br>  <span class="hljs-attribute">box-shadow</span>: <span class="hljs-number">0</span> -<span class="hljs-number">0.25em</span> <span class="hljs-number">0</span> <span class="hljs-built_in">hsl</span>(<span class="hljs-number">30</span>,<span class="hljs-number">90%</span>,<span class="hljs-number">80%</span>) inset,<br><span class="hljs-number">0.75em</span> -<span class="hljs-number">1.55em</span> <span class="hljs-number">0</span> <span class="hljs-built_in">hsl</span>(<span class="hljs-number">30</span>,<span class="hljs-number">90%</span>,<span class="hljs-number">90%</span>) inset;<br>  <span class="hljs-attribute">top</span>: <span class="hljs-number">0</span>;<br>  <span class="hljs-attribute">left</span>: -<span class="hljs-number">2em</span>;<br>  <span class="hljs-attribute">width</span>: <span class="hljs-number">2.75em</span>;<br>  <span class="hljs-attribute">height</span>: <span class="hljs-number">2.5em</span>;<br>  <span class="hljs-attribute">transform-origin</span>: <span class="hljs-number">100%</span> <span class="hljs-number">50%</span>;<br>&#125;<br><br><span class="hljs-selector-class">.hamster__ear</span> &#123;<br>  <span class="hljs-attribute">animation</span>: hamsterEar <span class="hljs-built_in">var</span>(--dur) ease-in-out infinite;<br>  <span class="hljs-attribute">background</span>: <span class="hljs-built_in">hsl</span>(<span class="hljs-number">0</span>,<span class="hljs-number">90%</span>,<span class="hljs-number">85%</span>);<br>  <span class="hljs-attribute">border-radius</span>: <span class="hljs-number">50%</span>;<br>  <span class="hljs-attribute">box-shadow</span>: -<span class="hljs-number">0.25em</span> <span class="hljs-number">0</span> <span class="hljs-built_in">hsl</span>(<span class="hljs-number">30</span>,<span class="hljs-number">90%</span>,<span class="hljs-number">55%</span>) inset;<br>  <span class="hljs-attribute">top</span>: -<span class="hljs-number">0.25em</span>;<br>  <span class="hljs-attribute">right</span>: -<span class="hljs-number">0.25em</span>;<br>  <span class="hljs-attribute">width</span>: <span class="hljs-number">0.75em</span>;<br>  <span class="hljs-attribute">height</span>: <span class="hljs-number">0.75em</span>;<br>  <span class="hljs-attribute">transform-origin</span>: <span class="hljs-number">50%</span> <span class="hljs-number">75%</span>;<br>&#125;<br><br><span class="hljs-selector-class">.hamster__eye</span> &#123;<br>  <span class="hljs-attribute">animation</span>: hamsterEye <span class="hljs-built_in">var</span>(--dur) linear infinite;<br>  <span class="hljs-attribute">background-color</span>: <span class="hljs-built_in">hsl</span>(<span class="hljs-number">0</span>,<span class="hljs-number">0%</span>,<span class="hljs-number">0%</span>);<br>  <span class="hljs-attribute">border-radius</span>: <span class="hljs-number">50%</span>;<br>  <span class="hljs-attribute">top</span>: <span class="hljs-number">0.375em</span>;<br>  <span class="hljs-attribute">left</span>: <span class="hljs-number">1.25em</span>;<br>  <span class="hljs-attribute">width</span>: <span class="hljs-number">0.5em</span>;<br>  <span class="hljs-attribute">height</span>: <span class="hljs-number">0.5em</span>;<br>&#125;<br><br><span class="hljs-selector-class">.hamster__nose</span> &#123;<br>  <span class="hljs-attribute">background</span>: <span class="hljs-built_in">hsl</span>(<span class="hljs-number">0</span>,<span class="hljs-number">90%</span>,<span class="hljs-number">75%</span>);<br>  <span class="hljs-attribute">border-radius</span>: <span class="hljs-number">35%</span> <span class="hljs-number">65%</span> <span class="hljs-number">85%</span> <span class="hljs-number">15%</span> / <span class="hljs-number">70%</span> <span class="hljs-number">50%</span> <span class="hljs-number">50%</span> <span class="hljs-number">30%</span>;<br>  <span class="hljs-attribute">top</span>: <span class="hljs-number">0.75em</span>;<br>  <span class="hljs-attribute">left</span>: <span class="hljs-number">0</span>;<br>  <span class="hljs-attribute">width</span>: <span class="hljs-number">0.2em</span>;<br>  <span class="hljs-attribute">height</span>: <span class="hljs-number">0.25em</span>;<br>&#125;<br><br><span class="hljs-selector-class">.hamster__body</span> &#123;<br>  <span class="hljs-attribute">animation</span>: hamsterBody <span class="hljs-built_in">var</span>(--dur) ease-in-out infinite;<br>  <span class="hljs-attribute">background</span>: <span class="hljs-built_in">hsl</span>(<span class="hljs-number">30</span>,<span class="hljs-number">90%</span>,<span class="hljs-number">90%</span>);<br>  <span class="hljs-attribute">border-radius</span>: <span class="hljs-number">50%</span> <span class="hljs-number">30%</span> <span class="hljs-number">50%</span> <span class="hljs-number">30%</span> / <span class="hljs-number">15%</span> <span class="hljs-number">60%</span> <span class="hljs-number">40%</span> <span class="hljs-number">40%</span>;<br>  <span class="hljs-attribute">box-shadow</span>: <span class="hljs-number">0.1em</span> <span class="hljs-number">0.75em</span> <span class="hljs-number">0</span> <span class="hljs-built_in">hsl</span>(<span class="hljs-number">30</span>,<span class="hljs-number">90%</span>,<span class="hljs-number">55%</span>) inset,<br><span class="hljs-number">0.15em</span> -<span class="hljs-number">0.5em</span> <span class="hljs-number">0</span> <span class="hljs-built_in">hsl</span>(<span class="hljs-number">30</span>,<span class="hljs-number">90%</span>,<span class="hljs-number">80%</span>) inset;<br>  <span class="hljs-attribute">top</span>: <span class="hljs-number">0.25em</span>;<br>  <span class="hljs-attribute">left</span>: <span class="hljs-number">2em</span>;<br>  <span class="hljs-attribute">width</span>: <span class="hljs-number">4.5em</span>;<br>  <span class="hljs-attribute">height</span>: <span class="hljs-number">3em</span>;<br>  <span class="hljs-attribute">transform-origin</span>: <span class="hljs-number">17%</span> <span class="hljs-number">50%</span>;<br>  <span class="hljs-attribute">transform-style</span>: preserve-<span class="hljs-number">3</span>d;<br>&#125;<br><br><span class="hljs-selector-class">.hamster__limb--fr</span>,<br><span class="hljs-selector-class">.hamster__limb--fl</span> &#123;<br>  <span class="hljs-attribute">clip-path</span>: <span class="hljs-built_in">polygon</span>(<span class="hljs-number">0</span> <span class="hljs-number">0</span>,<span class="hljs-number">100%</span> <span class="hljs-number">0</span>,<span class="hljs-number">70%</span> <span class="hljs-number">80%</span>,<span class="hljs-number">60%</span> <span class="hljs-number">100%</span>,<span class="hljs-number">0%</span> <span class="hljs-number">100%</span>,<span class="hljs-number">40%</span> <span class="hljs-number">80%</span>);<br>  <span class="hljs-attribute">top</span>: <span class="hljs-number">2em</span>;<br>  <span class="hljs-attribute">left</span>: <span class="hljs-number">0.5em</span>;<br>  <span class="hljs-attribute">width</span>: <span class="hljs-number">1em</span>;<br>  <span class="hljs-attribute">height</span>: <span class="hljs-number">1.5em</span>;<br>  <span class="hljs-attribute">transform-origin</span>: <span class="hljs-number">50%</span> <span class="hljs-number">0</span>;<br>&#125;<br><br><span class="hljs-selector-class">.hamster__limb--fr</span> &#123;<br>  <span class="hljs-attribute">animation</span>: hamsterFRLimb <span class="hljs-built_in">var</span>(--dur) linear infinite;<br>  <span class="hljs-attribute">background</span>: <span class="hljs-built_in">linear-gradient</span>(<span class="hljs-built_in">hsl</span>(<span class="hljs-number">30</span>,<span class="hljs-number">90%</span>,<span class="hljs-number">80%</span>) <span class="hljs-number">80%</span>,<span class="hljs-built_in">hsl</span>(<span class="hljs-number">0</span>,<span class="hljs-number">90%</span>,<span class="hljs-number">75%</span>) <span class="hljs-number">80%</span>);<br>  <span class="hljs-attribute">transform</span>: <span class="hljs-built_in">rotate</span>(<span class="hljs-number">15deg</span>) <span class="hljs-built_in">translateZ</span>(-<span class="hljs-number">1px</span>);<br>&#125;<br><br><span class="hljs-selector-class">.hamster__limb--fl</span> &#123;<br>  <span class="hljs-attribute">animation</span>: hamsterFLLimb <span class="hljs-built_in">var</span>(--dur) linear infinite;<br>  <span class="hljs-attribute">background</span>: <span class="hljs-built_in">linear-gradient</span>(<span class="hljs-built_in">hsl</span>(<span class="hljs-number">30</span>,<span class="hljs-number">90%</span>,<span class="hljs-number">90%</span>) <span class="hljs-number">80%</span>,<span class="hljs-built_in">hsl</span>(<span class="hljs-number">0</span>,<span class="hljs-number">90%</span>,<span class="hljs-number">85%</span>) <span class="hljs-number">80%</span>);<br>  <span class="hljs-attribute">transform</span>: <span class="hljs-built_in">rotate</span>(<span class="hljs-number">15deg</span>);<br>&#125;<br><br><span class="hljs-selector-class">.hamster__limb--br</span>,<br><span class="hljs-selector-class">.hamster__limb--bl</span> &#123;<br>  <span class="hljs-attribute">border-radius</span>: <span class="hljs-number">0.75em</span> <span class="hljs-number">0.75em</span> <span class="hljs-number">0</span> <span class="hljs-number">0</span>;<br>  <span class="hljs-attribute">clip-path</span>: <span class="hljs-built_in">polygon</span>(<span class="hljs-number">0</span> <span class="hljs-number">0</span>,<span class="hljs-number">100%</span> <span class="hljs-number">0</span>,<span class="hljs-number">100%</span> <span class="hljs-number">30%</span>,<span class="hljs-number">70%</span> <span class="hljs-number">90%</span>,<span class="hljs-number">70%</span> <span class="hljs-number">100%</span>,<span class="hljs-number">30%</span> <span class="hljs-number">100%</span>,<span class="hljs-number">40%</span> <span class="hljs-number">90%</span>,<span class="hljs-number">0%</span> <span class="hljs-number">30%</span>);<br>  <span class="hljs-attribute">top</span>: <span class="hljs-number">1em</span>;<br>  <span class="hljs-attribute">left</span>: <span class="hljs-number">2.8em</span>;<br>  <span class="hljs-attribute">width</span>: <span class="hljs-number">1.5em</span>;<br>  <span class="hljs-attribute">height</span>: <span class="hljs-number">2.5em</span>;<br>  <span class="hljs-attribute">transform-origin</span>: <span class="hljs-number">50%</span> <span class="hljs-number">30%</span>;<br>&#125;<br><br><span class="hljs-selector-class">.hamster__limb--br</span> &#123;<br>  <span class="hljs-attribute">animation</span>: hamsterBRLimb <span class="hljs-built_in">var</span>(--dur) linear infinite;<br>  <span class="hljs-attribute">background</span>: <span class="hljs-built_in">linear-gradient</span>(<span class="hljs-built_in">hsl</span>(<span class="hljs-number">30</span>,<span class="hljs-number">90%</span>,<span class="hljs-number">80%</span>) <span class="hljs-number">90%</span>,<span class="hljs-built_in">hsl</span>(<span class="hljs-number">0</span>,<span class="hljs-number">90%</span>,<span class="hljs-number">75%</span>) <span class="hljs-number">90%</span>);<br>  <span class="hljs-attribute">transform</span>: <span class="hljs-built_in">rotate</span>(-<span class="hljs-number">25deg</span>) <span class="hljs-built_in">translateZ</span>(-<span class="hljs-number">1px</span>);<br>&#125;<br><br><span class="hljs-selector-class">.hamster__limb--bl</span> &#123;<br>  <span class="hljs-attribute">animation</span>: hamsterBLLimb <span class="hljs-built_in">var</span>(--dur) linear infinite;<br>  <span class="hljs-attribute">background</span>: <span class="hljs-built_in">linear-gradient</span>(<span class="hljs-built_in">hsl</span>(<span class="hljs-number">30</span>,<span class="hljs-number">90%</span>,<span class="hljs-number">90%</span>) <span class="hljs-number">90%</span>,<span class="hljs-built_in">hsl</span>(<span class="hljs-number">0</span>,<span class="hljs-number">90%</span>,<span class="hljs-number">85%</span>) <span class="hljs-number">90%</span>);<br>  <span class="hljs-attribute">transform</span>: <span class="hljs-built_in">rotate</span>(-<span class="hljs-number">25deg</span>);<br>&#125;<br><br><span class="hljs-selector-class">.hamster__tail</span> &#123;<br>  <span class="hljs-attribute">animation</span>: hamsterTail <span class="hljs-built_in">var</span>(--dur) linear infinite;<br>  <span class="hljs-attribute">background</span>: <span class="hljs-built_in">hsl</span>(<span class="hljs-number">0</span>,<span class="hljs-number">90%</span>,<span class="hljs-number">85%</span>);<br>  <span class="hljs-attribute">border-radius</span>: <span class="hljs-number">0.25em</span> <span class="hljs-number">50%</span> <span class="hljs-number">50%</span> <span class="hljs-number">0.25em</span>;<br>  <span class="hljs-attribute">box-shadow</span>: <span class="hljs-number">0</span> -<span class="hljs-number">0.2em</span> <span class="hljs-number">0</span> <span class="hljs-built_in">hsl</span>(<span class="hljs-number">0</span>,<span class="hljs-number">90%</span>,<span class="hljs-number">75%</span>) inset;<br>  <span class="hljs-attribute">top</span>: <span class="hljs-number">1.5em</span>;<br>  <span class="hljs-attribute">right</span>: -<span class="hljs-number">0.5em</span>;<br>  <span class="hljs-attribute">width</span>: <span class="hljs-number">1em</span>;<br>  <span class="hljs-attribute">height</span>: <span class="hljs-number">0.5em</span>;<br>  <span class="hljs-attribute">transform</span>: <span class="hljs-built_in">rotate</span>(<span class="hljs-number">30deg</span>) <span class="hljs-built_in">translateZ</span>(-<span class="hljs-number">1px</span>);<br>  <span class="hljs-attribute">transform-origin</span>: <span class="hljs-number">0.25em</span> <span class="hljs-number">0.25em</span>;<br>&#125;<br><br><span class="hljs-selector-class">.spoke</span> &#123;<br>  <span class="hljs-attribute">animation</span>: spoke <span class="hljs-built_in">var</span>(--dur) linear infinite;<br>  <span class="hljs-attribute">background</span>: <span class="hljs-built_in">radial-gradient</span>(<span class="hljs-number">100%</span> <span class="hljs-number">100%</span> at center,<span class="hljs-built_in">hsl</span>(<span class="hljs-number">0</span>,<span class="hljs-number">0%</span>,<span class="hljs-number">60%</span>) <span class="hljs-number">4.8%</span>,<span class="hljs-built_in">hsla</span>(<span class="hljs-number">0</span>,<span class="hljs-number">0%</span>,<span class="hljs-number">60%</span>,<span class="hljs-number">0</span>) <span class="hljs-number">5%</span>),<br><span class="hljs-built_in">linear-gradient</span>(<span class="hljs-built_in">hsla</span>(<span class="hljs-number">0</span>,<span class="hljs-number">0%</span>,<span class="hljs-number">55%</span>,<span class="hljs-number">0</span>) <span class="hljs-number">46.9%</span>,<span class="hljs-built_in">hsl</span>(<span class="hljs-number">0</span>,<span class="hljs-number">0%</span>,<span class="hljs-number">65%</span>) <span class="hljs-number">47%</span> <span class="hljs-number">52.9%</span>,<span class="hljs-built_in">hsla</span>(<span class="hljs-number">0</span>,<span class="hljs-number">0%</span>,<span class="hljs-number">65%</span>,<span class="hljs-number">0</span>) <span class="hljs-number">53%</span>) <span class="hljs-number">50%</span> <span class="hljs-number">50%</span> / <span class="hljs-number">99%</span> <span class="hljs-number">99%</span> no-repeat;<br>&#125;<br><br><span class="hljs-comment">/* Animations */</span><br><span class="hljs-keyword">@keyframes</span> hamster &#123;<br>  <span class="hljs-selector-tag">from</span>, <span class="hljs-selector-tag">to</span> &#123;<br>    <span class="hljs-attribute">transform</span>: <span class="hljs-built_in">rotate</span>(<span class="hljs-number">4deg</span>) <span class="hljs-built_in">translate</span>(-<span class="hljs-number">0.8em</span>,<span class="hljs-number">1.85em</span>);<br>  &#125;<br><br>  <span class="hljs-number">50%</span> &#123;<br>    <span class="hljs-attribute">transform</span>: <span class="hljs-built_in">rotate</span>(<span class="hljs-number">0</span>) <span class="hljs-built_in">translate</span>(-<span class="hljs-number">0.8em</span>,<span class="hljs-number">1.85em</span>);<br>  &#125;<br>&#125;<br><br><span class="hljs-keyword">@keyframes</span> hamsterHead &#123;<br>  <span class="hljs-selector-tag">from</span>, <span class="hljs-number">25%</span>, <span class="hljs-number">50%</span>, <span class="hljs-number">75%</span>, <span class="hljs-selector-tag">to</span> &#123;<br>    <span class="hljs-attribute">transform</span>: <span class="hljs-built_in">rotate</span>(<span class="hljs-number">0</span>);<br>  &#125;<br><br>  <span class="hljs-number">12.5%</span>, <span class="hljs-number">37.5%</span>, <span class="hljs-number">62.5%</span>, <span class="hljs-number">87.5%</span> &#123;<br>    <span class="hljs-attribute">transform</span>: <span class="hljs-built_in">rotate</span>(<span class="hljs-number">8deg</span>);<br>  &#125;<br>&#125;<br><br><span class="hljs-keyword">@keyframes</span> hamsterEye &#123;<br>  <span class="hljs-selector-tag">from</span>, <span class="hljs-number">90%</span>, <span class="hljs-selector-tag">to</span> &#123;<br>    <span class="hljs-attribute">transform</span>: <span class="hljs-built_in">scaleY</span>(<span class="hljs-number">1</span>);<br>  &#125;<br><br>  <span class="hljs-number">95%</span> &#123;<br>    <span class="hljs-attribute">transform</span>: <span class="hljs-built_in">scaleY</span>(<span class="hljs-number">0</span>);<br>  &#125;<br>&#125;<br><br><span class="hljs-keyword">@keyframes</span> hamsterEar &#123;<br>  <span class="hljs-selector-tag">from</span>, <span class="hljs-number">25%</span>, <span class="hljs-number">50%</span>, <span class="hljs-number">75%</span>, <span class="hljs-selector-tag">to</span> &#123;<br>    <span class="hljs-attribute">transform</span>: <span class="hljs-built_in">rotate</span>(<span class="hljs-number">0</span>);<br>  &#125;<br><br>  <span class="hljs-number">12.5%</span>, <span class="hljs-number">37.5%</span>, <span class="hljs-number">62.5%</span>, <span class="hljs-number">87.5%</span> &#123;<br>    <span class="hljs-attribute">transform</span>: <span class="hljs-built_in">rotate</span>(<span class="hljs-number">12deg</span>);<br>  &#125;<br>&#125;<br><br><span class="hljs-keyword">@keyframes</span> hamsterBody &#123;<br>  <span class="hljs-selector-tag">from</span>, <span class="hljs-number">25%</span>, <span class="hljs-number">50%</span>, <span class="hljs-number">75%</span>, <span class="hljs-selector-tag">to</span> &#123;<br>    <span class="hljs-attribute">transform</span>: <span class="hljs-built_in">rotate</span>(<span class="hljs-number">0</span>);<br>  &#125;<br><br>  <span class="hljs-number">12.5%</span>, <span class="hljs-number">37.5%</span>, <span class="hljs-number">62.5%</span>, <span class="hljs-number">87.5%</span> &#123;<br>    <span class="hljs-attribute">transform</span>: <span class="hljs-built_in">rotate</span>(-<span class="hljs-number">2deg</span>);<br>  &#125;<br>&#125;<br><br><span class="hljs-keyword">@keyframes</span> hamsterFRLimb &#123;<br>  <span class="hljs-selector-tag">from</span>, <span class="hljs-number">25%</span>, <span class="hljs-number">50%</span>, <span class="hljs-number">75%</span>, <span class="hljs-selector-tag">to</span> &#123;<br>    <span class="hljs-attribute">transform</span>: <span class="hljs-built_in">rotate</span>(<span class="hljs-number">50deg</span>) <span class="hljs-built_in">translateZ</span>(-<span class="hljs-number">1px</span>);<br>  &#125;<br><br>  <span class="hljs-number">12.5%</span>, <span class="hljs-number">37.5%</span>, <span class="hljs-number">62.5%</span>, <span class="hljs-number">87.5%</span> &#123;<br>    <span class="hljs-attribute">transform</span>: <span class="hljs-built_in">rotate</span>(-<span class="hljs-number">30deg</span>) <span class="hljs-built_in">translateZ</span>(-<span class="hljs-number">1px</span>);<br>  &#125;<br>&#125;<br><br><span class="hljs-keyword">@keyframes</span> hamsterFLLimb &#123;<br>  <span class="hljs-selector-tag">from</span>, <span class="hljs-number">25%</span>, <span class="hljs-number">50%</span>, <span class="hljs-number">75%</span>, <span class="hljs-selector-tag">to</span> &#123;<br>    <span class="hljs-attribute">transform</span>: <span class="hljs-built_in">rotate</span>(-<span class="hljs-number">30deg</span>);<br>  &#125;<br><br>  <span class="hljs-number">12.5%</span>, <span class="hljs-number">37.5%</span>, <span class="hljs-number">62.5%</span>, <span class="hljs-number">87.5%</span> &#123;<br>    <span class="hljs-attribute">transform</span>: <span class="hljs-built_in">rotate</span>(<span class="hljs-number">50deg</span>);<br>  &#125;<br>&#125;<br><br><span class="hljs-keyword">@keyframes</span> hamsterBRLimb &#123;<br>  <span class="hljs-selector-tag">from</span>, <span class="hljs-number">25%</span>, <span class="hljs-number">50%</span>, <span class="hljs-number">75%</span>, <span class="hljs-selector-tag">to</span> &#123;<br>    <span class="hljs-attribute">transform</span>: <span class="hljs-built_in">rotate</span>(-<span class="hljs-number">60deg</span>) <span class="hljs-built_in">translateZ</span>(-<span class="hljs-number">1px</span>);<br>  &#125;<br><br>  <span class="hljs-number">12.5%</span>, <span class="hljs-number">37.5%</span>, <span class="hljs-number">62.5%</span>, <span class="hljs-number">87.5%</span> &#123;<br>    <span class="hljs-attribute">transform</span>: <span class="hljs-built_in">rotate</span>(<span class="hljs-number">20deg</span>) <span class="hljs-built_in">translateZ</span>(-<span class="hljs-number">1px</span>);<br>  &#125;<br>&#125;<br><br><span class="hljs-keyword">@keyframes</span> hamsterBLLimb &#123;<br>  <span class="hljs-selector-tag">from</span>, <span class="hljs-number">25%</span>, <span class="hljs-number">50%</span>, <span class="hljs-number">75%</span>, <span class="hljs-selector-tag">to</span> &#123;<br>    <span class="hljs-attribute">transform</span>: <span class="hljs-built_in">rotate</span>(<span class="hljs-number">20deg</span>);<br>  &#125;<br><br>  <span class="hljs-number">12.5%</span>, <span class="hljs-number">37.5%</span>, <span class="hljs-number">62.5%</span>, <span class="hljs-number">87.5%</span> &#123;<br>    <span class="hljs-attribute">transform</span>: <span class="hljs-built_in">rotate</span>(-<span class="hljs-number">60deg</span>);<br>  &#125;<br>&#125;<br><br><span class="hljs-keyword">@keyframes</span> hamsterTail &#123;<br>  <span class="hljs-selector-tag">from</span>, <span class="hljs-number">25%</span>, <span class="hljs-number">50%</span>, <span class="hljs-number">75%</span>, <span class="hljs-selector-tag">to</span> &#123;<br>    <span class="hljs-attribute">transform</span>: <span class="hljs-built_in">rotate</span>(<span class="hljs-number">30deg</span>) <span class="hljs-built_in">translateZ</span>(-<span class="hljs-number">1px</span>);<br>  &#125;<br><br>  <span class="hljs-number">12.5%</span>, <span class="hljs-number">37.5%</span>, <span class="hljs-number">62.5%</span>, <span class="hljs-number">87.5%</span> &#123;<br>    <span class="hljs-attribute">transform</span>: <span class="hljs-built_in">rotate</span>(<span class="hljs-number">10deg</span>) <span class="hljs-built_in">translateZ</span>(-<span class="hljs-number">1px</span>);<br>  &#125;<br>&#125;<br><br><span class="hljs-keyword">@keyframes</span> spoke &#123;<br>  <span class="hljs-selector-tag">from</span> &#123;<br>    <span class="hljs-attribute">transform</span>: <span class="hljs-built_in">rotate</span>(<span class="hljs-number">0</span>);<br>  &#125;<br><br>  <span class="hljs-selector-tag">to</span> &#123;<br>    <span class="hljs-attribute">transform</span>: <span class="hljs-built_in">rotate</span>(-<span class="hljs-number">1turn</span>);<br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>前端</category>
      
    </categories>
    
    
    <tags>
      
      <tag>前端开发</tag>
      
      <tag>HTML</tag>
      
      <tag>CSS</tag>
      
      <tag>Javascript</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>前端图片压缩方案</title>
    <link href="/2024/03/05/fed12/"/>
    <url>/2024/03/05/fed12/</url>
    
    <content type="html"><![CDATA[<blockquote><p>文章灵感：感谢张鑫旭大大的<a href="https://www.zhangxinxu.com/wordpress/2023/09/js-jpg-png-compress-tinyimg-mini/">【做了个纯前端 JPG&#x2F;PNG 尺寸缩放+压缩的在线工具】</a></p></blockquote><p>之前在公司业务中，发现低代码生成的页面里面的图片总是会尺寸超标，导致页面加载速度变慢，图片上传组件即使有硬性限制死图片的上传大小，但是也需要运营自行再去 tinypng 等等在线压缩网站再压缩一次才上传，极其不方便，刚好之前拜读了张鑫旭的纯前端压缩的介绍，所以就改造了一下公司的上传组件，下面介绍一下基本原理和代码实现</p><h2 id="压缩原理"><a href="#压缩原理" class="headerlink" title="压缩原理"></a>压缩原理</h2><h3 id="JPG-前端压缩"><a href="#JPG-前端压缩" class="headerlink" title="JPG 前端压缩"></a>JPG 前端压缩</h3><p>JPG 的压缩使用的是 canvas 的 toDataURL 方法。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs javascript">canvas.<span class="hljs-title function_">toDataURL</span>(mimeType, quality);<br></code></pre></td></tr></table></figure><p>其中 quality 就是图像的质量。</p><p>但是此方法只适合 image&#x2F;jpeg 或者 image&#x2F;webp，所以，PNG 的图像压缩无法使用此 API。</p><h3 id="PNG-前端压缩"><a href="#PNG-前端压缩" class="headerlink" title="PNG 前端压缩"></a>PNG 前端压缩</h3><p>PNG 的前端压缩使用的是 UPNG.js，项目地址：<a href="https://github.com/photopea/UPNG.js">https://github.com/photopea/UPNG.js</a></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-variable constant_">UPNG</span>.<span class="hljs-title function_">encode</span>(imgs, w, h, cnum, [dels]);<br></code></pre></td></tr></table></figure><p>其中的cnum就是用来设置PNG压缩损失的，0的话是无损。</p><h2 id="压缩流程"><a href="#压缩流程" class="headerlink" title="压缩流程"></a>压缩流程</h2><ol><li>input的file类型点击上传文件</li><li>利用<code>readAsDataURL</code>方法读取文件的URL格式（base64 编码）的字符串</li><li>判断文件类型，如果是jpg则走<code>canvas</code>进行压缩，返回base64</li><li>如果是png则走<code>UPNG</code>库进行压缩，返回base64</li><li>如果png压缩出现错误，则返回原有的base64</li><li>利用dataURItoBuffer或Uint8Array等方法将返回值转换回blob数据流</li><li>post提交数据给接口端</li></ol><h2 id="代码示例"><a href="#代码示例" class="headerlink" title="代码示例"></a>代码示例</h2><h2 id="UPNG代码"><a href="#UPNG代码" class="headerlink" title="UPNG代码"></a>UPNG代码</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs javascript">!(<span class="hljs-keyword">function</span>(<span class="hljs-params">t,e</span>)&#123;<span class="hljs-string">&#x27;object&#x27;</span>==<span class="hljs-keyword">typeof</span> <span class="hljs-built_in">exports</span>&amp;&amp;<span class="hljs-string">&#x27;undefined&#x27;</span>!=<span class="hljs-keyword">typeof</span> <span class="hljs-variable language_">module</span>?<span class="hljs-title function_">e</span>(<span class="hljs-built_in">exports</span>):<span class="hljs-string">&#x27;function&#x27;</span>==<span class="hljs-keyword">typeof</span> define&amp;&amp;define.<span class="hljs-property">amd</span>?<span class="hljs-title function_">define</span>([<span class="hljs-string">&#x27;exports&#x27;</span>],e):<span class="hljs-title function_">e</span>(((t=<span class="hljs-string">&#x27;undefined&#x27;</span>!=<span class="hljs-keyword">typeof</span> globalThis?<span class="hljs-attr">globalThis</span>:t||self).<span class="hljs-property">pako</span>=&#123;&#125;))&#125;)(<span class="hljs-variable language_">this</span>,<span class="hljs-keyword">function</span>(<span class="hljs-params">t</span>)&#123;<span class="hljs-string">&#x27;use strict&#x27;</span>;<span class="hljs-keyword">function</span> <span class="hljs-title function_">e</span>(<span class="hljs-params">t</span>)&#123;<span class="hljs-keyword">let</span> e=t.<span class="hljs-property">length</span>;<span class="hljs-keyword">for</span>(;--e&gt;=<span class="hljs-number">0</span>;)t[e]=<span class="hljs-number">0</span>&#125;<span class="hljs-keyword">const</span> a=<span class="hljs-number">256</span>,i=<span class="hljs-number">286</span>,n=<span class="hljs-number">30</span>,s=<span class="hljs-number">15</span>,r=<span class="hljs-keyword">new</span> <span class="hljs-title class_">Uint8Array</span>([<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">2</span>,<span class="hljs-number">2</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span>,<span class="hljs-number">3</span>,<span class="hljs-number">3</span>,<span class="hljs-number">3</span>,<span class="hljs-number">4</span>,<span class="hljs-number">4</span>,<span class="hljs-number">4</span>,<span class="hljs-number">4</span>,<span class="hljs-number">5</span>,<span class="hljs-number">5</span>,<span class="hljs-number">5</span>,<span class="hljs-number">5</span>,<span class="hljs-number">0</span>]),o=<span class="hljs-keyword">new</span> <span class="hljs-title class_">Uint8Array</span>([<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span>,<span class="hljs-number">3</span>,<span class="hljs-number">4</span>,<span class="hljs-number">4</span>,<span class="hljs-number">5</span>,<span class="hljs-number">5</span>,<span class="hljs-number">6</span>,<span class="hljs-number">6</span>,<span class="hljs-number">7</span>,<span class="hljs-number">7</span>,<span class="hljs-number">8</span>,<span class="hljs-number">8</span>,<span class="hljs-number">9</span>,<span class="hljs-number">9</span>,<span class="hljs-number">10</span>,<span class="hljs-number">10</span>,<span class="hljs-number">11</span>,<span class="hljs-number">11</span>,<span class="hljs-number">12</span>,<span class="hljs-number">12</span>,<span class="hljs-number">13</span>,<span class="hljs-number">13</span>]),l=<span class="hljs-keyword">new</span> <span class="hljs-title class_">Uint8Array</span>([<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span>,<span class="hljs-number">7</span>]),h=<span class="hljs-keyword">new</span> <span class="hljs-title class_">Uint8Array</span>([<span class="hljs-number">16</span>,<span class="hljs-number">17</span>,<span class="hljs-number">18</span>,<span class="hljs-number">0</span>,<span class="hljs-number">8</span>,<span class="hljs-number">7</span>,<span class="hljs-number">9</span>,<span class="hljs-number">6</span>,<span class="hljs-number">10</span>,<span class="hljs-number">5</span>,<span class="hljs-number">11</span>,<span class="hljs-number">4</span>,<span class="hljs-number">12</span>,<span class="hljs-number">3</span>,<span class="hljs-number">13</span>,<span class="hljs-number">2</span>,<span class="hljs-number">14</span>,<span class="hljs-number">1</span>,<span class="hljs-number">15</span>]),d=<span class="hljs-keyword">new</span> <span class="hljs-title class_">Array</span>(<span class="hljs-number">576</span>);<span class="hljs-title function_">e</span>(d);<span class="hljs-keyword">const</span> _=<span class="hljs-keyword">new</span> <span class="hljs-title class_">Array</span>(<span class="hljs-number">60</span>);<span class="hljs-title function_">e</span>(_);<span class="hljs-keyword">const</span> f=<span class="hljs-keyword">new</span> <span class="hljs-title class_">Array</span>(<span class="hljs-number">512</span>);<span class="hljs-title function_">e</span>(f);<span class="hljs-keyword">const</span> c=<span class="hljs-keyword">new</span> <span class="hljs-title class_">Array</span>(<span class="hljs-number">256</span>);<span class="hljs-title function_">e</span>(c);<span class="hljs-keyword">const</span> u=<span class="hljs-keyword">new</span> <span class="hljs-title class_">Array</span>(<span class="hljs-number">29</span>);<span class="hljs-title function_">e</span>(u);<span class="hljs-keyword">const</span> w=<span class="hljs-keyword">new</span> <span class="hljs-title class_">Array</span>(n);<span class="hljs-keyword">function</span> <span class="hljs-title function_">m</span>(<span class="hljs-params">t,e,a,i,n</span>)&#123;(<span class="hljs-variable language_">this</span>.<span class="hljs-property">static_tree</span>=t),(<span class="hljs-variable language_">this</span>.<span class="hljs-property">extra_bits</span>=e),(<span class="hljs-variable language_">this</span>.<span class="hljs-property">extra_base</span>=a),(<span class="hljs-variable language_">this</span>.<span class="hljs-property">elems</span>=i),(<span class="hljs-variable language_">this</span>.<span class="hljs-property">max_length</span>=n),(<span class="hljs-variable language_">this</span>.<span class="hljs-property">has_stree</span>=t&amp;&amp;t.<span class="hljs-property">length</span>)&#125;<span class="hljs-keyword">let</span> b,g,p;<span class="hljs-keyword">function</span> <span class="hljs-title function_">k</span>(<span class="hljs-params">t,e</span>)&#123;(<span class="hljs-variable language_">this</span>.<span class="hljs-property">dyn_tree</span>=t),(<span class="hljs-variable language_">this</span>.<span class="hljs-property">max_code</span>=<span class="hljs-number">0</span>),(<span class="hljs-variable language_">this</span>.<span class="hljs-property">stat_desc</span>=e)&#125;<span class="hljs-title function_">e</span>(w);<span class="hljs-keyword">const</span> <span class="hljs-title function_">v</span>=(<span class="hljs-params">t</span>)=&gt;(t&lt;<span class="hljs-number">256</span>?f[t]:f[<span class="hljs-number">256</span>+(t&gt;&gt;&gt;<span class="hljs-number">7</span>)]),y=<span class="hljs-function">(<span class="hljs-params">t,e</span>)=&gt;</span>&#123;(t.<span class="hljs-property">pending_buf</span>[t.<span class="hljs-property">pending</span>++]=<span class="hljs-number">255</span>&amp;e),(t.<span class="hljs-property">pending_buf</span>[t.<span class="hljs-property">pending</span>++]=(e&gt;&gt;&gt;<span class="hljs-number">8</span>)&amp;<span class="hljs-number">255</span>)&#125;,x=<span class="hljs-function">(<span class="hljs-params">t,e,a</span>)=&gt;</span>&#123;t.<span class="hljs-property">bi_valid</span>&gt;<span class="hljs-number">16</span>-a?((t.<span class="hljs-property">bi_buf</span>|=(e&lt;&lt;t.<span class="hljs-property">bi_valid</span>)&amp;<span class="hljs-number">65535</span>),<span class="hljs-title function_">y</span>(t,t.<span class="hljs-property">bi_buf</span>),(t.<span class="hljs-property">bi_buf</span>=e&gt;&gt;(<span class="hljs-number">16</span>-t.<span class="hljs-property">bi_valid</span>)),(t.<span class="hljs-property">bi_valid</span>+=a-<span class="hljs-number">16</span>)):((t.<span class="hljs-property">bi_buf</span>|=(e&lt;&lt;t.<span class="hljs-property">bi_valid</span>)&amp;<span class="hljs-number">65535</span>),(t.<span class="hljs-property">bi_valid</span>+=a))&#125;,z=<span class="hljs-function">(<span class="hljs-params">t,e,a</span>)=&gt;</span>&#123;<span class="hljs-title function_">x</span>(t,a[<span class="hljs-number">2</span>*e],a[<span class="hljs-number">2</span>*e+<span class="hljs-number">1</span>])&#125;,A=<span class="hljs-function">(<span class="hljs-params">t,e</span>)=&gt;</span>&#123;<span class="hljs-keyword">let</span> a=<span class="hljs-number">0</span>;<span class="hljs-keyword">do</span>&#123;(a|=<span class="hljs-number">1</span>&amp;t),(t&gt;&gt;&gt;=<span class="hljs-number">1</span>),(a&lt;&lt;=<span class="hljs-number">1</span>)&#125;<span class="hljs-keyword">while</span>(--e&gt;<span class="hljs-number">0</span>);<span class="hljs-keyword">return</span> a&gt;&gt;&gt;<span class="hljs-number">1</span>&#125;,E=<span class="hljs-function">(<span class="hljs-params">t,e,a</span>)=&gt;</span>&#123;<span class="hljs-keyword">const</span> i=<span class="hljs-keyword">new</span> <span class="hljs-title class_">Array</span>(<span class="hljs-number">16</span>);<span class="hljs-keyword">let</span> n,r,o=<span class="hljs-number">0</span>;<span class="hljs-keyword">for</span>(n=<span class="hljs-number">1</span>;n&lt;=s;n++)(o=(o+a[n-<span class="hljs-number">1</span>])&lt;&lt;<span class="hljs-number">1</span>),(i[n]=o);<span class="hljs-keyword">for</span>(r=<span class="hljs-number">0</span>;r&lt;=e;r++)&#123;<span class="hljs-keyword">let</span> e=t[<span class="hljs-number">2</span>*r+<span class="hljs-number">1</span>];<span class="hljs-number">0</span>!==e&amp;&amp;(t[<span class="hljs-number">2</span>*r]=<span class="hljs-title function_">A</span>(i[e]++,e))&#125;&#125;,R=<span class="hljs-function">(<span class="hljs-params">t</span>)=&gt;</span>&#123;<span class="hljs-keyword">let</span> e;<span class="hljs-keyword">for</span>(e=<span class="hljs-number">0</span>;e&lt;i;e++)t.<span class="hljs-property">dyn_ltree</span>[<span class="hljs-number">2</span>*e]=<span class="hljs-number">0</span>;<span class="hljs-keyword">for</span>(e=<span class="hljs-number">0</span>;e&lt;n;e++)t.<span class="hljs-property">dyn_dtree</span>[<span class="hljs-number">2</span>*e]=<span class="hljs-number">0</span>;<span class="hljs-keyword">for</span>(e=<span class="hljs-number">0</span>;e&lt;<span class="hljs-number">19</span>;e++)t.<span class="hljs-property">bl_tree</span>[<span class="hljs-number">2</span>*e]=<span class="hljs-number">0</span>;(t.<span class="hljs-property">dyn_ltree</span>[<span class="hljs-number">512</span>]=<span class="hljs-number">1</span>),(t.<span class="hljs-property">opt_len</span>=t.<span class="hljs-property">static_len</span>=<span class="hljs-number">0</span>),(t.<span class="hljs-property">sym_next</span>=t.<span class="hljs-property">matches</span>=<span class="hljs-number">0</span>)&#125;,Z=<span class="hljs-function">(<span class="hljs-params">t</span>)=&gt;</span>&#123;t.<span class="hljs-property">bi_valid</span>&gt;<span class="hljs-number">8</span>?<span class="hljs-title function_">y</span>(t,t.<span class="hljs-property">bi_buf</span>):t.<span class="hljs-property">bi_valid</span>&gt;<span class="hljs-number">0</span>&amp;&amp;(t.<span class="hljs-property">pending_buf</span>[t.<span class="hljs-property">pending</span>++]=t.<span class="hljs-property">bi_buf</span>),(t.<span class="hljs-property">bi_buf</span>=<span class="hljs-number">0</span>),(t.<span class="hljs-property">bi_valid</span>=<span class="hljs-number">0</span>)&#125;,U=<span class="hljs-function">(<span class="hljs-params">t,e,a,i</span>)=&gt;</span>&#123;<span class="hljs-keyword">const</span> n=<span class="hljs-number">2</span>*e,s=<span class="hljs-number">2</span>*a;<span class="hljs-keyword">return</span> t[n]&lt;t[s]||(t[n]===t[s]&amp;&amp;i[e]&lt;=i[a])&#125;,S=<span class="hljs-function">(<span class="hljs-params">t,e,a</span>)=&gt;</span>&#123;<span class="hljs-keyword">const</span> i=t.<span class="hljs-property">heap</span>[a];<span class="hljs-keyword">let</span> n=a&lt;&lt;<span class="hljs-number">1</span>;<span class="hljs-keyword">for</span>(;n&lt;=t.<span class="hljs-property">heap_len</span>&amp;&amp;(n&lt;t.<span class="hljs-property">heap_len</span>&amp;&amp;<span class="hljs-title function_">U</span>(e,t.<span class="hljs-property">heap</span>[n+<span class="hljs-number">1</span>],t.<span class="hljs-property">heap</span>[n],t.<span class="hljs-property">depth</span>)&amp;&amp;n++,!<span class="hljs-title function_">U</span>(e,i,t.<span class="hljs-property">heap</span>[n],t.<span class="hljs-property">depth</span>));)(t.<span class="hljs-property">heap</span>[a]=t.<span class="hljs-property">heap</span>[n]),(a=n),(n&lt;&lt;=<span class="hljs-number">1</span>);t.<span class="hljs-property">heap</span>[a]=i&#125;,D=<span class="hljs-function">(<span class="hljs-params">t,e,i</span>)=&gt;</span>&#123;<span class="hljs-keyword">let</span> n,s,l,h,d=<span class="hljs-number">0</span>;<span class="hljs-keyword">if</span>(<span class="hljs-number">0</span>!==t.<span class="hljs-property">sym_next</span>)<span class="hljs-keyword">do</span>&#123;(n=<span class="hljs-number">255</span>&amp;t.<span class="hljs-property">pending_buf</span>[t.<span class="hljs-property">sym_buf</span>+d++]),(n+=(<span class="hljs-number">255</span>&amp;t.<span class="hljs-property">pending_buf</span>[t.<span class="hljs-property">sym_buf</span>+d++])&lt;&lt;<span class="hljs-number">8</span>),(s=t.<span class="hljs-property">pending_buf</span>[t.<span class="hljs-property">sym_buf</span>+d++]),<span class="hljs-number">0</span>===n?<span class="hljs-title function_">z</span>(t,s,e):((l=c[s]),<span class="hljs-title function_">z</span>(t,l+a+<span class="hljs-number">1</span>,e),(h=r[l]),<span class="hljs-number">0</span>!==h&amp;&amp;((s-=u[l]),<span class="hljs-title function_">x</span>(t,s,h)),n--,(l=<span class="hljs-title function_">v</span>(n)),<span class="hljs-title function_">z</span>(t,l,i),(h=o[l]),<span class="hljs-number">0</span>!==h&amp;&amp;((n-=w[l]),<span class="hljs-title function_">x</span>(t,n,h)))&#125;<span class="hljs-keyword">while</span>(d&lt;t.<span class="hljs-property">sym_next</span>);<span class="hljs-title function_">z</span>(t,<span class="hljs-number">256</span>,e)&#125;,T=<span class="hljs-function">(<span class="hljs-params">t,e</span>)=&gt;</span>&#123;<span class="hljs-keyword">const</span> a=e.<span class="hljs-property">dyn_tree</span>,i=e.<span class="hljs-property">stat_desc</span>.<span class="hljs-property">static_tree</span>,n=e.<span class="hljs-property">stat_desc</span>.<span class="hljs-property">has_stree</span>,r=e.<span class="hljs-property">stat_desc</span>.<span class="hljs-property">elems</span>;<span class="hljs-keyword">let</span> o,l,h,d=-<span class="hljs-number">1</span>;<span class="hljs-keyword">for</span>(t.<span class="hljs-property">heap_len</span>=<span class="hljs-number">0</span>,t.<span class="hljs-property">heap_max</span>=<span class="hljs-number">573</span>,o=<span class="hljs-number">0</span>;o&lt;r;o++)<span class="hljs-number">0</span>!==a[<span class="hljs-number">2</span>*o]?((t.<span class="hljs-property">heap</span>[++t.<span class="hljs-property">heap_len</span>]=d=o),(t.<span class="hljs-property">depth</span>[o]=<span class="hljs-number">0</span>)):(a[<span class="hljs-number">2</span>*o+<span class="hljs-number">1</span>]=<span class="hljs-number">0</span>);<span class="hljs-keyword">for</span>(;t.<span class="hljs-property">heap_len</span>&lt;<span class="hljs-number">2</span>;)(h=t.<span class="hljs-property">heap</span>[++t.<span class="hljs-property">heap_len</span>]=d&lt;<span class="hljs-number">2</span>?++<span class="hljs-attr">d</span>:<span class="hljs-number">0</span>),(a[<span class="hljs-number">2</span>*h]=<span class="hljs-number">1</span>),(t.<span class="hljs-property">depth</span>[h]=<span class="hljs-number">0</span>),t.<span class="hljs-property">opt_len</span>--,n&amp;&amp;(t.<span class="hljs-property">static_len</span>-=i[<span class="hljs-number">2</span>*h+<span class="hljs-number">1</span>]);<span class="hljs-keyword">for</span>(e.<span class="hljs-property">max_code</span>=d,o=t.<span class="hljs-property">heap_len</span>&gt;&gt;<span class="hljs-number">1</span>;o&gt;=<span class="hljs-number">1</span>;o--)<span class="hljs-title function_">S</span>(t,a,o);h=r;<span class="hljs-keyword">do</span>&#123;(o=t.<span class="hljs-property">heap</span>[<span class="hljs-number">1</span>]),(t.<span class="hljs-property">heap</span>[<span class="hljs-number">1</span>]=t.<span class="hljs-property">heap</span>[t.<span class="hljs-property">heap_len</span>--]),<span class="hljs-title function_">S</span>(t,a,<span class="hljs-number">1</span>),(l=t.<span class="hljs-property">heap</span>[<span class="hljs-number">1</span>]),(t.<span class="hljs-property">heap</span>[--t.<span class="hljs-property">heap_max</span>]=o),(t.<span class="hljs-property">heap</span>[--t.<span class="hljs-property">heap_max</span>]=l),(a[<span class="hljs-number">2</span>*h]=a[<span class="hljs-number">2</span>*o]+a[<span class="hljs-number">2</span>*l]),(t.<span class="hljs-property">depth</span>[h]=(t.<span class="hljs-property">depth</span>[o]&gt;=t.<span class="hljs-property">depth</span>[l]?t.<span class="hljs-property">depth</span>[o]:t.<span class="hljs-property">depth</span>[l])+<span class="hljs-number">1</span>),(a[<span class="hljs-number">2</span>*o+<span class="hljs-number">1</span>]=a[<span class="hljs-number">2</span>*l+<span class="hljs-number">1</span>]=h),(t.<span class="hljs-property">heap</span>[<span class="hljs-number">1</span>]=h++),<span class="hljs-title function_">S</span>(t,a,<span class="hljs-number">1</span>)&#125;<span class="hljs-keyword">while</span>(t.<span class="hljs-property">heap_len</span>&gt;=<span class="hljs-number">2</span>);(t.<span class="hljs-property">heap</span>[--t.<span class="hljs-property">heap_max</span>]=t.<span class="hljs-property">heap</span>[<span class="hljs-number">1</span>]),(<span class="hljs-function">(<span class="hljs-params">t,e</span>)=&gt;</span>&#123;<span class="hljs-keyword">const</span> a=e.<span class="hljs-property">dyn_tree</span>,i=e.<span class="hljs-property">max_code</span>,n=e.<span class="hljs-property">stat_desc</span>.<span class="hljs-property">static_tree</span>,r=e.<span class="hljs-property">stat_desc</span>.<span class="hljs-property">has_stree</span>,o=e.<span class="hljs-property">stat_desc</span>.<span class="hljs-property">extra_bits</span>,l=e.<span class="hljs-property">stat_desc</span>.<span class="hljs-property">extra_base</span>,h=e.<span class="hljs-property">stat_desc</span>.<span class="hljs-property">max_length</span>;<span class="hljs-keyword">let</span> d,_,f,c,u,w,m=<span class="hljs-number">0</span>;<span class="hljs-keyword">for</span>(c=<span class="hljs-number">0</span>;c&lt;=s;c++)t.<span class="hljs-property">bl_count</span>[c]=<span class="hljs-number">0</span>;<span class="hljs-keyword">for</span>(a[<span class="hljs-number">2</span>*t.<span class="hljs-property">heap</span>[t.<span class="hljs-property">heap_max</span>]+<span class="hljs-number">1</span>]=<span class="hljs-number">0</span>,d=t.<span class="hljs-property">heap_max</span>+<span class="hljs-number">1</span>;d&lt;<span class="hljs-number">573</span>;d++)(_=t.<span class="hljs-property">heap</span>[d]),(c=a[<span class="hljs-number">2</span>*a[<span class="hljs-number">2</span>*_+<span class="hljs-number">1</span>]+<span class="hljs-number">1</span>]+<span class="hljs-number">1</span>),c&gt;h&amp;&amp;((c=h),m++),(a[<span class="hljs-number">2</span>*_+<span class="hljs-number">1</span>]=c),_&gt;i||(t.<span class="hljs-property">bl_count</span>[c]++,(u=<span class="hljs-number">0</span>),_&gt;=l&amp;&amp;(u=o[_-l]),(w=a[<span class="hljs-number">2</span>*_]),(t.<span class="hljs-property">opt_len</span>+=w*(c+u)),r&amp;&amp;(t.<span class="hljs-property">static_len</span>+=w*(n[<span class="hljs-number">2</span>*_+<span class="hljs-number">1</span>]+u)));<span class="hljs-keyword">if</span>(<span class="hljs-number">0</span>!==m)&#123;<span class="hljs-keyword">do</span>&#123;<span class="hljs-keyword">for</span>(c=h-<span class="hljs-number">1</span>;<span class="hljs-number">0</span>===t.<span class="hljs-property">bl_count</span>[c];)c--;t.<span class="hljs-property">bl_count</span>[c]--,(t.<span class="hljs-property">bl_count</span>[c+<span class="hljs-number">1</span>]+=<span class="hljs-number">2</span>),t.<span class="hljs-property">bl_count</span>[h]--,(m-=<span class="hljs-number">2</span>)&#125;<span class="hljs-keyword">while</span>(m&gt;<span class="hljs-number">0</span>);<span class="hljs-keyword">for</span>(c=h;<span class="hljs-number">0</span>!==c;c--)<span class="hljs-keyword">for</span>(_=t.<span class="hljs-property">bl_count</span>[c];<span class="hljs-number">0</span>!==_;)(f=t.<span class="hljs-property">heap</span>[--d]),f&gt;i||(a[<span class="hljs-number">2</span>*f+<span class="hljs-number">1</span>]!==c&amp;&amp;((t.<span class="hljs-property">opt_len</span>+=(c-a[<span class="hljs-number">2</span>*f+<span class="hljs-number">1</span>])*a[<span class="hljs-number">2</span>*f]),(a[<span class="hljs-number">2</span>*f+<span class="hljs-number">1</span>]=c)),_--)&#125;&#125;)(t,e),<span class="hljs-title function_">E</span>(a,d,t.<span class="hljs-property">bl_count</span>)&#125;,O=<span class="hljs-function">(<span class="hljs-params">t,e,a</span>)=&gt;</span>&#123;<span class="hljs-keyword">let</span> i,n,s=-<span class="hljs-number">1</span>,r=e[<span class="hljs-number">1</span>],o=<span class="hljs-number">0</span>,l=<span class="hljs-number">7</span>,h=<span class="hljs-number">4</span>;<span class="hljs-keyword">for</span>(<span class="hljs-number">0</span>===r&amp;&amp;((l=<span class="hljs-number">138</span>),(h=<span class="hljs-number">3</span>)),e[<span class="hljs-number">2</span>*(a+<span class="hljs-number">1</span>)+<span class="hljs-number">1</span>]=<span class="hljs-number">65535</span>,i=<span class="hljs-number">0</span>;i&lt;=a;i++)(n=r),(r=e[<span class="hljs-number">2</span>*(i+<span class="hljs-number">1</span>)+<span class="hljs-number">1</span>]),(++o&lt;l&amp;&amp;n===r)||(o&lt;h?(t.<span class="hljs-property">bl_tree</span>[<span class="hljs-number">2</span>*n]+=o):<span class="hljs-number">0</span>!==n?(n!==s&amp;&amp;t.<span class="hljs-property">bl_tree</span>[<span class="hljs-number">2</span>*n]++,t.<span class="hljs-property">bl_tree</span>[<span class="hljs-number">32</span>]++):o&lt;=<span class="hljs-number">10</span>?t.<span class="hljs-property">bl_tree</span>[<span class="hljs-number">34</span>]++:t.<span class="hljs-property">bl_tree</span>[<span class="hljs-number">36</span>]++,(o=<span class="hljs-number">0</span>),(s=n),<span class="hljs-number">0</span>===r?((l=<span class="hljs-number">138</span>),(h=<span class="hljs-number">3</span>)):n===r?((l=<span class="hljs-number">6</span>),(h=<span class="hljs-number">3</span>)):((l=<span class="hljs-number">7</span>),(h=<span class="hljs-number">4</span>)))&#125;,I=<span class="hljs-function">(<span class="hljs-params">t,e,a</span>)=&gt;</span>&#123;<span class="hljs-keyword">let</span> i,n,s=-<span class="hljs-number">1</span>,r=e[<span class="hljs-number">1</span>],o=<span class="hljs-number">0</span>,l=<span class="hljs-number">7</span>,h=<span class="hljs-number">4</span>;<span class="hljs-keyword">for</span>(<span class="hljs-number">0</span>===r&amp;&amp;((l=<span class="hljs-number">138</span>),(h=<span class="hljs-number">3</span>)),i=<span class="hljs-number">0</span>;i&lt;=a;i++)<span class="hljs-keyword">if</span>(((n=r),(r=e[<span class="hljs-number">2</span>*(i+<span class="hljs-number">1</span>)+<span class="hljs-number">1</span>]),!(++o&lt;l&amp;&amp;n===r)))&#123;<span class="hljs-keyword">if</span>(o&lt;h)<span class="hljs-keyword">do</span>&#123;<span class="hljs-title function_">z</span>(t,n,t.<span class="hljs-property">bl_tree</span>)&#125;<span class="hljs-keyword">while</span>(<span class="hljs-number">0</span>!=--o);<span class="hljs-keyword">else</span> <span class="hljs-number">0</span>!==n?(n!==s&amp;&amp;(<span class="hljs-title function_">z</span>(t,n,t.<span class="hljs-property">bl_tree</span>),o--),<span class="hljs-title function_">z</span>(t,<span class="hljs-number">16</span>,t.<span class="hljs-property">bl_tree</span>),<span class="hljs-title function_">x</span>(t,o-<span class="hljs-number">3</span>,<span class="hljs-number">2</span>)):o&lt;=<span class="hljs-number">10</span>?(<span class="hljs-title function_">z</span>(t,<span class="hljs-number">17</span>,t.<span class="hljs-property">bl_tree</span>),<span class="hljs-title function_">x</span>(t,o-<span class="hljs-number">3</span>,<span class="hljs-number">3</span>)):(<span class="hljs-title function_">z</span>(t,<span class="hljs-number">18</span>,t.<span class="hljs-property">bl_tree</span>),<span class="hljs-title function_">x</span>(t,o-<span class="hljs-number">11</span>,<span class="hljs-number">7</span>));(o=<span class="hljs-number">0</span>),(s=n),<span class="hljs-number">0</span>===r?((l=<span class="hljs-number">138</span>),(h=<span class="hljs-number">3</span>)):n===r?((l=<span class="hljs-number">6</span>),(h=<span class="hljs-number">3</span>)):((l=<span class="hljs-number">7</span>),(h=<span class="hljs-number">4</span>))&#125;&#125;;<span class="hljs-keyword">let</span> F=!<span class="hljs-number">1</span>;<span class="hljs-keyword">const</span> <span class="hljs-title function_">L</span>=(<span class="hljs-params">t,e,a,i</span>)=&gt;&#123;<span class="hljs-title function_">x</span>(t,<span class="hljs-number">0</span>+(i?<span class="hljs-number">1</span>:<span class="hljs-number">0</span>),<span class="hljs-number">3</span>),<span class="hljs-title function_">Z</span>(t),<span class="hljs-title function_">y</span>(t,a),<span class="hljs-title function_">y</span>(t,~a),a&amp;&amp;t.<span class="hljs-property">pending_buf</span>.<span class="hljs-title function_">set</span>(t.<span class="hljs-property">window</span>.<span class="hljs-title function_">subarray</span>(e,e+a),t.<span class="hljs-property">pending</span>),(t.<span class="hljs-property">pending</span>+=a)&#125;;<span class="hljs-keyword">var</span> <span class="hljs-title function_">N</span>=(<span class="hljs-params">t,e,i,n</span>)=&gt;&#123;<span class="hljs-keyword">let</span> s,r,o=<span class="hljs-number">0</span>;t.<span class="hljs-property">level</span>&gt;<span class="hljs-number">0</span>?(<span class="hljs-number">2</span>===t.<span class="hljs-property">strm</span>.<span class="hljs-property">data_type</span>&amp;&amp;(t.<span class="hljs-property">strm</span>.<span class="hljs-property">data_type</span>=(<span class="hljs-function">(<span class="hljs-params">t</span>)=&gt;</span>&#123;<span class="hljs-keyword">let</span> e,i=<span class="hljs-number">4093624447</span>;<span class="hljs-keyword">for</span>(e=<span class="hljs-number">0</span>;e&lt;=<span class="hljs-number">31</span>;e++,i&gt;&gt;&gt;=<span class="hljs-number">1</span>)<span class="hljs-keyword">if</span>(<span class="hljs-number">1</span>&amp;i&amp;&amp;<span class="hljs-number">0</span>!==t.<span class="hljs-property">dyn_ltree</span>[<span class="hljs-number">2</span>*e])<span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<span class="hljs-keyword">if</span>(<span class="hljs-number">0</span>!==t.<span class="hljs-property">dyn_ltree</span>[<span class="hljs-number">18</span>]||<span class="hljs-number">0</span>!==t.<span class="hljs-property">dyn_ltree</span>[<span class="hljs-number">20</span>]||<span class="hljs-number">0</span>!==t.<span class="hljs-property">dyn_ltree</span>[<span class="hljs-number">26</span>])<span class="hljs-keyword">return</span> <span class="hljs-number">1</span>;<span class="hljs-keyword">for</span>(e=<span class="hljs-number">32</span>;e&lt;a;e++)<span class="hljs-keyword">if</span>(<span class="hljs-number">0</span>!==t.<span class="hljs-property">dyn_ltree</span>[<span class="hljs-number">2</span>*e])<span class="hljs-keyword">return</span> <span class="hljs-number">1</span>;<span class="hljs-keyword">return</span> <span class="hljs-number">0</span>&#125;)(t)),<span class="hljs-title function_">T</span>(t,t.<span class="hljs-property">l_desc</span>),<span class="hljs-title function_">T</span>(t,t.<span class="hljs-property">d_desc</span>),(o=(<span class="hljs-function">(<span class="hljs-params">t</span>)=&gt;</span>&#123;<span class="hljs-keyword">let</span> e;<span class="hljs-keyword">for</span>(<span class="hljs-title function_">O</span>(t,t.<span class="hljs-property">dyn_ltree</span>,t.<span class="hljs-property">l_desc</span>.<span class="hljs-property">max_code</span>),<span class="hljs-title function_">O</span>(t,t.<span class="hljs-property">dyn_dtree</span>,t.<span class="hljs-property">d_desc</span>.<span class="hljs-property">max_code</span>),<span class="hljs-title function_">T</span>(t,t.<span class="hljs-property">bl_desc</span>),e=<span class="hljs-number">18</span>;e&gt;=<span class="hljs-number">3</span>&amp;&amp;<span class="hljs-number">0</span>===t.<span class="hljs-property">bl_tree</span>[<span class="hljs-number">2</span>*h[e]+<span class="hljs-number">1</span>];e--);<span class="hljs-keyword">return</span>(t.<span class="hljs-property">opt_len</span>+=<span class="hljs-number">3</span>*(e+<span class="hljs-number">1</span>)+<span class="hljs-number">5</span>+<span class="hljs-number">5</span>+<span class="hljs-number">4</span>),e&#125;)(t)),(s=(t.<span class="hljs-property">opt_len</span>+<span class="hljs-number">3</span>+<span class="hljs-number">7</span>)&gt;&gt;&gt;<span class="hljs-number">3</span>),(r=(t.<span class="hljs-property">static_len</span>+<span class="hljs-number">3</span>+<span class="hljs-number">7</span>)&gt;&gt;&gt;<span class="hljs-number">3</span>),r&lt;=s&amp;&amp;(s=r)):(s=r=i+<span class="hljs-number">5</span>),i+<span class="hljs-number">4</span>&lt;=s&amp;&amp;-<span class="hljs-number">1</span>!==e?<span class="hljs-title function_">L</span>(t,e,i,n):<span class="hljs-number">4</span>===t.<span class="hljs-property">strategy</span>||r===s?(<span class="hljs-title function_">x</span>(t,<span class="hljs-number">2</span>+(n?<span class="hljs-number">1</span>:<span class="hljs-number">0</span>),<span class="hljs-number">3</span>),<span class="hljs-title function_">D</span>(t,d,_)):(<span class="hljs-title function_">x</span>(t,<span class="hljs-number">4</span>+(n?<span class="hljs-number">1</span>:<span class="hljs-number">0</span>),<span class="hljs-number">3</span>),(<span class="hljs-function">(<span class="hljs-params">t,e,a,i</span>)=&gt;</span>&#123;<span class="hljs-keyword">let</span> n;<span class="hljs-keyword">for</span>(<span class="hljs-title function_">x</span>(t,e-<span class="hljs-number">257</span>,<span class="hljs-number">5</span>),<span class="hljs-title function_">x</span>(t,a-<span class="hljs-number">1</span>,<span class="hljs-number">5</span>),<span class="hljs-title function_">x</span>(t,i-<span class="hljs-number">4</span>,<span class="hljs-number">4</span>),n=<span class="hljs-number">0</span>;n&lt;i;n++)<span class="hljs-title function_">x</span>(t,t.<span class="hljs-property">bl_tree</span>[<span class="hljs-number">2</span>*h[n]+<span class="hljs-number">1</span>],<span class="hljs-number">3</span>);<span class="hljs-title function_">I</span>(t,t.<span class="hljs-property">dyn_ltree</span>,e-<span class="hljs-number">1</span>),<span class="hljs-title function_">I</span>(t,t.<span class="hljs-property">dyn_dtree</span>,a-<span class="hljs-number">1</span>)&#125;)(t,t.<span class="hljs-property">l_desc</span>.<span class="hljs-property">max_code</span>+<span class="hljs-number">1</span>,t.<span class="hljs-property">d_desc</span>.<span class="hljs-property">max_code</span>+<span class="hljs-number">1</span>,o+<span class="hljs-number">1</span>),<span class="hljs-title function_">D</span>(t,t.<span class="hljs-property">dyn_ltree</span>,t.<span class="hljs-property">dyn_dtree</span>)),<span class="hljs-title function_">R</span>(t),n&amp;&amp;<span class="hljs-title function_">Z</span>(t)&#125;,B=&#123;<span class="hljs-attr">_tr_init</span>:<span class="hljs-function">(<span class="hljs-params">t</span>)=&gt;</span>&#123;F||((<span class="hljs-function">()=&gt;</span>&#123;<span class="hljs-keyword">let</span> t,e,a,h,k;<span class="hljs-keyword">const</span> v=<span class="hljs-keyword">new</span> <span class="hljs-title class_">Array</span>(<span class="hljs-number">16</span>);<span class="hljs-keyword">for</span>(a=<span class="hljs-number">0</span>,h=<span class="hljs-number">0</span>;h&lt;<span class="hljs-number">28</span>;h++)<span class="hljs-keyword">for</span>(u[h]=a,t=<span class="hljs-number">0</span>;t&lt;<span class="hljs-number">1</span>&lt;&lt;r[h];t++)c[a++]=h;<span class="hljs-keyword">for</span>(c[a-<span class="hljs-number">1</span>]=h,k=<span class="hljs-number">0</span>,h=<span class="hljs-number">0</span>;h&lt;<span class="hljs-number">16</span>;h++)<span class="hljs-keyword">for</span>(w[h]=k,t=<span class="hljs-number">0</span>;t&lt;<span class="hljs-number">1</span>&lt;&lt;o[h];t++)f[k++]=h;<span class="hljs-keyword">for</span>(k&gt;&gt;=<span class="hljs-number">7</span>;h&lt;n;h++)<span class="hljs-keyword">for</span>(w[h]=k&lt;&lt;<span class="hljs-number">7</span>,t=<span class="hljs-number">0</span>;t&lt;<span class="hljs-number">1</span>&lt;&lt;(o[h]-<span class="hljs-number">7</span>);t++)f[<span class="hljs-number">256</span>+k++]=h;<span class="hljs-keyword">for</span>(e=<span class="hljs-number">0</span>;e&lt;=s;e++)v[e]=<span class="hljs-number">0</span>;<span class="hljs-keyword">for</span>(t=<span class="hljs-number">0</span>;t&lt;=<span class="hljs-number">143</span>;)(d[<span class="hljs-number">2</span>*t+<span class="hljs-number">1</span>]=<span class="hljs-number">8</span>),t++,v[<span class="hljs-number">8</span>]++;<span class="hljs-keyword">for</span>(;t&lt;=<span class="hljs-number">255</span>;)(d[<span class="hljs-number">2</span>*t+<span class="hljs-number">1</span>]=<span class="hljs-number">9</span>),t++,v[<span class="hljs-number">9</span>]++;<span class="hljs-keyword">for</span>(;t&lt;=<span class="hljs-number">279</span>;)(d[<span class="hljs-number">2</span>*t+<span class="hljs-number">1</span>]=<span class="hljs-number">7</span>),t++,v[<span class="hljs-number">7</span>]++;<span class="hljs-keyword">for</span>(;t&lt;=<span class="hljs-number">287</span>;)(d[<span class="hljs-number">2</span>*t+<span class="hljs-number">1</span>]=<span class="hljs-number">8</span>),t++,v[<span class="hljs-number">8</span>]++;<span class="hljs-keyword">for</span>(<span class="hljs-title function_">E</span>(d,<span class="hljs-number">287</span>,v),t=<span class="hljs-number">0</span>;t&lt;n;t++)(_[<span class="hljs-number">2</span>*t+<span class="hljs-number">1</span>]=<span class="hljs-number">5</span>),(_[<span class="hljs-number">2</span>*t]=<span class="hljs-title function_">A</span>(t,<span class="hljs-number">5</span>));(b=<span class="hljs-keyword">new</span> <span class="hljs-title function_">m</span>(d,r,<span class="hljs-number">257</span>,i,s)),(g=<span class="hljs-keyword">new</span> <span class="hljs-title function_">m</span>(_,o,<span class="hljs-number">0</span>,n,s)),(p=<span class="hljs-keyword">new</span> <span class="hljs-title function_">m</span>(<span class="hljs-keyword">new</span> <span class="hljs-title class_">Array</span>(<span class="hljs-number">0</span>),l,<span class="hljs-number">0</span>,<span class="hljs-number">19</span>,<span class="hljs-number">7</span>))&#125;)(),(F=!<span class="hljs-number">0</span>)),(t.<span class="hljs-property">l_desc</span>=<span class="hljs-keyword">new</span> <span class="hljs-title function_">k</span>(t.<span class="hljs-property">dyn_ltree</span>,b)),(t.<span class="hljs-property">d_desc</span>=<span class="hljs-keyword">new</span> <span class="hljs-title function_">k</span>(t.<span class="hljs-property">dyn_dtree</span>,g)),(t.<span class="hljs-property">bl_desc</span>=<span class="hljs-keyword">new</span> <span class="hljs-title function_">k</span>(t.<span class="hljs-property">bl_tree</span>,p)),(t.<span class="hljs-property">bi_buf</span>=<span class="hljs-number">0</span>),(t.<span class="hljs-property">bi_valid</span>=<span class="hljs-number">0</span>),<span class="hljs-title function_">R</span>(t)&#125;,<span class="hljs-attr">_tr_stored_block</span>:L,<span class="hljs-attr">_tr_flush_block</span>:N,<span class="hljs-attr">_tr_tally</span>:<span class="hljs-function">(<span class="hljs-params">t,e,i</span>)=&gt;</span>((t.<span class="hljs-property">pending_buf</span>[t.<span class="hljs-property">sym_buf</span>+t.<span class="hljs-property">sym_next</span>++]=e),(t.<span class="hljs-property">pending_buf</span>[t.<span class="hljs-property">sym_buf</span>+t.<span class="hljs-property">sym_next</span>++]=e&gt;&gt;<span class="hljs-number">8</span>),(t.<span class="hljs-property">pending_buf</span>[t.<span class="hljs-property">sym_buf</span>+t.<span class="hljs-property">sym_next</span>++]=i),<span class="hljs-number">0</span>===e?t.<span class="hljs-property">dyn_ltree</span>[<span class="hljs-number">2</span>*i]++:(t.<span class="hljs-property">matches</span>++,e--,t.<span class="hljs-property">dyn_ltree</span>[<span class="hljs-number">2</span>*(c[i]+a+<span class="hljs-number">1</span>)]++,t.<span class="hljs-property">dyn_dtree</span>[<span class="hljs-number">2</span>*<span class="hljs-title function_">v</span>(e)]++),t.<span class="hljs-property">sym_next</span>===t.<span class="hljs-property">sym_end</span>),<span class="hljs-attr">_tr_align</span>:<span class="hljs-function">(<span class="hljs-params">t</span>)=&gt;</span>&#123;<span class="hljs-title function_">x</span>(t,<span class="hljs-number">2</span>,<span class="hljs-number">3</span>),<span class="hljs-title function_">z</span>(t,<span class="hljs-number">256</span>,d),(<span class="hljs-function">(<span class="hljs-params">t</span>)=&gt;</span>&#123;<span class="hljs-number">16</span>===t.<span class="hljs-property">bi_valid</span>?(<span class="hljs-title function_">y</span>(t,t.<span class="hljs-property">bi_buf</span>),(t.<span class="hljs-property">bi_buf</span>=<span class="hljs-number">0</span>),(t.<span class="hljs-property">bi_valid</span>=<span class="hljs-number">0</span>)):t.<span class="hljs-property">bi_valid</span>&gt;=<span class="hljs-number">8</span>&amp;&amp;((t.<span class="hljs-property">pending_buf</span>[t.<span class="hljs-property">pending</span>++]=<span class="hljs-number">255</span>&amp;t.<span class="hljs-property">bi_buf</span>),(t.<span class="hljs-property">bi_buf</span>&gt;&gt;=<span class="hljs-number">8</span>),(t.<span class="hljs-property">bi_valid</span>-=<span class="hljs-number">8</span>))&#125;)(t)&#125;&#125;;<span class="hljs-keyword">var</span> <span class="hljs-title function_">C</span>=(<span class="hljs-params">t,e,a,i</span>)=&gt;&#123;<span class="hljs-keyword">let</span> n=(<span class="hljs-number">65535</span>&amp;t)|<span class="hljs-number">0</span>,s=((t&gt;&gt;&gt;<span class="hljs-number">16</span>)&amp;<span class="hljs-number">65535</span>)|<span class="hljs-number">0</span>,r=<span class="hljs-number">0</span>;<span class="hljs-keyword">for</span>(;<span class="hljs-number">0</span>!==a;)&#123;(r=a&gt;<span class="hljs-number">2e3</span>?<span class="hljs-number">2e3</span>:a),(a-=r);<span class="hljs-keyword">do</span>&#123;(n=(n+e[i++])|<span class="hljs-number">0</span>),(s=(s+n)|<span class="hljs-number">0</span>)&#125;<span class="hljs-keyword">while</span>(--r);(n%=<span class="hljs-number">65521</span>),(s%=<span class="hljs-number">65521</span>)&#125;<span class="hljs-keyword">return</span> n|(s&lt;&lt;<span class="hljs-number">16</span>)|<span class="hljs-number">0</span>&#125;;<span class="hljs-keyword">const</span> M=<span class="hljs-keyword">new</span> <span class="hljs-title class_">Uint32Array</span>((<span class="hljs-function">()=&gt;</span>&#123;<span class="hljs-keyword">let</span> t,e=[];<span class="hljs-keyword">for</span>(<span class="hljs-keyword">var</span> a=<span class="hljs-number">0</span>;a&lt;<span class="hljs-number">256</span>;a++)&#123;t=a;<span class="hljs-keyword">for</span>(<span class="hljs-keyword">var</span> i=<span class="hljs-number">0</span>;i&lt;<span class="hljs-number">8</span>;i++)t=<span class="hljs-number">1</span>&amp;t?<span class="hljs-number">3988292384</span>^(t&gt;&gt;&gt;<span class="hljs-number">1</span>):t&gt;&gt;&gt;<span class="hljs-number">1</span>;e[a]=t&#125;<span class="hljs-keyword">return</span> e&#125;)());<span class="hljs-keyword">var</span> <span class="hljs-title function_">H</span>=(<span class="hljs-params">t,e,a,i</span>)=&gt;&#123;<span class="hljs-keyword">const</span> n=M,s=i+a;t^=-<span class="hljs-number">1</span>;<span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> a=i;a&lt;s;a++)t=(t&gt;&gt;&gt;<span class="hljs-number">8</span>)^n[<span class="hljs-number">255</span>&amp;(t^e[a])];<span class="hljs-keyword">return</span>-<span class="hljs-number">1</span>^t&#125;,j=&#123;<span class="hljs-number">2</span>:<span class="hljs-string">&#x27;need dictionary&#x27;</span>,<span class="hljs-number">1</span>:<span class="hljs-string">&#x27;stream end&#x27;</span>,<span class="hljs-number">0</span>:<span class="hljs-string">&#x27;&#x27;</span>,<span class="hljs-string">&#x27;-1&#x27;</span>:<span class="hljs-string">&#x27;file error&#x27;</span>,<span class="hljs-string">&#x27;-2&#x27;</span>:<span class="hljs-string">&#x27;stream error&#x27;</span>,<span class="hljs-string">&#x27;-3&#x27;</span>:<span class="hljs-string">&#x27;data error&#x27;</span>,<span class="hljs-string">&#x27;-4&#x27;</span>:<span class="hljs-string">&#x27;insufficient memory&#x27;</span>,<span class="hljs-string">&#x27;-5&#x27;</span>:<span class="hljs-string">&#x27;buffer error&#x27;</span>,<span class="hljs-string">&#x27;-6&#x27;</span>:<span class="hljs-string">&#x27;incompatible version&#x27;</span>&#125;,K=&#123;<span class="hljs-attr">Z_NO_FLUSH</span>:<span class="hljs-number">0</span>,<span class="hljs-attr">Z_PARTIAL_FLUSH</span>:<span class="hljs-number">1</span>,<span class="hljs-attr">Z_SYNC_FLUSH</span>:<span class="hljs-number">2</span>,<span class="hljs-attr">Z_FULL_FLUSH</span>:<span class="hljs-number">3</span>,<span class="hljs-attr">Z_FINISH</span>:<span class="hljs-number">4</span>,<span class="hljs-attr">Z_BLOCK</span>:<span class="hljs-number">5</span>,<span class="hljs-attr">Z_TREES</span>:<span class="hljs-number">6</span>,<span class="hljs-attr">Z_OK</span>:<span class="hljs-number">0</span>,<span class="hljs-attr">Z_STREAM_END</span>:<span class="hljs-number">1</span>,<span class="hljs-attr">Z_NEED_DICT</span>:<span class="hljs-number">2</span>,<span class="hljs-attr">Z_ERRNO</span>:-<span class="hljs-number">1</span>,<span class="hljs-attr">Z_STREAM_ERROR</span>:-<span class="hljs-number">2</span>,<span class="hljs-attr">Z_DATA_ERROR</span>:-<span class="hljs-number">3</span>,<span class="hljs-attr">Z_MEM_ERROR</span>:-<span class="hljs-number">4</span>,<span class="hljs-attr">Z_BUF_ERROR</span>:-<span class="hljs-number">5</span>,<span class="hljs-attr">Z_NO_COMPRESSION</span>:<span class="hljs-number">0</span>,<span class="hljs-attr">Z_BEST_SPEED</span>:<span class="hljs-number">1</span>,<span class="hljs-attr">Z_BEST_COMPRESSION</span>:<span class="hljs-number">9</span>,<span class="hljs-attr">Z_DEFAULT_COMPRESSION</span>:-<span class="hljs-number">1</span>,<span class="hljs-attr">Z_FILTERED</span>:<span class="hljs-number">1</span>,<span class="hljs-attr">Z_HUFFMAN_ONLY</span>:<span class="hljs-number">2</span>,<span class="hljs-attr">Z_RLE</span>:<span class="hljs-number">3</span>,<span class="hljs-attr">Z_FIXED</span>:<span class="hljs-number">4</span>,<span class="hljs-attr">Z_DEFAULT_STRATEGY</span>:<span class="hljs-number">0</span>,<span class="hljs-attr">Z_BINARY</span>:<span class="hljs-number">0</span>,<span class="hljs-attr">Z_TEXT</span>:<span class="hljs-number">1</span>,<span class="hljs-attr">Z_UNKNOWN</span>:<span class="hljs-number">2</span>,<span class="hljs-attr">Z_DEFLATED</span>:<span class="hljs-number">8</span>&#125;;<span class="hljs-keyword">const</span>&#123;<span class="hljs-attr">_tr_init</span>:P,<span class="hljs-attr">_tr_stored_block</span>:Y,<span class="hljs-attr">_tr_flush_block</span>:G,<span class="hljs-attr">_tr_tally</span>:X,<span class="hljs-attr">_tr_align</span>:W&#125;=B,&#123;<span class="hljs-attr">Z_NO_FLUSH</span>:q,<span class="hljs-attr">Z_PARTIAL_FLUSH</span>:J,<span class="hljs-attr">Z_FULL_FLUSH</span>:Q,<span class="hljs-attr">Z_FINISH</span>:V,<span class="hljs-attr">Z_BLOCK</span>:$,<span class="hljs-attr">Z_OK</span>:tt,<span class="hljs-attr">Z_STREAM_END</span>:et,<span class="hljs-attr">Z_STREAM_ERROR</span>:at,<span class="hljs-attr">Z_DATA_ERROR</span>:it,<span class="hljs-attr">Z_BUF_ERROR</span>:nt,<span class="hljs-attr">Z_DEFAULT_COMPRESSION</span>:st,<span class="hljs-attr">Z_FILTERED</span>:rt,<span class="hljs-attr">Z_HUFFMAN_ONLY</span>:ot,<span class="hljs-attr">Z_RLE</span>:lt,<span class="hljs-attr">Z_FIXED</span>:ht,<span class="hljs-attr">Z_DEFAULT_STRATEGY</span>:dt,<span class="hljs-attr">Z_UNKNOWN</span>:_t,<span class="hljs-attr">Z_DEFLATED</span>:ft&#125;=K,ct=<span class="hljs-number">258</span>,ut=<span class="hljs-number">262</span>,wt=<span class="hljs-number">42</span>,mt=<span class="hljs-number">113</span>,bt=<span class="hljs-number">666</span>,gt=<span class="hljs-function">(<span class="hljs-params">t,e</span>)=&gt;</span>((t.<span class="hljs-property">msg</span>=j[e]),e),pt=<span class="hljs-function">(<span class="hljs-params">t</span>)=&gt;</span><span class="hljs-number">2</span>*t-(t&gt;<span class="hljs-number">4</span>?<span class="hljs-number">9</span>:<span class="hljs-number">0</span>),kt=<span class="hljs-function">(<span class="hljs-params">t</span>)=&gt;</span>&#123;<span class="hljs-keyword">let</span> e=t.<span class="hljs-property">length</span>;<span class="hljs-keyword">for</span>(;--e&gt;=<span class="hljs-number">0</span>;)t[e]=<span class="hljs-number">0</span>&#125;,vt=<span class="hljs-function">(<span class="hljs-params">t</span>)=&gt;</span>&#123;<span class="hljs-keyword">let</span> e,a,i,n=t.<span class="hljs-property">w_size</span>;(e=t.<span class="hljs-property">hash_size</span>),(i=e);<span class="hljs-keyword">do</span>&#123;(a=t.<span class="hljs-property">head</span>[--i]),(t.<span class="hljs-property">head</span>[i]=a&gt;=n?a-<span class="hljs-attr">n</span>:<span class="hljs-number">0</span>)&#125;<span class="hljs-keyword">while</span>(--e);(e=n),(i=e);<span class="hljs-keyword">do</span>&#123;(a=t.<span class="hljs-property">prev</span>[--i]),(t.<span class="hljs-property">prev</span>[i]=a&gt;=n?a-<span class="hljs-attr">n</span>:<span class="hljs-number">0</span>)&#125;<span class="hljs-keyword">while</span>(--e)&#125;;<span class="hljs-keyword">let</span> <span class="hljs-title function_">yt</span>=(<span class="hljs-params">t,e,a</span>)=&gt;((e&lt;&lt;t.<span class="hljs-property">hash_shift</span>)^a)&amp;t.<span class="hljs-property">hash_mask</span>;<span class="hljs-keyword">const</span> <span class="hljs-title function_">xt</span>=(<span class="hljs-params">t</span>)=&gt;&#123;<span class="hljs-keyword">const</span> e=t.<span class="hljs-property">state</span>;<span class="hljs-keyword">let</span> a=e.<span class="hljs-property">pending</span>;a&gt;t.<span class="hljs-property">avail_out</span>&amp;&amp;(a=t.<span class="hljs-property">avail_out</span>),<span class="hljs-number">0</span>!==a&amp;&amp;(t.<span class="hljs-property">output</span>.<span class="hljs-title function_">set</span>(e.<span class="hljs-property">pending_buf</span>.<span class="hljs-title function_">subarray</span>(e.<span class="hljs-property">pending_out</span>,e.<span class="hljs-property">pending_out</span>+a),t.<span class="hljs-property">next_out</span>),(t.<span class="hljs-property">next_out</span>+=a),(e.<span class="hljs-property">pending_out</span>+=a),(t.<span class="hljs-property">total_out</span>+=a),(t.<span class="hljs-property">avail_out</span>-=a),(e.<span class="hljs-property">pending</span>-=a),<span class="hljs-number">0</span>===e.<span class="hljs-property">pending</span>&amp;&amp;(e.<span class="hljs-property">pending_out</span>=<span class="hljs-number">0</span>))&#125;,zt=<span class="hljs-function">(<span class="hljs-params">t,e</span>)=&gt;</span>&#123;<span class="hljs-title function_">G</span>(t,t.<span class="hljs-property">block_start</span>&gt;=<span class="hljs-number">0</span>?t.<span class="hljs-property">block_start</span>:-<span class="hljs-number">1</span>,t.<span class="hljs-property">strstart</span>-t.<span class="hljs-property">block_start</span>,e),(t.<span class="hljs-property">block_start</span>=t.<span class="hljs-property">strstart</span>),<span class="hljs-title function_">xt</span>(t.<span class="hljs-property">strm</span>)&#125;,<span class="hljs-title class_">At</span>=<span class="hljs-function">(<span class="hljs-params">t,e</span>)=&gt;</span>&#123;t.<span class="hljs-property">pending_buf</span>[t.<span class="hljs-property">pending</span>++]=e&#125;,<span class="hljs-title class_">Et</span>=<span class="hljs-function">(<span class="hljs-params">t,e</span>)=&gt;</span>&#123;(t.<span class="hljs-property">pending_buf</span>[t.<span class="hljs-property">pending</span>++]=(e&gt;&gt;&gt;<span class="hljs-number">8</span>)&amp;<span class="hljs-number">255</span>),(t.<span class="hljs-property">pending_buf</span>[t.<span class="hljs-property">pending</span>++]=<span class="hljs-number">255</span>&amp;e)&#125;,<span class="hljs-title class_">Rt</span>=<span class="hljs-function">(<span class="hljs-params">t,e,a,i</span>)=&gt;</span>&#123;<span class="hljs-keyword">let</span> n=t.<span class="hljs-property">avail_in</span>;<span class="hljs-keyword">return</span>(n&gt;i&amp;&amp;(n=i),<span class="hljs-number">0</span>===n?<span class="hljs-number">0</span>:((t.<span class="hljs-property">avail_in</span>-=n),e.<span class="hljs-title function_">set</span>(t.<span class="hljs-property">input</span>.<span class="hljs-title function_">subarray</span>(t.<span class="hljs-property">next_in</span>,t.<span class="hljs-property">next_in</span>+n),a),<span class="hljs-number">1</span>===t.<span class="hljs-property">state</span>.<span class="hljs-property">wrap</span>?(t.<span class="hljs-property">adler</span>=<span class="hljs-title function_">C</span>(t.<span class="hljs-property">adler</span>,e,n,a)):<span class="hljs-number">2</span>===t.<span class="hljs-property">state</span>.<span class="hljs-property">wrap</span>&amp;&amp;(t.<span class="hljs-property">adler</span>=<span class="hljs-title function_">H</span>(t.<span class="hljs-property">adler</span>,e,n,a)),(t.<span class="hljs-property">next_in</span>+=n),(t.<span class="hljs-property">total_in</span>+=n),n))&#125;,<span class="hljs-title class_">Zt</span>=<span class="hljs-function">(<span class="hljs-params">t,e</span>)=&gt;</span>&#123;<span class="hljs-keyword">let</span> a,i,n=t.<span class="hljs-property">max_chain_length</span>,s=t.<span class="hljs-property">strstart</span>,r=t.<span class="hljs-property">prev_length</span>,o=t.<span class="hljs-property">nice_match</span>;<span class="hljs-keyword">const</span> l=t.<span class="hljs-property">strstart</span>&gt;t.<span class="hljs-property">w_size</span>-ut?t.<span class="hljs-property">strstart</span>-(t.<span class="hljs-property">w_size</span>-ut):<span class="hljs-number">0</span>,h=t.<span class="hljs-property">window</span>,d=t.<span class="hljs-property">w_mask</span>,_=t.<span class="hljs-property">prev</span>,f=t.<span class="hljs-property">strstart</span>+ct;<span class="hljs-keyword">let</span> c=h[s+r-<span class="hljs-number">1</span>],u=h[s+r];t.<span class="hljs-property">prev_length</span>&gt;=t.<span class="hljs-property">good_match</span>&amp;&amp;(n&gt;&gt;=<span class="hljs-number">2</span>),o&gt;t.<span class="hljs-property">lookahead</span>&amp;&amp;(o=t.<span class="hljs-property">lookahead</span>);<span class="hljs-keyword">do</span>&#123;<span class="hljs-keyword">if</span>(((a=e),h[a+r]===u&amp;&amp;h[a+r-<span class="hljs-number">1</span>]===c&amp;&amp;h[a]===h[s]&amp;&amp;h[++a]===h[s+<span class="hljs-number">1</span>]))&#123;(s+=<span class="hljs-number">2</span>),a++;<span class="hljs-keyword">do</span>&#123;&#125;<span class="hljs-keyword">while</span>(h[++s]===h[++a]&amp;&amp;h[++s]===h[++a]&amp;&amp;h[++s]===h[++a]&amp;&amp;h[++s]===h[++a]&amp;&amp;h[++s]===h[++a]&amp;&amp;h[++s]===h[++a]&amp;&amp;h[++s]===h[++a]&amp;&amp;h[++s]===h[++a]&amp;&amp;s&lt;f);<span class="hljs-keyword">if</span>(((i=ct-(f-s)),(s=f-ct),i&gt;r))&#123;<span class="hljs-keyword">if</span>(((t.<span class="hljs-property">match_start</span>=e),(r=i),i&gt;=o))<span class="hljs-keyword">break</span>;(c=h[s+r-<span class="hljs-number">1</span>]),(u=h[s+r])&#125;&#125;&#125;<span class="hljs-keyword">while</span>((e=_[e&amp;d])&gt;l&amp;&amp;<span class="hljs-number">0</span>!=--n);<span class="hljs-keyword">return</span> r&lt;=t.<span class="hljs-property">lookahead</span>?<span class="hljs-attr">r</span>:t.<span class="hljs-property">lookahead</span>&#125;,<span class="hljs-title class_">Ut</span>=<span class="hljs-function">(<span class="hljs-params">t</span>)=&gt;</span>&#123;<span class="hljs-keyword">const</span> e=t.<span class="hljs-property">w_size</span>;<span class="hljs-keyword">let</span> a,i,n;<span class="hljs-keyword">do</span>&#123;<span class="hljs-keyword">if</span>(((i=t.<span class="hljs-property">window_size</span>-t.<span class="hljs-property">lookahead</span>-t.<span class="hljs-property">strstart</span>),t.<span class="hljs-property">strstart</span>&gt;=e+(e-ut)&amp;&amp;(t.<span class="hljs-property">window</span>.<span class="hljs-title function_">set</span>(t.<span class="hljs-property">window</span>.<span class="hljs-title function_">subarray</span>(e,e+e-i),<span class="hljs-number">0</span>),(t.<span class="hljs-property">match_start</span>-=e),(t.<span class="hljs-property">strstart</span>-=e),(t.<span class="hljs-property">block_start</span>-=e),t.<span class="hljs-property">insert</span>&gt;t.<span class="hljs-property">strstart</span>&amp;&amp;(t.<span class="hljs-property">insert</span>=t.<span class="hljs-property">strstart</span>),<span class="hljs-title function_">vt</span>(t),(i+=e)),<span class="hljs-number">0</span>===t.<span class="hljs-property">strm</span>.<span class="hljs-property">avail_in</span>))<span class="hljs-keyword">break</span>;<span class="hljs-keyword">if</span>(((a=<span class="hljs-title class_">Rt</span>(t.<span class="hljs-property">strm</span>,t.<span class="hljs-property">window</span>,t.<span class="hljs-property">strstart</span>+t.<span class="hljs-property">lookahead</span>,i)),(t.<span class="hljs-property">lookahead</span>+=a),t.<span class="hljs-property">lookahead</span>+t.<span class="hljs-property">insert</span>&gt;=<span class="hljs-number">3</span>))<span class="hljs-keyword">for</span>(n=t.<span class="hljs-property">strstart</span>-t.<span class="hljs-property">insert</span>,t.<span class="hljs-property">ins_h</span>=t.<span class="hljs-property">window</span>[n],t.<span class="hljs-property">ins_h</span>=<span class="hljs-title function_">yt</span>(t,t.<span class="hljs-property">ins_h</span>,t.<span class="hljs-property">window</span>[n+<span class="hljs-number">1</span>]);t.<span class="hljs-property">insert</span>&amp;&amp;((t.<span class="hljs-property">ins_h</span>=<span class="hljs-title function_">yt</span>(t,t.<span class="hljs-property">ins_h</span>,t.<span class="hljs-property">window</span>[n+<span class="hljs-number">3</span>-<span class="hljs-number">1</span>])),(t.<span class="hljs-property">prev</span>[n&amp;t.<span class="hljs-property">w_mask</span>]=t.<span class="hljs-property">head</span>[t.<span class="hljs-property">ins_h</span>]),(t.<span class="hljs-property">head</span>[t.<span class="hljs-property">ins_h</span>]=n),n++,t.<span class="hljs-property">insert</span>--,!(t.<span class="hljs-property">lookahead</span>+t.<span class="hljs-property">insert</span>&lt;<span class="hljs-number">3</span>));)&#125;<span class="hljs-keyword">while</span>(t.<span class="hljs-property">lookahead</span>&lt;ut&amp;&amp;<span class="hljs-number">0</span>!==t.<span class="hljs-property">strm</span>.<span class="hljs-property">avail_in</span>)&#125;,<span class="hljs-title class_">St</span>=<span class="hljs-function">(<span class="hljs-params">t,e</span>)=&gt;</span>&#123;<span class="hljs-keyword">let</span> a,i,n,s=t.<span class="hljs-property">pending_buf_size</span>-<span class="hljs-number">5</span>&gt;t.<span class="hljs-property">w_size</span>?t.<span class="hljs-property">w_size</span>:t.<span class="hljs-property">pending_buf_size</span>-<span class="hljs-number">5</span>,r=<span class="hljs-number">0</span>,o=t.<span class="hljs-property">strm</span>.<span class="hljs-property">avail_in</span>;<span class="hljs-keyword">do</span>&#123;<span class="hljs-keyword">if</span>(((a=<span class="hljs-number">65535</span>),(n=(t.<span class="hljs-property">bi_valid</span>+<span class="hljs-number">42</span>)&gt;&gt;<span class="hljs-number">3</span>),t.<span class="hljs-property">strm</span>.<span class="hljs-property">avail_out</span>&lt;n))<span class="hljs-keyword">break</span>;<span class="hljs-keyword">if</span>(((n=t.<span class="hljs-property">strm</span>.<span class="hljs-property">avail_out</span>-n),(i=t.<span class="hljs-property">strstart</span>-t.<span class="hljs-property">block_start</span>),a&gt;i+t.<span class="hljs-property">strm</span>.<span class="hljs-property">avail_in</span>&amp;&amp;(a=i+t.<span class="hljs-property">strm</span>.<span class="hljs-property">avail_in</span>),a&gt;n&amp;&amp;(a=n),a&lt;s&amp;&amp;((<span class="hljs-number">0</span>===a&amp;&amp;e!==V)||e===q||a!==i+t.<span class="hljs-property">strm</span>.<span class="hljs-property">avail_in</span>)))<span class="hljs-keyword">break</span>;(r=e===V&amp;&amp;a===i+t.<span class="hljs-property">strm</span>.<span class="hljs-property">avail_in</span>?<span class="hljs-number">1</span>:<span class="hljs-number">0</span>),<span class="hljs-title function_">Y</span>(t,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,r),(t.<span class="hljs-property">pending_buf</span>[t.<span class="hljs-property">pending</span>-<span class="hljs-number">4</span>]=a),(t.<span class="hljs-property">pending_buf</span>[t.<span class="hljs-property">pending</span>-<span class="hljs-number">3</span>]=a&gt;&gt;<span class="hljs-number">8</span>),(t.<span class="hljs-property">pending_buf</span>[t.<span class="hljs-property">pending</span>-<span class="hljs-number">2</span>]=~a),(t.<span class="hljs-property">pending_buf</span>[t.<span class="hljs-property">pending</span>-<span class="hljs-number">1</span>]=~a&gt;&gt;<span class="hljs-number">8</span>),<span class="hljs-title function_">xt</span>(t.<span class="hljs-property">strm</span>),i&amp;&amp;(i&gt;a&amp;&amp;(i=a),t.<span class="hljs-property">strm</span>.<span class="hljs-property">output</span>.<span class="hljs-title function_">set</span>(t.<span class="hljs-property">window</span>.<span class="hljs-title function_">subarray</span>(t.<span class="hljs-property">block_start</span>,t.<span class="hljs-property">block_start</span>+i),t.<span class="hljs-property">strm</span>.<span class="hljs-property">next_out</span>),(t.<span class="hljs-property">strm</span>.<span class="hljs-property">next_out</span>+=i),(t.<span class="hljs-property">strm</span>.<span class="hljs-property">avail_out</span>-=i),(t.<span class="hljs-property">strm</span>.<span class="hljs-property">total_out</span>+=i),(t.<span class="hljs-property">block_start</span>+=i),(a-=i)),a&amp;&amp;(<span class="hljs-title class_">Rt</span>(t.<span class="hljs-property">strm</span>,t.<span class="hljs-property">strm</span>.<span class="hljs-property">output</span>,t.<span class="hljs-property">strm</span>.<span class="hljs-property">next_out</span>,a),(t.<span class="hljs-property">strm</span>.<span class="hljs-property">next_out</span>+=a),(t.<span class="hljs-property">strm</span>.<span class="hljs-property">avail_out</span>-=a),(t.<span class="hljs-property">strm</span>.<span class="hljs-property">total_out</span>+=a))&#125;<span class="hljs-keyword">while</span>(<span class="hljs-number">0</span>===r);<span class="hljs-keyword">return</span>((o-=t.<span class="hljs-property">strm</span>.<span class="hljs-property">avail_in</span>),o&amp;&amp;(o&gt;=t.<span class="hljs-property">w_size</span>?((t.<span class="hljs-property">matches</span>=<span class="hljs-number">2</span>),t.<span class="hljs-property">window</span>.<span class="hljs-title function_">set</span>(t.<span class="hljs-property">strm</span>.<span class="hljs-property">input</span>.<span class="hljs-title function_">subarray</span>(t.<span class="hljs-property">strm</span>.<span class="hljs-property">next_in</span>-t.<span class="hljs-property">w_size</span>,t.<span class="hljs-property">strm</span>.<span class="hljs-property">next_in</span>),<span class="hljs-number">0</span>),(t.<span class="hljs-property">strstart</span>=t.<span class="hljs-property">w_size</span>),(t.<span class="hljs-property">insert</span>=t.<span class="hljs-property">strstart</span>)):(t.<span class="hljs-property">window_size</span>-t.<span class="hljs-property">strstart</span>&lt;=o&amp;&amp;((t.<span class="hljs-property">strstart</span>-=t.<span class="hljs-property">w_size</span>),t.<span class="hljs-property">window</span>.<span class="hljs-title function_">set</span>(t.<span class="hljs-property">window</span>.<span class="hljs-title function_">subarray</span>(t.<span class="hljs-property">w_size</span>,t.<span class="hljs-property">w_size</span>+t.<span class="hljs-property">strstart</span>),<span class="hljs-number">0</span>),t.<span class="hljs-property">matches</span>&lt;<span class="hljs-number">2</span>&amp;&amp;t.<span class="hljs-property">matches</span>++,t.<span class="hljs-property">insert</span>&gt;t.<span class="hljs-property">strstart</span>&amp;&amp;(t.<span class="hljs-property">insert</span>=t.<span class="hljs-property">strstart</span>)),t.<span class="hljs-property">window</span>.<span class="hljs-title function_">set</span>(t.<span class="hljs-property">strm</span>.<span class="hljs-property">input</span>.<span class="hljs-title function_">subarray</span>(t.<span class="hljs-property">strm</span>.<span class="hljs-property">next_in</span>-o,t.<span class="hljs-property">strm</span>.<span class="hljs-property">next_in</span>),t.<span class="hljs-property">strstart</span>),(t.<span class="hljs-property">strstart</span>+=o),(t.<span class="hljs-property">insert</span>+=o&gt;t.<span class="hljs-property">w_size</span>-t.<span class="hljs-property">insert</span>?t.<span class="hljs-property">w_size</span>-t.<span class="hljs-property">insert</span>:o)),(t.<span class="hljs-property">block_start</span>=t.<span class="hljs-property">strstart</span>)),t.<span class="hljs-property">high_water</span>&lt;t.<span class="hljs-property">strstart</span>&amp;&amp;(t.<span class="hljs-property">high_water</span>=t.<span class="hljs-property">strstart</span>),r?<span class="hljs-number">4</span>:e!==q&amp;&amp;e!==V&amp;&amp;<span class="hljs-number">0</span>===t.<span class="hljs-property">strm</span>.<span class="hljs-property">avail_in</span>&amp;&amp;t.<span class="hljs-property">strstart</span>===t.<span class="hljs-property">block_start</span>?<span class="hljs-number">2</span>:((n=t.<span class="hljs-property">window_size</span>-t.<span class="hljs-property">strstart</span>),t.<span class="hljs-property">strm</span>.<span class="hljs-property">avail_in</span>&gt;n&amp;&amp;t.<span class="hljs-property">block_start</span>&gt;=t.<span class="hljs-property">w_size</span>&amp;&amp;((t.<span class="hljs-property">block_start</span>-=t.<span class="hljs-property">w_size</span>),(t.<span class="hljs-property">strstart</span>-=t.<span class="hljs-property">w_size</span>),t.<span class="hljs-property">window</span>.<span class="hljs-title function_">set</span>(t.<span class="hljs-property">window</span>.<span class="hljs-title function_">subarray</span>(t.<span class="hljs-property">w_size</span>,t.<span class="hljs-property">w_size</span>+t.<span class="hljs-property">strstart</span>),<span class="hljs-number">0</span>),t.<span class="hljs-property">matches</span>&lt;<span class="hljs-number">2</span>&amp;&amp;t.<span class="hljs-property">matches</span>++,(n+=t.<span class="hljs-property">w_size</span>),t.<span class="hljs-property">insert</span>&gt;t.<span class="hljs-property">strstart</span>&amp;&amp;(t.<span class="hljs-property">insert</span>=t.<span class="hljs-property">strstart</span>)),n&gt;t.<span class="hljs-property">strm</span>.<span class="hljs-property">avail_in</span>&amp;&amp;(n=t.<span class="hljs-property">strm</span>.<span class="hljs-property">avail_in</span>),n&amp;&amp;(<span class="hljs-title class_">Rt</span>(t.<span class="hljs-property">strm</span>,t.<span class="hljs-property">window</span>,t.<span class="hljs-property">strstart</span>,n),(t.<span class="hljs-property">strstart</span>+=n),(t.<span class="hljs-property">insert</span>+=n&gt;t.<span class="hljs-property">w_size</span>-t.<span class="hljs-property">insert</span>?t.<span class="hljs-property">w_size</span>-t.<span class="hljs-property">insert</span>:n)),t.<span class="hljs-property">high_water</span>&lt;t.<span class="hljs-property">strstart</span>&amp;&amp;(t.<span class="hljs-property">high_water</span>=t.<span class="hljs-property">strstart</span>),(n=(t.<span class="hljs-property">bi_valid</span>+<span class="hljs-number">42</span>)&gt;&gt;<span class="hljs-number">3</span>),(n=t.<span class="hljs-property">pending_buf_size</span>-n&gt;<span class="hljs-number">65535</span>?<span class="hljs-number">65535</span>:t.<span class="hljs-property">pending_buf_size</span>-n),(s=n&gt;t.<span class="hljs-property">w_size</span>?t.<span class="hljs-property">w_size</span>:n),(i=t.<span class="hljs-property">strstart</span>-t.<span class="hljs-property">block_start</span>),(i&gt;=s||((i||e===V)&amp;&amp;e!==q&amp;&amp;<span class="hljs-number">0</span>===t.<span class="hljs-property">strm</span>.<span class="hljs-property">avail_in</span>&amp;&amp;i&lt;=n))&amp;&amp;((a=i&gt;n?<span class="hljs-attr">n</span>:i),(r=e===V&amp;&amp;<span class="hljs-number">0</span>===t.<span class="hljs-property">strm</span>.<span class="hljs-property">avail_in</span>&amp;&amp;a===i?<span class="hljs-number">1</span>:<span class="hljs-number">0</span>),<span class="hljs-title function_">Y</span>(t,t.<span class="hljs-property">block_start</span>,a,r),(t.<span class="hljs-property">block_start</span>+=a),<span class="hljs-title function_">xt</span>(t.<span class="hljs-property">strm</span>)),r?<span class="hljs-number">3</span>:<span class="hljs-number">1</span>))&#125;,<span class="hljs-title class_">Dt</span>=<span class="hljs-function">(<span class="hljs-params">t,e</span>)=&gt;</span>&#123;<span class="hljs-keyword">let</span> a,i;<span class="hljs-keyword">for</span>(;;)&#123;<span class="hljs-keyword">if</span>(t.<span class="hljs-property">lookahead</span>&lt;ut)&#123;<span class="hljs-keyword">if</span>((<span class="hljs-title class_">Ut</span>(t),t.<span class="hljs-property">lookahead</span>&lt;ut&amp;&amp;e===q))<span class="hljs-keyword">return</span> <span class="hljs-number">1</span>;<span class="hljs-keyword">if</span>(<span class="hljs-number">0</span>===t.<span class="hljs-property">lookahead</span>)<span class="hljs-keyword">break</span>&#125;<span class="hljs-keyword">if</span>(((a=<span class="hljs-number">0</span>),t.<span class="hljs-property">lookahead</span>&gt;=<span class="hljs-number">3</span>&amp;&amp;((t.<span class="hljs-property">ins_h</span>=<span class="hljs-title function_">yt</span>(t,t.<span class="hljs-property">ins_h</span>,t.<span class="hljs-property">window</span>[t.<span class="hljs-property">strstart</span>+<span class="hljs-number">3</span>-<span class="hljs-number">1</span>])),(a=t.<span class="hljs-property">prev</span>[t.<span class="hljs-property">strstart</span>&amp;t.<span class="hljs-property">w_mask</span>]=t.<span class="hljs-property">head</span>[t.<span class="hljs-property">ins_h</span>]),(t.<span class="hljs-property">head</span>[t.<span class="hljs-property">ins_h</span>]=t.<span class="hljs-property">strstart</span>)),<span class="hljs-number">0</span>!==a&amp;&amp;t.<span class="hljs-property">strstart</span>-a&lt;=t.<span class="hljs-property">w_size</span>-ut&amp;&amp;(t.<span class="hljs-property">match_length</span>=<span class="hljs-title class_">Zt</span>(t,a)),t.<span class="hljs-property">match_length</span>&gt;=<span class="hljs-number">3</span>))<span class="hljs-keyword">if</span>(((i=<span class="hljs-title function_">X</span>(t,t.<span class="hljs-property">strstart</span>-t.<span class="hljs-property">match_start</span>,t.<span class="hljs-property">match_length</span>-<span class="hljs-number">3</span>)),(t.<span class="hljs-property">lookahead</span>-=t.<span class="hljs-property">match_length</span>),t.<span class="hljs-property">match_length</span>&lt;=t.<span class="hljs-property">max_lazy_match</span>&amp;&amp;t.<span class="hljs-property">lookahead</span>&gt;=<span class="hljs-number">3</span>))&#123;t.<span class="hljs-property">match_length</span>--;<span class="hljs-keyword">do</span>&#123;t.<span class="hljs-property">strstart</span>++,(t.<span class="hljs-property">ins_h</span>=<span class="hljs-title function_">yt</span>(t,t.<span class="hljs-property">ins_h</span>,t.<span class="hljs-property">window</span>[t.<span class="hljs-property">strstart</span>+<span class="hljs-number">3</span>-<span class="hljs-number">1</span>])),(a=t.<span class="hljs-property">prev</span>[t.<span class="hljs-property">strstart</span>&amp;t.<span class="hljs-property">w_mask</span>]=t.<span class="hljs-property">head</span>[t.<span class="hljs-property">ins_h</span>]),(t.<span class="hljs-property">head</span>[t.<span class="hljs-property">ins_h</span>]=t.<span class="hljs-property">strstart</span>)&#125;<span class="hljs-keyword">while</span>(<span class="hljs-number">0</span>!=--t.<span class="hljs-property">match_length</span>);t.<span class="hljs-property">strstart</span>++&#125;<span class="hljs-title function_">else</span>(t.<span class="hljs-property">strstart</span>+=t.<span class="hljs-property">match_length</span>),(t.<span class="hljs-property">match_length</span>=<span class="hljs-number">0</span>),(t.<span class="hljs-property">ins_h</span>=t.<span class="hljs-property">window</span>[t.<span class="hljs-property">strstart</span>]),(t.<span class="hljs-property">ins_h</span>=<span class="hljs-title function_">yt</span>(t,t.<span class="hljs-property">ins_h</span>,t.<span class="hljs-property">window</span>[t.<span class="hljs-property">strstart</span>+<span class="hljs-number">1</span>]));<span class="hljs-title function_">else</span>(i=<span class="hljs-title function_">X</span>(t,<span class="hljs-number">0</span>,t.<span class="hljs-property">window</span>[t.<span class="hljs-property">strstart</span>])),t.<span class="hljs-property">lookahead</span>--,t.<span class="hljs-property">strstart</span>++;<span class="hljs-keyword">if</span>(i&amp;&amp;(<span class="hljs-title function_">zt</span>(t,!<span class="hljs-number">1</span>),<span class="hljs-number">0</span>===t.<span class="hljs-property">strm</span>.<span class="hljs-property">avail_out</span>))<span class="hljs-keyword">return</span> <span class="hljs-number">1</span>&#125;<span class="hljs-keyword">return</span>((t.<span class="hljs-property">insert</span>=t.<span class="hljs-property">strstart</span>&lt;<span class="hljs-number">2</span>?t.<span class="hljs-property">strstart</span>:<span class="hljs-number">2</span>),e===V?(<span class="hljs-title function_">zt</span>(t,!<span class="hljs-number">0</span>),<span class="hljs-number">0</span>===t.<span class="hljs-property">strm</span>.<span class="hljs-property">avail_out</span>?<span class="hljs-number">3</span>:<span class="hljs-number">4</span>):t.<span class="hljs-property">sym_next</span>&amp;&amp;(<span class="hljs-title function_">zt</span>(t,!<span class="hljs-number">1</span>),<span class="hljs-number">0</span>===t.<span class="hljs-property">strm</span>.<span class="hljs-property">avail_out</span>)?<span class="hljs-number">1</span>:<span class="hljs-number">2</span>)&#125;,<span class="hljs-title class_">Tt</span>=<span class="hljs-function">(<span class="hljs-params">t,e</span>)=&gt;</span>&#123;<span class="hljs-keyword">let</span> a,i,n;<span class="hljs-keyword">for</span>(;;)&#123;<span class="hljs-keyword">if</span>(t.<span class="hljs-property">lookahead</span>&lt;ut)&#123;<span class="hljs-keyword">if</span>((<span class="hljs-title class_">Ut</span>(t),t.<span class="hljs-property">lookahead</span>&lt;ut&amp;&amp;e===q))<span class="hljs-keyword">return</span> <span class="hljs-number">1</span>;<span class="hljs-keyword">if</span>(<span class="hljs-number">0</span>===t.<span class="hljs-property">lookahead</span>)<span class="hljs-keyword">break</span>&#125;<span class="hljs-keyword">if</span>(((a=<span class="hljs-number">0</span>),t.<span class="hljs-property">lookahead</span>&gt;=<span class="hljs-number">3</span>&amp;&amp;((t.<span class="hljs-property">ins_h</span>=<span class="hljs-title function_">yt</span>(t,t.<span class="hljs-property">ins_h</span>,t.<span class="hljs-property">window</span>[t.<span class="hljs-property">strstart</span>+<span class="hljs-number">3</span>-<span class="hljs-number">1</span>])),(a=t.<span class="hljs-property">prev</span>[t.<span class="hljs-property">strstart</span>&amp;t.<span class="hljs-property">w_mask</span>]=t.<span class="hljs-property">head</span>[t.<span class="hljs-property">ins_h</span>]),(t.<span class="hljs-property">head</span>[t.<span class="hljs-property">ins_h</span>]=t.<span class="hljs-property">strstart</span>)),(t.<span class="hljs-property">prev_length</span>=t.<span class="hljs-property">match_length</span>),(t.<span class="hljs-property">prev_match</span>=t.<span class="hljs-property">match_start</span>),(t.<span class="hljs-property">match_length</span>=<span class="hljs-number">2</span>),<span class="hljs-number">0</span>!==a&amp;&amp;t.<span class="hljs-property">prev_length</span>&lt;t.<span class="hljs-property">max_lazy_match</span>&amp;&amp;t.<span class="hljs-property">strstart</span>-a&lt;=t.<span class="hljs-property">w_size</span>-ut&amp;&amp;((t.<span class="hljs-property">match_length</span>=<span class="hljs-title class_">Zt</span>(t,a)),t.<span class="hljs-property">match_length</span>&lt;=<span class="hljs-number">5</span>&amp;&amp;(t.<span class="hljs-property">strategy</span>===rt||(<span class="hljs-number">3</span>===t.<span class="hljs-property">match_length</span>&amp;&amp;t.<span class="hljs-property">strstart</span>-t.<span class="hljs-property">match_start</span>&gt;<span class="hljs-number">4096</span>))&amp;&amp;(t.<span class="hljs-property">match_length</span>=<span class="hljs-number">2</span>)),t.<span class="hljs-property">prev_length</span>&gt;=<span class="hljs-number">3</span>&amp;&amp;t.<span class="hljs-property">match_length</span>&lt;=t.<span class="hljs-property">prev_length</span>))&#123;(n=t.<span class="hljs-property">strstart</span>+t.<span class="hljs-property">lookahead</span>-<span class="hljs-number">3</span>),(i=<span class="hljs-title function_">X</span>(t,t.<span class="hljs-property">strstart</span>-<span class="hljs-number">1</span>-t.<span class="hljs-property">prev_match</span>,t.<span class="hljs-property">prev_length</span>-<span class="hljs-number">3</span>)),(t.<span class="hljs-property">lookahead</span>-=t.<span class="hljs-property">prev_length</span>-<span class="hljs-number">1</span>),(t.<span class="hljs-property">prev_length</span>-=<span class="hljs-number">2</span>);<span class="hljs-keyword">do</span>&#123;++t.<span class="hljs-property">strstart</span>&lt;=n&amp;&amp;((t.<span class="hljs-property">ins_h</span>=<span class="hljs-title function_">yt</span>(t,t.<span class="hljs-property">ins_h</span>,t.<span class="hljs-property">window</span>[t.<span class="hljs-property">strstart</span>+<span class="hljs-number">3</span>-<span class="hljs-number">1</span>])),(a=t.<span class="hljs-property">prev</span>[t.<span class="hljs-property">strstart</span>&amp;t.<span class="hljs-property">w_mask</span>]=t.<span class="hljs-property">head</span>[t.<span class="hljs-property">ins_h</span>]),(t.<span class="hljs-property">head</span>[t.<span class="hljs-property">ins_h</span>]=t.<span class="hljs-property">strstart</span>))&#125;<span class="hljs-keyword">while</span>(<span class="hljs-number">0</span>!=--t.<span class="hljs-property">prev_length</span>);<span class="hljs-keyword">if</span>(((t.<span class="hljs-property">match_available</span>=<span class="hljs-number">0</span>),(t.<span class="hljs-property">match_length</span>=<span class="hljs-number">2</span>),t.<span class="hljs-property">strstart</span>++,i&amp;&amp;(<span class="hljs-title function_">zt</span>(t,!<span class="hljs-number">1</span>),<span class="hljs-number">0</span>===t.<span class="hljs-property">strm</span>.<span class="hljs-property">avail_out</span>)))<span class="hljs-keyword">return</span> <span class="hljs-number">1</span>&#125;<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(t.<span class="hljs-property">match_available</span>)&#123;<span class="hljs-keyword">if</span>(((i=<span class="hljs-title function_">X</span>(t,<span class="hljs-number">0</span>,t.<span class="hljs-property">window</span>[t.<span class="hljs-property">strstart</span>-<span class="hljs-number">1</span>])),i&amp;&amp;<span class="hljs-title function_">zt</span>(t,!<span class="hljs-number">1</span>),t.<span class="hljs-property">strstart</span>++,t.<span class="hljs-property">lookahead</span>--,<span class="hljs-number">0</span>===t.<span class="hljs-property">strm</span>.<span class="hljs-property">avail_out</span>))<span class="hljs-keyword">return</span> <span class="hljs-number">1</span>&#125;<span class="hljs-title function_">else</span>(t.<span class="hljs-property">match_available</span>=<span class="hljs-number">1</span>),t.<span class="hljs-property">strstart</span>++,t.<span class="hljs-property">lookahead</span>--&#125;<span class="hljs-keyword">return</span>(t.<span class="hljs-property">match_available</span>&amp;&amp;((i=<span class="hljs-title function_">X</span>(t,<span class="hljs-number">0</span>,t.<span class="hljs-property">window</span>[t.<span class="hljs-property">strstart</span>-<span class="hljs-number">1</span>])),(t.<span class="hljs-property">match_available</span>=<span class="hljs-number">0</span>)),(t.<span class="hljs-property">insert</span>=t.<span class="hljs-property">strstart</span>&lt;<span class="hljs-number">2</span>?t.<span class="hljs-property">strstart</span>:<span class="hljs-number">2</span>),e===V?(<span class="hljs-title function_">zt</span>(t,!<span class="hljs-number">0</span>),<span class="hljs-number">0</span>===t.<span class="hljs-property">strm</span>.<span class="hljs-property">avail_out</span>?<span class="hljs-number">3</span>:<span class="hljs-number">4</span>):t.<span class="hljs-property">sym_next</span>&amp;&amp;(<span class="hljs-title function_">zt</span>(t,!<span class="hljs-number">1</span>),<span class="hljs-number">0</span>===t.<span class="hljs-property">strm</span>.<span class="hljs-property">avail_out</span>)?<span class="hljs-number">1</span>:<span class="hljs-number">2</span>)&#125;;<span class="hljs-keyword">function</span> <span class="hljs-title function_">Ot</span>(<span class="hljs-params">t,e,a,i,n</span>)&#123;(<span class="hljs-variable language_">this</span>.<span class="hljs-property">good_length</span>=t),(<span class="hljs-variable language_">this</span>.<span class="hljs-property">max_lazy</span>=e),(<span class="hljs-variable language_">this</span>.<span class="hljs-property">nice_length</span>=a),(<span class="hljs-variable language_">this</span>.<span class="hljs-property">max_chain</span>=i),(<span class="hljs-variable language_">this</span>.<span class="hljs-property">func</span>=n)&#125;<span class="hljs-keyword">const</span> <span class="hljs-title class_">It</span>=[<span class="hljs-keyword">new</span> <span class="hljs-title class_">Ot</span>(<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-title class_">St</span>),<span class="hljs-keyword">new</span> <span class="hljs-title class_">Ot</span>(<span class="hljs-number">4</span>,<span class="hljs-number">4</span>,<span class="hljs-number">8</span>,<span class="hljs-number">4</span>,<span class="hljs-title class_">Dt</span>),<span class="hljs-keyword">new</span> <span class="hljs-title class_">Ot</span>(<span class="hljs-number">4</span>,<span class="hljs-number">5</span>,<span class="hljs-number">16</span>,<span class="hljs-number">8</span>,<span class="hljs-title class_">Dt</span>),<span class="hljs-keyword">new</span> <span class="hljs-title class_">Ot</span>(<span class="hljs-number">4</span>,<span class="hljs-number">6</span>,<span class="hljs-number">32</span>,<span class="hljs-number">32</span>,<span class="hljs-title class_">Dt</span>),<span class="hljs-keyword">new</span> <span class="hljs-title class_">Ot</span>(<span class="hljs-number">4</span>,<span class="hljs-number">4</span>,<span class="hljs-number">16</span>,<span class="hljs-number">16</span>,<span class="hljs-title class_">Tt</span>),<span class="hljs-keyword">new</span> <span class="hljs-title class_">Ot</span>(<span class="hljs-number">8</span>,<span class="hljs-number">16</span>,<span class="hljs-number">32</span>,<span class="hljs-number">32</span>,<span class="hljs-title class_">Tt</span>),<span class="hljs-keyword">new</span> <span class="hljs-title class_">Ot</span>(<span class="hljs-number">8</span>,<span class="hljs-number">16</span>,<span class="hljs-number">128</span>,<span class="hljs-number">128</span>,<span class="hljs-title class_">Tt</span>),<span class="hljs-keyword">new</span> <span class="hljs-title class_">Ot</span>(<span class="hljs-number">8</span>,<span class="hljs-number">32</span>,<span class="hljs-number">128</span>,<span class="hljs-number">256</span>,<span class="hljs-title class_">Tt</span>),<span class="hljs-keyword">new</span> <span class="hljs-title class_">Ot</span>(<span class="hljs-number">32</span>,<span class="hljs-number">128</span>,<span class="hljs-number">258</span>,<span class="hljs-number">1024</span>,<span class="hljs-title class_">Tt</span>),<span class="hljs-keyword">new</span> <span class="hljs-title class_">Ot</span>(<span class="hljs-number">32</span>,<span class="hljs-number">258</span>,<span class="hljs-number">258</span>,<span class="hljs-number">4096</span>,<span class="hljs-title class_">Tt</span>)];<span class="hljs-keyword">function</span> <span class="hljs-title function_">Ft</span>(<span class="hljs-params"></span>)&#123;(<span class="hljs-variable language_">this</span>.<span class="hljs-property">strm</span>=<span class="hljs-literal">null</span>),(<span class="hljs-variable language_">this</span>.<span class="hljs-property">status</span>=<span class="hljs-number">0</span>),(<span class="hljs-variable language_">this</span>.<span class="hljs-property">pending_buf</span>=<span class="hljs-literal">null</span>),(<span class="hljs-variable language_">this</span>.<span class="hljs-property">pending_buf_size</span>=<span class="hljs-number">0</span>),(<span class="hljs-variable language_">this</span>.<span class="hljs-property">pending_out</span>=<span class="hljs-number">0</span>),(<span class="hljs-variable language_">this</span>.<span class="hljs-property">pending</span>=<span class="hljs-number">0</span>),(<span class="hljs-variable language_">this</span>.<span class="hljs-property">wrap</span>=<span class="hljs-number">0</span>),(<span class="hljs-variable language_">this</span>.<span class="hljs-property">gzhead</span>=<span class="hljs-literal">null</span>),(<span class="hljs-variable language_">this</span>.<span class="hljs-property">gzindex</span>=<span class="hljs-number">0</span>),(<span class="hljs-variable language_">this</span>.<span class="hljs-property">method</span>=ft),(<span class="hljs-variable language_">this</span>.<span class="hljs-property">last_flush</span>=-<span class="hljs-number">1</span>),(<span class="hljs-variable language_">this</span>.<span class="hljs-property">w_size</span>=<span class="hljs-number">0</span>),(<span class="hljs-variable language_">this</span>.<span class="hljs-property">w_bits</span>=<span class="hljs-number">0</span>),(<span class="hljs-variable language_">this</span>.<span class="hljs-property">w_mask</span>=<span class="hljs-number">0</span>),(<span class="hljs-variable language_">this</span>.<span class="hljs-property">window</span>=<span class="hljs-literal">null</span>),(<span class="hljs-variable language_">this</span>.<span class="hljs-property">window_size</span>=<span class="hljs-number">0</span>),(<span class="hljs-variable language_">this</span>.<span class="hljs-property">prev</span>=<span class="hljs-literal">null</span>),(<span class="hljs-variable language_">this</span>.<span class="hljs-property">head</span>=<span class="hljs-literal">null</span>),(<span class="hljs-variable language_">this</span>.<span class="hljs-property">ins_h</span>=<span class="hljs-number">0</span>),(<span class="hljs-variable language_">this</span>.<span class="hljs-property">hash_size</span>=<span class="hljs-number">0</span>),(<span class="hljs-variable language_">this</span>.<span class="hljs-property">hash_bits</span>=<span class="hljs-number">0</span>),(<span class="hljs-variable language_">this</span>.<span class="hljs-property">hash_mask</span>=<span class="hljs-number">0</span>),(<span class="hljs-variable language_">this</span>.<span class="hljs-property">hash_shift</span>=<span class="hljs-number">0</span>),(<span class="hljs-variable language_">this</span>.<span class="hljs-property">block_start</span>=<span class="hljs-number">0</span>),(<span class="hljs-variable language_">this</span>.<span class="hljs-property">match_length</span>=<span class="hljs-number">0</span>),(<span class="hljs-variable language_">this</span>.<span class="hljs-property">prev_match</span>=<span class="hljs-number">0</span>),(<span class="hljs-variable language_">this</span>.<span class="hljs-property">match_available</span>=<span class="hljs-number">0</span>),(<span class="hljs-variable language_">this</span>.<span class="hljs-property">strstart</span>=<span class="hljs-number">0</span>),(<span class="hljs-variable language_">this</span>.<span class="hljs-property">match_start</span>=<span class="hljs-number">0</span>),(<span class="hljs-variable language_">this</span>.<span class="hljs-property">lookahead</span>=<span class="hljs-number">0</span>),(<span class="hljs-variable language_">this</span>.<span class="hljs-property">prev_length</span>=<span class="hljs-number">0</span>),(<span class="hljs-variable language_">this</span>.<span class="hljs-property">max_chain_length</span>=<span class="hljs-number">0</span>),(<span class="hljs-variable language_">this</span>.<span class="hljs-property">max_lazy_match</span>=<span class="hljs-number">0</span>),(<span class="hljs-variable language_">this</span>.<span class="hljs-property">level</span>=<span class="hljs-number">0</span>),(<span class="hljs-variable language_">this</span>.<span class="hljs-property">strategy</span>=<span class="hljs-number">0</span>),(<span class="hljs-variable language_">this</span>.<span class="hljs-property">good_match</span>=<span class="hljs-number">0</span>),(<span class="hljs-variable language_">this</span>.<span class="hljs-property">nice_match</span>=<span class="hljs-number">0</span>),(<span class="hljs-variable language_">this</span>.<span class="hljs-property">dyn_ltree</span>=<span class="hljs-keyword">new</span> <span class="hljs-title class_">Uint16Array</span>(<span class="hljs-number">1146</span>)),(<span class="hljs-variable language_">this</span>.<span class="hljs-property">dyn_dtree</span>=<span class="hljs-keyword">new</span> <span class="hljs-title class_">Uint16Array</span>(<span class="hljs-number">122</span>)),(<span class="hljs-variable language_">this</span>.<span class="hljs-property">bl_tree</span>=<span class="hljs-keyword">new</span> <span class="hljs-title class_">Uint16Array</span>(<span class="hljs-number">78</span>)),<span class="hljs-title function_">kt</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">dyn_ltree</span>),<span class="hljs-title function_">kt</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">dyn_dtree</span>),<span class="hljs-title function_">kt</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">bl_tree</span>),(<span class="hljs-variable language_">this</span>.<span class="hljs-property">l_desc</span>=<span class="hljs-literal">null</span>),(<span class="hljs-variable language_">this</span>.<span class="hljs-property">d_desc</span>=<span class="hljs-literal">null</span>),(<span class="hljs-variable language_">this</span>.<span class="hljs-property">bl_desc</span>=<span class="hljs-literal">null</span>),(<span class="hljs-variable language_">this</span>.<span class="hljs-property">bl_count</span>=<span class="hljs-keyword">new</span> <span class="hljs-title class_">Uint16Array</span>(<span class="hljs-number">16</span>)),(<span class="hljs-variable language_">this</span>.<span class="hljs-property">heap</span>=<span class="hljs-keyword">new</span> <span class="hljs-title class_">Uint16Array</span>(<span class="hljs-number">573</span>)),<span class="hljs-title function_">kt</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">heap</span>),(<span class="hljs-variable language_">this</span>.<span class="hljs-property">heap_len</span>=<span class="hljs-number">0</span>),(<span class="hljs-variable language_">this</span>.<span class="hljs-property">heap_max</span>=<span class="hljs-number">0</span>),(<span class="hljs-variable language_">this</span>.<span class="hljs-property">depth</span>=<span class="hljs-keyword">new</span> <span class="hljs-title class_">Uint16Array</span>(<span class="hljs-number">573</span>)),<span class="hljs-title function_">kt</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">depth</span>),(<span class="hljs-variable language_">this</span>.<span class="hljs-property">sym_buf</span>=<span class="hljs-number">0</span>),(<span class="hljs-variable language_">this</span>.<span class="hljs-property">lit_bufsize</span>=<span class="hljs-number">0</span>),(<span class="hljs-variable language_">this</span>.<span class="hljs-property">sym_next</span>=<span class="hljs-number">0</span>),(<span class="hljs-variable language_">this</span>.<span class="hljs-property">sym_end</span>=<span class="hljs-number">0</span>),(<span class="hljs-variable language_">this</span>.<span class="hljs-property">opt_len</span>=<span class="hljs-number">0</span>),(<span class="hljs-variable language_">this</span>.<span class="hljs-property">static_len</span>=<span class="hljs-number">0</span>),(<span class="hljs-variable language_">this</span>.<span class="hljs-property">matches</span>=<span class="hljs-number">0</span>),(<span class="hljs-variable language_">this</span>.<span class="hljs-property">insert</span>=<span class="hljs-number">0</span>),(<span class="hljs-variable language_">this</span>.<span class="hljs-property">bi_buf</span>=<span class="hljs-number">0</span>),(<span class="hljs-variable language_">this</span>.<span class="hljs-property">bi_valid</span>=<span class="hljs-number">0</span>)&#125;<span class="hljs-keyword">const</span> <span class="hljs-title function_">Lt</span>=(<span class="hljs-params">t</span>)=&gt;&#123;<span class="hljs-keyword">if</span>(!t)<span class="hljs-keyword">return</span> <span class="hljs-number">1</span>;<span class="hljs-keyword">const</span> e=t.<span class="hljs-property">state</span>;<span class="hljs-keyword">return</span>!e||e.<span class="hljs-property">strm</span>!==t||(e.<span class="hljs-property">status</span>!==wt&amp;&amp;<span class="hljs-number">57</span>!==e.<span class="hljs-property">status</span>&amp;&amp;<span class="hljs-number">69</span>!==e.<span class="hljs-property">status</span>&amp;&amp;<span class="hljs-number">73</span>!==e.<span class="hljs-property">status</span>&amp;&amp;<span class="hljs-number">91</span>!==e.<span class="hljs-property">status</span>&amp;&amp;<span class="hljs-number">103</span>!==e.<span class="hljs-property">status</span>&amp;&amp;e.<span class="hljs-property">status</span>!==mt&amp;&amp;e.<span class="hljs-property">status</span>!==bt)?<span class="hljs-number">1</span>:<span class="hljs-number">0</span>&#125;,<span class="hljs-title class_">Nt</span>=<span class="hljs-function">(<span class="hljs-params">t</span>)=&gt;</span>&#123;<span class="hljs-keyword">if</span>(<span class="hljs-title class_">Lt</span>(t))<span class="hljs-keyword">return</span> <span class="hljs-title function_">gt</span>(t,at);(t.<span class="hljs-property">total_in</span>=t.<span class="hljs-property">total_out</span>=<span class="hljs-number">0</span>),(t.<span class="hljs-property">data_type</span>=_t);<span class="hljs-keyword">const</span> e=t.<span class="hljs-property">state</span>;<span class="hljs-keyword">return</span>((e.<span class="hljs-property">pending</span>=<span class="hljs-number">0</span>),(e.<span class="hljs-property">pending_out</span>=<span class="hljs-number">0</span>),e.<span class="hljs-property">wrap</span>&lt;<span class="hljs-number">0</span>&amp;&amp;(e.<span class="hljs-property">wrap</span>=-e.<span class="hljs-property">wrap</span>),(e.<span class="hljs-property">status</span>=<span class="hljs-number">2</span>===e.<span class="hljs-property">wrap</span>?<span class="hljs-number">57</span>:e.<span class="hljs-property">wrap</span>?<span class="hljs-attr">wt</span>:mt),(t.<span class="hljs-property">adler</span>=<span class="hljs-number">2</span>===e.<span class="hljs-property">wrap</span>?<span class="hljs-number">0</span>:<span class="hljs-number">1</span>),(e.<span class="hljs-property">last_flush</span>=-<span class="hljs-number">2</span>),<span class="hljs-title function_">P</span>(e),tt)&#125;,<span class="hljs-title class_">Bt</span>=<span class="hljs-function">(<span class="hljs-params">t</span>)=&gt;</span>&#123;<span class="hljs-keyword">const</span> e=<span class="hljs-title class_">Nt</span>(t);<span class="hljs-keyword">var</span> a;<span class="hljs-keyword">return</span>(e===tt&amp;&amp;(((a=t.<span class="hljs-property">state</span>).<span class="hljs-property">window_size</span>=<span class="hljs-number">2</span>*a.<span class="hljs-property">w_size</span>),<span class="hljs-title function_">kt</span>(a.<span class="hljs-property">head</span>),(a.<span class="hljs-property">max_lazy_match</span>=<span class="hljs-title class_">It</span>[a.<span class="hljs-property">level</span>].<span class="hljs-property">max_lazy</span>),(a.<span class="hljs-property">good_match</span>=<span class="hljs-title class_">It</span>[a.<span class="hljs-property">level</span>].<span class="hljs-property">good_length</span>),(a.<span class="hljs-property">nice_match</span>=<span class="hljs-title class_">It</span>[a.<span class="hljs-property">level</span>].<span class="hljs-property">nice_length</span>),(a.<span class="hljs-property">max_chain_length</span>=<span class="hljs-title class_">It</span>[a.<span class="hljs-property">level</span>].<span class="hljs-property">max_chain</span>),(a.<span class="hljs-property">strstart</span>=<span class="hljs-number">0</span>),(a.<span class="hljs-property">block_start</span>=<span class="hljs-number">0</span>),(a.<span class="hljs-property">lookahead</span>=<span class="hljs-number">0</span>),(a.<span class="hljs-property">insert</span>=<span class="hljs-number">0</span>),(a.<span class="hljs-property">match_length</span>=a.<span class="hljs-property">prev_length</span>=<span class="hljs-number">2</span>),(a.<span class="hljs-property">match_available</span>=<span class="hljs-number">0</span>),(a.<span class="hljs-property">ins_h</span>=<span class="hljs-number">0</span>)),e)&#125;,<span class="hljs-title class_">Ct</span>=<span class="hljs-function">(<span class="hljs-params">t,e,a,i,n,s</span>)=&gt;</span>&#123;<span class="hljs-keyword">if</span>(!t)<span class="hljs-keyword">return</span> at;<span class="hljs-keyword">let</span> r=<span class="hljs-number">1</span>;<span class="hljs-keyword">if</span>((e===st&amp;&amp;(e=<span class="hljs-number">6</span>),i&lt;<span class="hljs-number">0</span>?((r=<span class="hljs-number">0</span>),(i=-i)):i&gt;<span class="hljs-number">15</span>&amp;&amp;((r=<span class="hljs-number">2</span>),(i-=<span class="hljs-number">16</span>)),n&lt;<span class="hljs-number">1</span>||n&gt;<span class="hljs-number">9</span>||a!==ft||i&lt;<span class="hljs-number">8</span>||i&gt;<span class="hljs-number">15</span>||e&lt;<span class="hljs-number">0</span>||e&gt;<span class="hljs-number">9</span>||s&lt;<span class="hljs-number">0</span>||s&gt;ht||(<span class="hljs-number">8</span>===i&amp;&amp;<span class="hljs-number">1</span>!==r)))<span class="hljs-keyword">return</span> <span class="hljs-title function_">gt</span>(t,at);<span class="hljs-number">8</span>===i&amp;&amp;(i=<span class="hljs-number">9</span>);<span class="hljs-keyword">const</span> o=<span class="hljs-keyword">new</span> <span class="hljs-title class_">Ft</span>();<span class="hljs-keyword">return</span>((t.<span class="hljs-property">state</span>=o),(o.<span class="hljs-property">strm</span>=t),(o.<span class="hljs-property">status</span>=wt),(o.<span class="hljs-property">wrap</span>=r),(o.<span class="hljs-property">gzhead</span>=<span class="hljs-literal">null</span>),(o.<span class="hljs-property">w_bits</span>=i),(o.<span class="hljs-property">w_size</span>=<span class="hljs-number">1</span>&lt;&lt;o.<span class="hljs-property">w_bits</span>),(o.<span class="hljs-property">w_mask</span>=o.<span class="hljs-property">w_size</span>-<span class="hljs-number">1</span>),(o.<span class="hljs-property">hash_bits</span>=n+<span class="hljs-number">7</span>),(o.<span class="hljs-property">hash_size</span>=<span class="hljs-number">1</span>&lt;&lt;o.<span class="hljs-property">hash_bits</span>),(o.<span class="hljs-property">hash_mask</span>=o.<span class="hljs-property">hash_size</span>-<span class="hljs-number">1</span>),(o.<span class="hljs-property">hash_shift</span>=~~((o.<span class="hljs-property">hash_bits</span>+<span class="hljs-number">3</span>-<span class="hljs-number">1</span>)/<span class="hljs-number">3</span>)),(o.<span class="hljs-property">window</span>=<span class="hljs-keyword">new</span> <span class="hljs-title class_">Uint8Array</span>(<span class="hljs-number">2</span>*o.<span class="hljs-property">w_size</span>)),(o.<span class="hljs-property">head</span>=<span class="hljs-keyword">new</span> <span class="hljs-title class_">Uint16Array</span>(o.<span class="hljs-property">hash_size</span>)),(o.<span class="hljs-property">prev</span>=<span class="hljs-keyword">new</span> <span class="hljs-title class_">Uint16Array</span>(o.<span class="hljs-property">w_size</span>)),(o.<span class="hljs-property">lit_bufsize</span>=<span class="hljs-number">1</span>&lt;&lt;(n+<span class="hljs-number">6</span>)),(o.<span class="hljs-property">pending_buf_size</span>=<span class="hljs-number">4</span>*o.<span class="hljs-property">lit_bufsize</span>),(o.<span class="hljs-property">pending_buf</span>=<span class="hljs-keyword">new</span> <span class="hljs-title class_">Uint8Array</span>(o.<span class="hljs-property">pending_buf_size</span>)),(o.<span class="hljs-property">sym_buf</span>=o.<span class="hljs-property">lit_bufsize</span>),(o.<span class="hljs-property">sym_end</span>=<span class="hljs-number">3</span>*(o.<span class="hljs-property">lit_bufsize</span>-<span class="hljs-number">1</span>)),(o.<span class="hljs-property">level</span>=e),(o.<span class="hljs-property">strategy</span>=s),(o.<span class="hljs-property">method</span>=a),<span class="hljs-title class_">Bt</span>(t))&#125;;<span class="hljs-keyword">var</span> <span class="hljs-title class_">Mt</span>=&#123;<span class="hljs-attr">deflateInit</span>:<span class="hljs-function">(<span class="hljs-params">t,e</span>)=&gt;</span><span class="hljs-title class_">Ct</span>(t,e,ft,<span class="hljs-number">15</span>,<span class="hljs-number">8</span>,dt),<span class="hljs-attr">deflateInit2</span>:<span class="hljs-title class_">Ct</span>,<span class="hljs-attr">deflateReset</span>:<span class="hljs-title class_">Bt</span>,<span class="hljs-attr">deflateResetKeep</span>:<span class="hljs-title class_">Nt</span>,<span class="hljs-attr">deflateSetHeader</span>:<span class="hljs-function">(<span class="hljs-params">t,e</span>)=&gt;</span><span class="hljs-title class_">Lt</span>(t)||<span class="hljs-number">2</span>!==t.<span class="hljs-property">state</span>.<span class="hljs-property">wrap</span>?<span class="hljs-attr">at</span>:((t.<span class="hljs-property">state</span>.<span class="hljs-property">gzhead</span>=e),tt),<span class="hljs-attr">deflate</span>:<span class="hljs-function">(<span class="hljs-params">t,e</span>)=&gt;</span>&#123;<span class="hljs-keyword">if</span>(<span class="hljs-title class_">Lt</span>(t)||e&gt;$||e&lt;<span class="hljs-number">0</span>)<span class="hljs-keyword">return</span> t?<span class="hljs-title function_">gt</span>(t,at):at;<span class="hljs-keyword">const</span> a=t.<span class="hljs-property">state</span>;<span class="hljs-keyword">if</span>(!t.<span class="hljs-property">output</span>||(<span class="hljs-number">0</span>!==t.<span class="hljs-property">avail_in</span>&amp;&amp;!t.<span class="hljs-property">input</span>)||(a.<span class="hljs-property">status</span>===bt&amp;&amp;e!==V))<span class="hljs-keyword">return</span> <span class="hljs-title function_">gt</span>(t,<span class="hljs-number">0</span>===t.<span class="hljs-property">avail_out</span>?<span class="hljs-attr">nt</span>:at);<span class="hljs-keyword">const</span> i=a.<span class="hljs-property">last_flush</span>;<span class="hljs-keyword">if</span>(((a.<span class="hljs-property">last_flush</span>=e),<span class="hljs-number">0</span>!==a.<span class="hljs-property">pending</span>))&#123;<span class="hljs-keyword">if</span>((<span class="hljs-title function_">xt</span>(t),<span class="hljs-number">0</span>===t.<span class="hljs-property">avail_out</span>))<span class="hljs-keyword">return</span>(a.<span class="hljs-property">last_flush</span>=-<span class="hljs-number">1</span>),tt&#125;<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(<span class="hljs-number">0</span>===t.<span class="hljs-property">avail_in</span>&amp;&amp;<span class="hljs-title function_">pt</span>(e)&lt;=<span class="hljs-title function_">pt</span>(i)&amp;&amp;e!==V)<span class="hljs-keyword">return</span> <span class="hljs-title function_">gt</span>(t,nt);<span class="hljs-keyword">if</span>(a.<span class="hljs-property">status</span>===bt&amp;&amp;<span class="hljs-number">0</span>!==t.<span class="hljs-property">avail_in</span>)<span class="hljs-keyword">return</span> <span class="hljs-title function_">gt</span>(t,nt);<span class="hljs-keyword">if</span>((a.<span class="hljs-property">status</span>===wt&amp;&amp;<span class="hljs-number">0</span>===a.<span class="hljs-property">wrap</span>&amp;&amp;(a.<span class="hljs-property">status</span>=mt),a.<span class="hljs-property">status</span>===wt))&#123;<span class="hljs-keyword">let</span> e=(ft+((a.<span class="hljs-property">w_bits</span>-<span class="hljs-number">8</span>)&lt;&lt;<span class="hljs-number">4</span>))&lt;&lt;<span class="hljs-number">8</span>,i=-<span class="hljs-number">1</span>;<span class="hljs-keyword">if</span>(((i=a.<span class="hljs-property">strategy</span>&gt;=ot||a.<span class="hljs-property">level</span>&lt;<span class="hljs-number">2</span>?<span class="hljs-number">0</span>:a.<span class="hljs-property">level</span>&lt;<span class="hljs-number">6</span>?<span class="hljs-number">1</span>:<span class="hljs-number">6</span>===a.<span class="hljs-property">level</span>?<span class="hljs-number">2</span>:<span class="hljs-number">3</span>),(e|=i&lt;&lt;<span class="hljs-number">6</span>),<span class="hljs-number">0</span>!==a.<span class="hljs-property">strstart</span>&amp;&amp;(e|=<span class="hljs-number">32</span>),(e+=<span class="hljs-number">31</span>-(e%<span class="hljs-number">31</span>)),<span class="hljs-title class_">Et</span>(a,e),<span class="hljs-number">0</span>!==a.<span class="hljs-property">strstart</span>&amp;&amp;(<span class="hljs-title class_">Et</span>(a,t.<span class="hljs-property">adler</span>&gt;&gt;&gt;<span class="hljs-number">16</span>),<span class="hljs-title class_">Et</span>(a,<span class="hljs-number">65535</span>&amp;t.<span class="hljs-property">adler</span>)),(t.<span class="hljs-property">adler</span>=<span class="hljs-number">1</span>),(a.<span class="hljs-property">status</span>=mt),<span class="hljs-title function_">xt</span>(t),<span class="hljs-number">0</span>!==a.<span class="hljs-property">pending</span>))<span class="hljs-keyword">return</span>(a.<span class="hljs-property">last_flush</span>=-<span class="hljs-number">1</span>),tt&#125;<span class="hljs-keyword">if</span>(<span class="hljs-number">57</span>===a.<span class="hljs-property">status</span>)<span class="hljs-keyword">if</span>(((t.<span class="hljs-property">adler</span>=<span class="hljs-number">0</span>),<span class="hljs-title class_">At</span>(a,<span class="hljs-number">31</span>),<span class="hljs-title class_">At</span>(a,<span class="hljs-number">139</span>),<span class="hljs-title class_">At</span>(a,<span class="hljs-number">8</span>),a.<span class="hljs-property">gzhead</span>))<span class="hljs-title class_">At</span>(a,(a.<span class="hljs-property">gzhead</span>.<span class="hljs-property">text</span>?<span class="hljs-number">1</span>:<span class="hljs-number">0</span>)+(a.<span class="hljs-property">gzhead</span>.<span class="hljs-property">hcrc</span>?<span class="hljs-number">2</span>:<span class="hljs-number">0</span>)+(a.<span class="hljs-property">gzhead</span>.<span class="hljs-property">extra</span>?<span class="hljs-number">4</span>:<span class="hljs-number">0</span>)+(a.<span class="hljs-property">gzhead</span>.<span class="hljs-property">name</span>?<span class="hljs-number">8</span>:<span class="hljs-number">0</span>)+(a.<span class="hljs-property">gzhead</span>.<span class="hljs-property">comment</span>?<span class="hljs-number">16</span>:<span class="hljs-number">0</span>)),<span class="hljs-title class_">At</span>(a,<span class="hljs-number">255</span>&amp;a.<span class="hljs-property">gzhead</span>.<span class="hljs-property">time</span>),<span class="hljs-title class_">At</span>(a,(a.<span class="hljs-property">gzhead</span>.<span class="hljs-property">time</span>&gt;&gt;<span class="hljs-number">8</span>)&amp;<span class="hljs-number">255</span>),<span class="hljs-title class_">At</span>(a,(a.<span class="hljs-property">gzhead</span>.<span class="hljs-property">time</span>&gt;&gt;<span class="hljs-number">16</span>)&amp;<span class="hljs-number">255</span>),<span class="hljs-title class_">At</span>(a,(a.<span class="hljs-property">gzhead</span>.<span class="hljs-property">time</span>&gt;&gt;<span class="hljs-number">24</span>)&amp;<span class="hljs-number">255</span>),<span class="hljs-title class_">At</span>(a,<span class="hljs-number">9</span>===a.<span class="hljs-property">level</span>?<span class="hljs-number">2</span>:a.<span class="hljs-property">strategy</span>&gt;=ot||a.<span class="hljs-property">level</span>&lt;<span class="hljs-number">2</span>?<span class="hljs-number">4</span>:<span class="hljs-number">0</span>),<span class="hljs-title class_">At</span>(a,<span class="hljs-number">255</span>&amp;a.<span class="hljs-property">gzhead</span>.<span class="hljs-property">os</span>),a.<span class="hljs-property">gzhead</span>.<span class="hljs-property">extra</span>&amp;&amp;a.<span class="hljs-property">gzhead</span>.<span class="hljs-property">extra</span>.<span class="hljs-property">length</span>&amp;&amp;(<span class="hljs-title class_">At</span>(a,<span class="hljs-number">255</span>&amp;a.<span class="hljs-property">gzhead</span>.<span class="hljs-property">extra</span>.<span class="hljs-property">length</span>),<span class="hljs-title class_">At</span>(a,(a.<span class="hljs-property">gzhead</span>.<span class="hljs-property">extra</span>.<span class="hljs-property">length</span>&gt;&gt;<span class="hljs-number">8</span>)&amp;<span class="hljs-number">255</span>)),a.<span class="hljs-property">gzhead</span>.<span class="hljs-property">hcrc</span>&amp;&amp;(t.<span class="hljs-property">adler</span>=<span class="hljs-title function_">H</span>(t.<span class="hljs-property">adler</span>,a.<span class="hljs-property">pending_buf</span>,a.<span class="hljs-property">pending</span>,<span class="hljs-number">0</span>)),(a.<span class="hljs-property">gzindex</span>=<span class="hljs-number">0</span>),(a.<span class="hljs-property">status</span>=<span class="hljs-number">69</span>);<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>((<span class="hljs-title class_">At</span>(a,<span class="hljs-number">0</span>),<span class="hljs-title class_">At</span>(a,<span class="hljs-number">0</span>),<span class="hljs-title class_">At</span>(a,<span class="hljs-number">0</span>),<span class="hljs-title class_">At</span>(a,<span class="hljs-number">0</span>),<span class="hljs-title class_">At</span>(a,<span class="hljs-number">0</span>),<span class="hljs-title class_">At</span>(a,<span class="hljs-number">9</span>===a.<span class="hljs-property">level</span>?<span class="hljs-number">2</span>:a.<span class="hljs-property">strategy</span>&gt;=ot||a.<span class="hljs-property">level</span>&lt;<span class="hljs-number">2</span>?<span class="hljs-number">4</span>:<span class="hljs-number">0</span>),<span class="hljs-title class_">At</span>(a,<span class="hljs-number">3</span>),(a.<span class="hljs-property">status</span>=mt),<span class="hljs-title function_">xt</span>(t),<span class="hljs-number">0</span>!==a.<span class="hljs-property">pending</span>))<span class="hljs-keyword">return</span>(a.<span class="hljs-property">last_flush</span>=-<span class="hljs-number">1</span>),tt;<span class="hljs-keyword">if</span>(<span class="hljs-number">69</span>===a.<span class="hljs-property">status</span>)&#123;<span class="hljs-keyword">if</span>(a.<span class="hljs-property">gzhead</span>.<span class="hljs-property">extra</span>)&#123;<span class="hljs-keyword">let</span> e=a.<span class="hljs-property">pending</span>,i=(<span class="hljs-number">65535</span>&amp;a.<span class="hljs-property">gzhead</span>.<span class="hljs-property">extra</span>.<span class="hljs-property">length</span>)-a.<span class="hljs-property">gzindex</span>;<span class="hljs-keyword">for</span>(;a.<span class="hljs-property">pending</span>+i&gt;a.<span class="hljs-property">pending_buf_size</span>;)&#123;<span class="hljs-keyword">let</span> n=a.<span class="hljs-property">pending_buf_size</span>-a.<span class="hljs-property">pending</span>;<span class="hljs-keyword">if</span>((a.<span class="hljs-property">pending_buf</span>.<span class="hljs-title function_">set</span>(a.<span class="hljs-property">gzhead</span>.<span class="hljs-property">extra</span>.<span class="hljs-title function_">subarray</span>(a.<span class="hljs-property">gzindex</span>,a.<span class="hljs-property">gzindex</span>+n),a.<span class="hljs-property">pending</span>),(a.<span class="hljs-property">pending</span>=a.<span class="hljs-property">pending_buf_size</span>),a.<span class="hljs-property">gzhead</span>.<span class="hljs-property">hcrc</span>&amp;&amp;a.<span class="hljs-property">pending</span>&gt;e&amp;&amp;(t.<span class="hljs-property">adler</span>=<span class="hljs-title function_">H</span>(t.<span class="hljs-property">adler</span>,a.<span class="hljs-property">pending_buf</span>,a.<span class="hljs-property">pending</span>-e,e)),(a.<span class="hljs-property">gzindex</span>+=n),<span class="hljs-title function_">xt</span>(t),<span class="hljs-number">0</span>!==a.<span class="hljs-property">pending</span>))<span class="hljs-keyword">return</span>(a.<span class="hljs-property">last_flush</span>=-<span class="hljs-number">1</span>),tt;(e=<span class="hljs-number">0</span>),(i-=n)&#125;<span class="hljs-keyword">let</span> n=<span class="hljs-keyword">new</span> <span class="hljs-title class_">Uint8Array</span>(a.<span class="hljs-property">gzhead</span>.<span class="hljs-property">extra</span>);a.<span class="hljs-property">pending_buf</span>.<span class="hljs-title function_">set</span>(n.<span class="hljs-title function_">subarray</span>(a.<span class="hljs-property">gzindex</span>,a.<span class="hljs-property">gzindex</span>+i),a.<span class="hljs-property">pending</span>),(a.<span class="hljs-property">pending</span>+=i),a.<span class="hljs-property">gzhead</span>.<span class="hljs-property">hcrc</span>&amp;&amp;a.<span class="hljs-property">pending</span>&gt;e&amp;&amp;(t.<span class="hljs-property">adler</span>=<span class="hljs-title function_">H</span>(t.<span class="hljs-property">adler</span>,a.<span class="hljs-property">pending_buf</span>,a.<span class="hljs-property">pending</span>-e,e)),(a.<span class="hljs-property">gzindex</span>=<span class="hljs-number">0</span>)&#125;a.<span class="hljs-property">status</span>=<span class="hljs-number">73</span>&#125;<span class="hljs-keyword">if</span>(<span class="hljs-number">73</span>===a.<span class="hljs-property">status</span>)&#123;<span class="hljs-keyword">if</span>(a.<span class="hljs-property">gzhead</span>.<span class="hljs-property">name</span>)&#123;<span class="hljs-keyword">let</span> e,i=a.<span class="hljs-property">pending</span>;<span class="hljs-keyword">do</span>&#123;<span class="hljs-keyword">if</span>(a.<span class="hljs-property">pending</span>===a.<span class="hljs-property">pending_buf_size</span>)&#123;<span class="hljs-keyword">if</span>((a.<span class="hljs-property">gzhead</span>.<span class="hljs-property">hcrc</span>&amp;&amp;a.<span class="hljs-property">pending</span>&gt;i&amp;&amp;(t.<span class="hljs-property">adler</span>=<span class="hljs-title function_">H</span>(t.<span class="hljs-property">adler</span>,a.<span class="hljs-property">pending_buf</span>,a.<span class="hljs-property">pending</span>-i,i)),<span class="hljs-title function_">xt</span>(t),<span class="hljs-number">0</span>!==a.<span class="hljs-property">pending</span>))<span class="hljs-keyword">return</span>(a.<span class="hljs-property">last_flush</span>=-<span class="hljs-number">1</span>),tt;i=<span class="hljs-number">0</span>&#125;(e=a.<span class="hljs-property">gzindex</span>&lt;a.<span class="hljs-property">gzhead</span>.<span class="hljs-property">name</span>.<span class="hljs-property">length</span>?<span class="hljs-number">255</span>&amp;a.<span class="hljs-property">gzhead</span>.<span class="hljs-property">name</span>.<span class="hljs-title function_">charCodeAt</span>(a.<span class="hljs-property">gzindex</span>++):<span class="hljs-number">0</span>),<span class="hljs-title class_">At</span>(a,e)&#125;<span class="hljs-keyword">while</span>(<span class="hljs-number">0</span>!==e);a.<span class="hljs-property">gzhead</span>.<span class="hljs-property">hcrc</span>&amp;&amp;a.<span class="hljs-property">pending</span>&gt;i&amp;&amp;(t.<span class="hljs-property">adler</span>=<span class="hljs-title function_">H</span>(t.<span class="hljs-property">adler</span>,a.<span class="hljs-property">pending_buf</span>,a.<span class="hljs-property">pending</span>-i,i)),(a.<span class="hljs-property">gzindex</span>=<span class="hljs-number">0</span>)&#125;a.<span class="hljs-property">status</span>=<span class="hljs-number">91</span>&#125;<span class="hljs-keyword">if</span>(<span class="hljs-number">91</span>===a.<span class="hljs-property">status</span>)&#123;<span class="hljs-keyword">if</span>(a.<span class="hljs-property">gzhead</span>.<span class="hljs-property">comment</span>)&#123;<span class="hljs-keyword">let</span> e,i=a.<span class="hljs-property">pending</span>;<span class="hljs-keyword">do</span>&#123;<span class="hljs-keyword">if</span>(a.<span class="hljs-property">pending</span>===a.<span class="hljs-property">pending_buf_size</span>)&#123;<span class="hljs-keyword">if</span>((a.<span class="hljs-property">gzhead</span>.<span class="hljs-property">hcrc</span>&amp;&amp;a.<span class="hljs-property">pending</span>&gt;i&amp;&amp;(t.<span class="hljs-property">adler</span>=<span class="hljs-title function_">H</span>(t.<span class="hljs-property">adler</span>,a.<span class="hljs-property">pending_buf</span>,a.<span class="hljs-property">pending</span>-i,i)),<span class="hljs-title function_">xt</span>(t),<span class="hljs-number">0</span>!==a.<span class="hljs-property">pending</span>))<span class="hljs-keyword">return</span>(a.<span class="hljs-property">last_flush</span>=-<span class="hljs-number">1</span>),tt;i=<span class="hljs-number">0</span>&#125;(e=a.<span class="hljs-property">gzindex</span>&lt;a.<span class="hljs-property">gzhead</span>.<span class="hljs-property">comment</span>.<span class="hljs-property">length</span>?<span class="hljs-number">255</span>&amp;a.<span class="hljs-property">gzhead</span>.<span class="hljs-property">comment</span>.<span class="hljs-title function_">charCodeAt</span>(a.<span class="hljs-property">gzindex</span>++):<span class="hljs-number">0</span>),<span class="hljs-title class_">At</span>(a,e)&#125;<span class="hljs-keyword">while</span>(<span class="hljs-number">0</span>!==e);a.<span class="hljs-property">gzhead</span>.<span class="hljs-property">hcrc</span>&amp;&amp;a.<span class="hljs-property">pending</span>&gt;i&amp;&amp;(t.<span class="hljs-property">adler</span>=<span class="hljs-title function_">H</span>(t.<span class="hljs-property">adler</span>,a.<span class="hljs-property">pending_buf</span>,a.<span class="hljs-property">pending</span>-i,i))&#125;a.<span class="hljs-property">status</span>=<span class="hljs-number">103</span>&#125;<span class="hljs-keyword">if</span>(<span class="hljs-number">103</span>===a.<span class="hljs-property">status</span>)&#123;<span class="hljs-keyword">if</span>(a.<span class="hljs-property">gzhead</span>.<span class="hljs-property">hcrc</span>)&#123;<span class="hljs-keyword">if</span>(a.<span class="hljs-property">pending</span>+<span class="hljs-number">2</span>&gt;a.<span class="hljs-property">pending_buf_size</span>&amp;&amp;(<span class="hljs-title function_">xt</span>(t),<span class="hljs-number">0</span>!==a.<span class="hljs-property">pending</span>))<span class="hljs-keyword">return</span>(a.<span class="hljs-property">last_flush</span>=-<span class="hljs-number">1</span>),tt;<span class="hljs-title class_">At</span>(a,<span class="hljs-number">255</span>&amp;t.<span class="hljs-property">adler</span>),<span class="hljs-title class_">At</span>(a,(t.<span class="hljs-property">adler</span>&gt;&gt;<span class="hljs-number">8</span>)&amp;<span class="hljs-number">255</span>),(t.<span class="hljs-property">adler</span>=<span class="hljs-number">0</span>)&#125;<span class="hljs-keyword">if</span>(((a.<span class="hljs-property">status</span>=mt),<span class="hljs-title function_">xt</span>(t),<span class="hljs-number">0</span>!==a.<span class="hljs-property">pending</span>))<span class="hljs-keyword">return</span>(a.<span class="hljs-property">last_flush</span>=-<span class="hljs-number">1</span>),tt&#125;<span class="hljs-keyword">if</span>(<span class="hljs-number">0</span>!==t.<span class="hljs-property">avail_in</span>||<span class="hljs-number">0</span>!==a.<span class="hljs-property">lookahead</span>||(e!==q&amp;&amp;a.<span class="hljs-property">status</span>!==bt))&#123;<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>===a.<span class="hljs-property">level</span>?<span class="hljs-title class_">St</span>(a,e):a.<span class="hljs-property">strategy</span>===ot?(<span class="hljs-function">(<span class="hljs-params">t,e</span>)=&gt;</span>&#123;<span class="hljs-keyword">let</span> a;<span class="hljs-keyword">for</span>(;;)&#123;<span class="hljs-keyword">if</span>(<span class="hljs-number">0</span>===t.<span class="hljs-property">lookahead</span>&amp;&amp;(<span class="hljs-title class_">Ut</span>(t),<span class="hljs-number">0</span>===t.<span class="hljs-property">lookahead</span>))&#123;<span class="hljs-keyword">if</span>(e===q)<span class="hljs-keyword">return</span> <span class="hljs-number">1</span>;<span class="hljs-keyword">break</span>&#125;<span class="hljs-keyword">if</span>(((t.<span class="hljs-property">match_length</span>=<span class="hljs-number">0</span>),(a=<span class="hljs-title function_">X</span>(t,<span class="hljs-number">0</span>,t.<span class="hljs-property">window</span>[t.<span class="hljs-property">strstart</span>])),t.<span class="hljs-property">lookahead</span>--,t.<span class="hljs-property">strstart</span>++,a&amp;&amp;(<span class="hljs-title function_">zt</span>(t,!<span class="hljs-number">1</span>),<span class="hljs-number">0</span>===t.<span class="hljs-property">strm</span>.<span class="hljs-property">avail_out</span>)))<span class="hljs-keyword">return</span> <span class="hljs-number">1</span>&#125;<span class="hljs-keyword">return</span>((t.<span class="hljs-property">insert</span>=<span class="hljs-number">0</span>),e===V?(<span class="hljs-title function_">zt</span>(t,!<span class="hljs-number">0</span>),<span class="hljs-number">0</span>===t.<span class="hljs-property">strm</span>.<span class="hljs-property">avail_out</span>?<span class="hljs-number">3</span>:<span class="hljs-number">4</span>):t.<span class="hljs-property">sym_next</span>&amp;&amp;(<span class="hljs-title function_">zt</span>(t,!<span class="hljs-number">1</span>),<span class="hljs-number">0</span>===t.<span class="hljs-property">strm</span>.<span class="hljs-property">avail_out</span>)?<span class="hljs-number">1</span>:<span class="hljs-number">2</span>)&#125;)(a,e):a.<span class="hljs-property">strategy</span>===lt?(<span class="hljs-function">(<span class="hljs-params">t,e</span>)=&gt;</span>&#123;<span class="hljs-keyword">let</span> a,i,n,s;<span class="hljs-keyword">const</span> r=t.<span class="hljs-property">window</span>;<span class="hljs-keyword">for</span>(;;)&#123;<span class="hljs-keyword">if</span>(t.<span class="hljs-property">lookahead</span>&lt;=ct)&#123;<span class="hljs-keyword">if</span>((<span class="hljs-title class_">Ut</span>(t),t.<span class="hljs-property">lookahead</span>&lt;=ct&amp;&amp;e===q))<span class="hljs-keyword">return</span> <span class="hljs-number">1</span>;<span class="hljs-keyword">if</span>(<span class="hljs-number">0</span>===t.<span class="hljs-property">lookahead</span>)<span class="hljs-keyword">break</span>&#125;<span class="hljs-keyword">if</span>(((t.<span class="hljs-property">match_length</span>=<span class="hljs-number">0</span>),t.<span class="hljs-property">lookahead</span>&gt;=<span class="hljs-number">3</span>&amp;&amp;t.<span class="hljs-property">strstart</span>&gt;<span class="hljs-number">0</span>&amp;&amp;((n=t.<span class="hljs-property">strstart</span>-<span class="hljs-number">1</span>),(i=r[n]),i===r[++n]&amp;&amp;i===r[++n]&amp;&amp;i===r[++n])))&#123;s=t.<span class="hljs-property">strstart</span>+ct;<span class="hljs-keyword">do</span>&#123;&#125;<span class="hljs-keyword">while</span>(i===r[++n]&amp;&amp;i===r[++n]&amp;&amp;i===r[++n]&amp;&amp;i===r[++n]&amp;&amp;i===r[++n]&amp;&amp;i===r[++n]&amp;&amp;i===r[++n]&amp;&amp;i===r[++n]&amp;&amp;n&lt;s);(t.<span class="hljs-property">match_length</span>=ct-(s-n)),t.<span class="hljs-property">match_length</span>&gt;t.<span class="hljs-property">lookahead</span>&amp;&amp;(t.<span class="hljs-property">match_length</span>=t.<span class="hljs-property">lookahead</span>)&#125;<span class="hljs-keyword">if</span>((t.<span class="hljs-property">match_length</span>&gt;=<span class="hljs-number">3</span>?((a=<span class="hljs-title function_">X</span>(t,<span class="hljs-number">1</span>,t.<span class="hljs-property">match_length</span>-<span class="hljs-number">3</span>)),(t.<span class="hljs-property">lookahead</span>-=t.<span class="hljs-property">match_length</span>),(t.<span class="hljs-property">strstart</span>+=t.<span class="hljs-property">match_length</span>),(t.<span class="hljs-property">match_length</span>=<span class="hljs-number">0</span>)):((a=<span class="hljs-title function_">X</span>(t,<span class="hljs-number">0</span>,t.<span class="hljs-property">window</span>[t.<span class="hljs-property">strstart</span>])),t.<span class="hljs-property">lookahead</span>--,t.<span class="hljs-property">strstart</span>++),a&amp;&amp;(<span class="hljs-title function_">zt</span>(t,!<span class="hljs-number">1</span>),<span class="hljs-number">0</span>===t.<span class="hljs-property">strm</span>.<span class="hljs-property">avail_out</span>)))<span class="hljs-keyword">return</span> <span class="hljs-number">1</span>&#125;<span class="hljs-keyword">return</span>((t.<span class="hljs-property">insert</span>=<span class="hljs-number">0</span>),e===V?(<span class="hljs-title function_">zt</span>(t,!<span class="hljs-number">0</span>),<span class="hljs-number">0</span>===t.<span class="hljs-property">strm</span>.<span class="hljs-property">avail_out</span>?<span class="hljs-number">3</span>:<span class="hljs-number">4</span>):t.<span class="hljs-property">sym_next</span>&amp;&amp;(<span class="hljs-title function_">zt</span>(t,!<span class="hljs-number">1</span>),<span class="hljs-number">0</span>===t.<span class="hljs-property">strm</span>.<span class="hljs-property">avail_out</span>)?<span class="hljs-number">1</span>:<span class="hljs-number">2</span>)&#125;)(a,e):<span class="hljs-title class_">It</span>[a.<span class="hljs-property">level</span>].<span class="hljs-title function_">func</span>(a,e);<span class="hljs-keyword">if</span>(((<span class="hljs-number">3</span>!==i&amp;&amp;<span class="hljs-number">4</span>!==i)||(a.<span class="hljs-property">status</span>=bt),<span class="hljs-number">1</span>===i||<span class="hljs-number">3</span>===i))<span class="hljs-keyword">return</span> <span class="hljs-number">0</span>===t.<span class="hljs-property">avail_out</span>&amp;&amp;(a.<span class="hljs-property">last_flush</span>=-<span class="hljs-number">1</span>),tt;<span class="hljs-keyword">if</span>(<span class="hljs-number">2</span>===i&amp;&amp;(e===J?<span class="hljs-title function_">W</span>(a):e!==$&amp;&amp;(<span class="hljs-title function_">Y</span>(a,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,!<span class="hljs-number">1</span>),e===Q&amp;&amp;(<span class="hljs-title function_">kt</span>(a.<span class="hljs-property">head</span>),<span class="hljs-number">0</span>===a.<span class="hljs-property">lookahead</span>&amp;&amp;((a.<span class="hljs-property">strstart</span>=<span class="hljs-number">0</span>),(a.<span class="hljs-property">block_start</span>=<span class="hljs-number">0</span>),(a.<span class="hljs-property">insert</span>=<span class="hljs-number">0</span>)))),<span class="hljs-title function_">xt</span>(t),<span class="hljs-number">0</span>===t.<span class="hljs-property">avail_out</span>))<span class="hljs-keyword">return</span>(a.<span class="hljs-property">last_flush</span>=-<span class="hljs-number">1</span>),tt&#125;<span class="hljs-keyword">return</span> e!==V?<span class="hljs-attr">tt</span>:a.<span class="hljs-property">wrap</span>&lt;=<span class="hljs-number">0</span>?<span class="hljs-attr">et</span>:(<span class="hljs-number">2</span>===a.<span class="hljs-property">wrap</span>?(<span class="hljs-title class_">At</span>(a,<span class="hljs-number">255</span>&amp;t.<span class="hljs-property">adler</span>),<span class="hljs-title class_">At</span>(a,(t.<span class="hljs-property">adler</span>&gt;&gt;<span class="hljs-number">8</span>)&amp;<span class="hljs-number">255</span>),<span class="hljs-title class_">At</span>(a,(t.<span class="hljs-property">adler</span>&gt;&gt;<span class="hljs-number">16</span>)&amp;<span class="hljs-number">255</span>),<span class="hljs-title class_">At</span>(a,(t.<span class="hljs-property">adler</span>&gt;&gt;<span class="hljs-number">24</span>)&amp;<span class="hljs-number">255</span>),<span class="hljs-title class_">At</span>(a,<span class="hljs-number">255</span>&amp;t.<span class="hljs-property">total_in</span>),<span class="hljs-title class_">At</span>(a,(t.<span class="hljs-property">total_in</span>&gt;&gt;<span class="hljs-number">8</span>)&amp;<span class="hljs-number">255</span>),<span class="hljs-title class_">At</span>(a,(t.<span class="hljs-property">total_in</span>&gt;&gt;<span class="hljs-number">16</span>)&amp;<span class="hljs-number">255</span>),<span class="hljs-title class_">At</span>(a,(t.<span class="hljs-property">total_in</span>&gt;&gt;<span class="hljs-number">24</span>)&amp;<span class="hljs-number">255</span>)):(<span class="hljs-title class_">Et</span>(a,t.<span class="hljs-property">adler</span>&gt;&gt;&gt;<span class="hljs-number">16</span>),<span class="hljs-title class_">Et</span>(a,<span class="hljs-number">65535</span>&amp;t.<span class="hljs-property">adler</span>)),<span class="hljs-title function_">xt</span>(t),a.<span class="hljs-property">wrap</span>&gt;<span class="hljs-number">0</span>&amp;&amp;(a.<span class="hljs-property">wrap</span>=-a.<span class="hljs-property">wrap</span>),<span class="hljs-number">0</span>!==a.<span class="hljs-property">pending</span>?<span class="hljs-attr">tt</span>:et)&#125;,<span class="hljs-attr">deflateEnd</span>:<span class="hljs-function">(<span class="hljs-params">t</span>)=&gt;</span>&#123;<span class="hljs-keyword">if</span>(<span class="hljs-title class_">Lt</span>(t))<span class="hljs-keyword">return</span> at;<span class="hljs-keyword">const</span> e=t.<span class="hljs-property">state</span>.<span class="hljs-property">status</span>;<span class="hljs-keyword">return</span>(t.<span class="hljs-property">state</span>=<span class="hljs-literal">null</span>),e===mt?<span class="hljs-title function_">gt</span>(t,it):tt&#125;,<span class="hljs-attr">deflateSetDictionary</span>:<span class="hljs-function">(<span class="hljs-params">t,e</span>)=&gt;</span>&#123;<span class="hljs-keyword">let</span> a=e.<span class="hljs-property">length</span>;<span class="hljs-keyword">if</span>(<span class="hljs-title class_">Lt</span>(t))<span class="hljs-keyword">return</span> at;<span class="hljs-keyword">const</span> i=t.<span class="hljs-property">state</span>,n=i.<span class="hljs-property">wrap</span>;<span class="hljs-keyword">if</span>(<span class="hljs-number">2</span>===n||(<span class="hljs-number">1</span>===n&amp;&amp;i.<span class="hljs-property">status</span>!==wt)||i.<span class="hljs-property">lookahead</span>)<span class="hljs-keyword">return</span> at;<span class="hljs-keyword">if</span>((<span class="hljs-number">1</span>===n&amp;&amp;(t.<span class="hljs-property">adler</span>=<span class="hljs-title function_">C</span>(t.<span class="hljs-property">adler</span>,e,a,<span class="hljs-number">0</span>)),(i.<span class="hljs-property">wrap</span>=<span class="hljs-number">0</span>),a&gt;=i.<span class="hljs-property">w_size</span>))&#123;<span class="hljs-number">0</span>===n&amp;&amp;(<span class="hljs-title function_">kt</span>(i.<span class="hljs-property">head</span>),(i.<span class="hljs-property">strstart</span>=<span class="hljs-number">0</span>),(i.<span class="hljs-property">block_start</span>=<span class="hljs-number">0</span>),(i.<span class="hljs-property">insert</span>=<span class="hljs-number">0</span>));<span class="hljs-keyword">let</span> t=<span class="hljs-keyword">new</span> <span class="hljs-title class_">Uint8Array</span>(i.<span class="hljs-property">w_size</span>);t.<span class="hljs-title function_">set</span>(e.<span class="hljs-title function_">subarray</span>(a-i.<span class="hljs-property">w_size</span>,a),<span class="hljs-number">0</span>),(e=t),(a=i.<span class="hljs-property">w_size</span>)&#125;<span class="hljs-keyword">const</span> s=t.<span class="hljs-property">avail_in</span>,r=t.<span class="hljs-property">next_in</span>,o=t.<span class="hljs-property">input</span>;<span class="hljs-keyword">for</span>(t.<span class="hljs-property">avail_in</span>=a,t.<span class="hljs-property">next_in</span>=<span class="hljs-number">0</span>,t.<span class="hljs-property">input</span>=e,<span class="hljs-title class_">Ut</span>(i);i.<span class="hljs-property">lookahead</span>&gt;=<span class="hljs-number">3</span>;)&#123;<span class="hljs-keyword">let</span> t=i.<span class="hljs-property">strstart</span>,e=i.<span class="hljs-property">lookahead</span>-<span class="hljs-number">2</span>;<span class="hljs-keyword">do</span>&#123;(i.<span class="hljs-property">ins_h</span>=<span class="hljs-title function_">yt</span>(i,i.<span class="hljs-property">ins_h</span>,i.<span class="hljs-property">window</span>[t+<span class="hljs-number">3</span>-<span class="hljs-number">1</span>])),(i.<span class="hljs-property">prev</span>[t&amp;i.<span class="hljs-property">w_mask</span>]=i.<span class="hljs-property">head</span>[i.<span class="hljs-property">ins_h</span>]),(i.<span class="hljs-property">head</span>[i.<span class="hljs-property">ins_h</span>]=t),t++&#125;<span class="hljs-keyword">while</span>(--e);(i.<span class="hljs-property">strstart</span>=t),(i.<span class="hljs-property">lookahead</span>=<span class="hljs-number">2</span>),<span class="hljs-title class_">Ut</span>(i)&#125;<span class="hljs-keyword">return</span>((i.<span class="hljs-property">strstart</span>+=i.<span class="hljs-property">lookahead</span>),(i.<span class="hljs-property">block_start</span>=i.<span class="hljs-property">strstart</span>),(i.<span class="hljs-property">insert</span>=i.<span class="hljs-property">lookahead</span>),(i.<span class="hljs-property">lookahead</span>=<span class="hljs-number">0</span>),(i.<span class="hljs-property">match_length</span>=i.<span class="hljs-property">prev_length</span>=<span class="hljs-number">2</span>),(i.<span class="hljs-property">match_available</span>=<span class="hljs-number">0</span>),(t.<span class="hljs-property">next_in</span>=r),(t.<span class="hljs-property">input</span>=o),(t.<span class="hljs-property">avail_in</span>=s),(i.<span class="hljs-property">wrap</span>=n),tt)&#125;,<span class="hljs-attr">deflateInfo</span>:<span class="hljs-string">&#x27;pako deflate (from Nodeca project)&#x27;</span>&#125;;<span class="hljs-keyword">const</span> <span class="hljs-title function_">Ht</span>=(<span class="hljs-params">t,e</span>)=&gt;<span class="hljs-title class_">Object</span>.<span class="hljs-property"><span class="hljs-keyword">prototype</span></span>.<span class="hljs-property">hasOwnProperty</span>.<span class="hljs-title function_">call</span>(t,e);<span class="hljs-keyword">var</span> jt=<span class="hljs-keyword">function</span>(<span class="hljs-params">t</span>)&#123;<span class="hljs-keyword">const</span> e=<span class="hljs-title class_">Array</span>.<span class="hljs-property"><span class="hljs-keyword">prototype</span></span>.<span class="hljs-property">slice</span>.<span class="hljs-title function_">call</span>(<span class="hljs-variable language_">arguments</span>,<span class="hljs-number">1</span>);<span class="hljs-keyword">for</span>(;e.<span class="hljs-property">length</span>;)&#123;<span class="hljs-keyword">const</span> a=e.<span class="hljs-title function_">shift</span>();<span class="hljs-keyword">if</span>(a)&#123;<span class="hljs-keyword">if</span>(<span class="hljs-string">&#x27;object&#x27;</span>!=<span class="hljs-keyword">typeof</span> a)<span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">TypeError</span>(a+<span class="hljs-string">&#x27;must be non-object&#x27;</span>);<span class="hljs-keyword">for</span>(<span class="hljs-keyword">const</span> e <span class="hljs-keyword">in</span> a)<span class="hljs-title class_">Ht</span>(a,e)&amp;&amp;(t[e]=a[e])&#125;&#125;<span class="hljs-keyword">return</span> t&#125;,<span class="hljs-title class_">Kt</span>=<span class="hljs-function">(<span class="hljs-params">t</span>)=&gt;</span>&#123;<span class="hljs-keyword">let</span> e=<span class="hljs-number">0</span>;<span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> a=<span class="hljs-number">0</span>,i=t.<span class="hljs-property">length</span>;a&lt;i;a++)e+=t[a].<span class="hljs-property">length</span>;<span class="hljs-keyword">const</span> a=<span class="hljs-keyword">new</span> <span class="hljs-title class_">Uint8Array</span>(e);<span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> e=<span class="hljs-number">0</span>,i=<span class="hljs-number">0</span>,n=t.<span class="hljs-property">length</span>;e&lt;n;e++)&#123;<span class="hljs-keyword">let</span> n=t[e];a.<span class="hljs-title function_">set</span>(n,i),(i+=n.<span class="hljs-property">length</span>)&#125;<span class="hljs-keyword">return</span> a&#125;;<span class="hljs-keyword">let</span> <span class="hljs-title class_">Pt</span>=!<span class="hljs-number">0</span>;<span class="hljs-keyword">try</span>&#123;<span class="hljs-title class_">String</span>.<span class="hljs-property">fromCharCode</span>.<span class="hljs-title function_">apply</span>(<span class="hljs-literal">null</span>,<span class="hljs-keyword">new</span> <span class="hljs-title class_">Uint8Array</span>(<span class="hljs-number">1</span>))&#125;<span class="hljs-keyword">catch</span>(t)&#123;<span class="hljs-title class_">Pt</span>=!<span class="hljs-number">1</span>&#125;<span class="hljs-keyword">const</span> <span class="hljs-title class_">Yt</span>=<span class="hljs-keyword">new</span> <span class="hljs-title class_">Uint8Array</span>(<span class="hljs-number">256</span>);<span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> t=<span class="hljs-number">0</span>;t&lt;<span class="hljs-number">256</span>;t++)<span class="hljs-title class_">Yt</span>[t]=t&gt;=<span class="hljs-number">252</span>?<span class="hljs-number">6</span>:t&gt;=<span class="hljs-number">248</span>?<span class="hljs-number">5</span>:t&gt;=<span class="hljs-number">240</span>?<span class="hljs-number">4</span>:t&gt;=<span class="hljs-number">224</span>?<span class="hljs-number">3</span>:t&gt;=<span class="hljs-number">192</span>?<span class="hljs-number">2</span>:<span class="hljs-number">1</span>;<span class="hljs-title class_">Yt</span>[<span class="hljs-number">254</span>]=<span class="hljs-title class_">Yt</span>[<span class="hljs-number">254</span>]=<span class="hljs-number">1</span>;<span class="hljs-keyword">var</span> <span class="hljs-title function_">Gt</span>=(<span class="hljs-params">t</span>)=&gt;&#123;<span class="hljs-keyword">if</span>(<span class="hljs-string">&#x27;function&#x27;</span>==<span class="hljs-keyword">typeof</span> <span class="hljs-title class_">TextEncoder</span>&amp;&amp;<span class="hljs-title class_">TextEncoder</span>.<span class="hljs-property"><span class="hljs-keyword">prototype</span></span>.<span class="hljs-property">encode</span>)<span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">TextEncoder</span>().<span class="hljs-title function_">encode</span>(t);<span class="hljs-keyword">let</span> e,a,i,n,s,r=t.<span class="hljs-property">length</span>,o=<span class="hljs-number">0</span>;<span class="hljs-keyword">for</span>(n=<span class="hljs-number">0</span>;n&lt;r;n++)(a=t.<span class="hljs-title function_">charCodeAt</span>(n)),<span class="hljs-number">55296</span>==(<span class="hljs-number">64512</span>&amp;a)&amp;&amp;n+<span class="hljs-number">1</span>&lt;r&amp;&amp;((i=t.<span class="hljs-title function_">charCodeAt</span>(n+<span class="hljs-number">1</span>)),<span class="hljs-number">56320</span>==(<span class="hljs-number">64512</span>&amp;i)&amp;&amp;((a=<span class="hljs-number">65536</span>+((a-<span class="hljs-number">55296</span>)&lt;&lt;<span class="hljs-number">10</span>)+(i-<span class="hljs-number">56320</span>)),n++)),(o+=a&lt;<span class="hljs-number">128</span>?<span class="hljs-number">1</span>:a&lt;<span class="hljs-number">2048</span>?<span class="hljs-number">2</span>:a&lt;<span class="hljs-number">65536</span>?<span class="hljs-number">3</span>:<span class="hljs-number">4</span>);<span class="hljs-keyword">for</span>(e=<span class="hljs-keyword">new</span> <span class="hljs-title class_">Uint8Array</span>(o),s=<span class="hljs-number">0</span>,n=<span class="hljs-number">0</span>;s&lt;o;n++)(a=t.<span class="hljs-title function_">charCodeAt</span>(n)),<span class="hljs-number">55296</span>==(<span class="hljs-number">64512</span>&amp;a)&amp;&amp;n+<span class="hljs-number">1</span>&lt;r&amp;&amp;((i=t.<span class="hljs-title function_">charCodeAt</span>(n+<span class="hljs-number">1</span>)),<span class="hljs-number">56320</span>==(<span class="hljs-number">64512</span>&amp;i)&amp;&amp;((a=<span class="hljs-number">65536</span>+((a-<span class="hljs-number">55296</span>)&lt;&lt;<span class="hljs-number">10</span>)+(i-<span class="hljs-number">56320</span>)),n++)),a&lt;<span class="hljs-number">128</span>?(e[s++]=a):a&lt;<span class="hljs-number">2048</span>?((e[s++]=<span class="hljs-number">192</span>|(a&gt;&gt;&gt;<span class="hljs-number">6</span>)),(e[s++]=<span class="hljs-number">128</span>|(<span class="hljs-number">63</span>&amp;a))):a&lt;<span class="hljs-number">65536</span>?((e[s++]=<span class="hljs-number">224</span>|(a&gt;&gt;&gt;<span class="hljs-number">12</span>)),(e[s++]=<span class="hljs-number">128</span>|((a&gt;&gt;&gt;<span class="hljs-number">6</span>)&amp;<span class="hljs-number">63</span>)),(e[s++]=<span class="hljs-number">128</span>|(<span class="hljs-number">63</span>&amp;a))):((e[s++]=<span class="hljs-number">240</span>|(a&gt;&gt;&gt;<span class="hljs-number">18</span>)),(e[s++]=<span class="hljs-number">128</span>|((a&gt;&gt;&gt;<span class="hljs-number">12</span>)&amp;<span class="hljs-number">63</span>)),(e[s++]=<span class="hljs-number">128</span>|((a&gt;&gt;&gt;<span class="hljs-number">6</span>)&amp;<span class="hljs-number">63</span>)),(e[s++]=<span class="hljs-number">128</span>|(<span class="hljs-number">63</span>&amp;a)));<span class="hljs-keyword">return</span> e&#125;,<span class="hljs-title class_">Xt</span>=<span class="hljs-function">(<span class="hljs-params">t,e</span>)=&gt;</span>&#123;<span class="hljs-keyword">const</span> a=e||t.<span class="hljs-property">length</span>;<span class="hljs-keyword">if</span>(<span class="hljs-string">&#x27;function&#x27;</span>==<span class="hljs-keyword">typeof</span> <span class="hljs-title class_">TextDecoder</span>&amp;&amp;<span class="hljs-title class_">TextDecoder</span>.<span class="hljs-property"><span class="hljs-keyword">prototype</span></span>.<span class="hljs-property">decode</span>)<span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">TextDecoder</span>().<span class="hljs-title function_">decode</span>(t.<span class="hljs-title function_">subarray</span>(<span class="hljs-number">0</span>,e));<span class="hljs-keyword">let</span> i,n;<span class="hljs-keyword">const</span> s=<span class="hljs-keyword">new</span> <span class="hljs-title class_">Array</span>(<span class="hljs-number">2</span>*a);<span class="hljs-keyword">for</span>(n=<span class="hljs-number">0</span>,i=<span class="hljs-number">0</span>;i&lt;a;)&#123;<span class="hljs-keyword">let</span> e=t[i++];<span class="hljs-keyword">if</span>(e&lt;<span class="hljs-number">128</span>)&#123;s[n++]=e;<span class="hljs-keyword">continue</span>&#125;<span class="hljs-keyword">let</span> r=<span class="hljs-title class_">Yt</span>[e];<span class="hljs-keyword">if</span>(r&gt;<span class="hljs-number">4</span>)(s[n++]=<span class="hljs-number">65533</span>),(i+=r-<span class="hljs-number">1</span>);<span class="hljs-keyword">else</span>&#123;<span class="hljs-keyword">for</span>(e&amp;=<span class="hljs-number">2</span>===r?<span class="hljs-number">31</span>:<span class="hljs-number">3</span>===r?<span class="hljs-number">15</span>:<span class="hljs-number">7</span>;r&gt;<span class="hljs-number">1</span>&amp;&amp;i&lt;a;)(e=(e&lt;&lt;<span class="hljs-number">6</span>)|(<span class="hljs-number">63</span>&amp;t[i++])),r--;r&gt;<span class="hljs-number">1</span>?(s[n++]=<span class="hljs-number">65533</span>):e&lt;<span class="hljs-number">65536</span>?(s[n++]=e):((e-=<span class="hljs-number">65536</span>),(s[n++]=<span class="hljs-number">55296</span>|((e&gt;&gt;<span class="hljs-number">10</span>)&amp;<span class="hljs-number">1023</span>)),(s[n++]=<span class="hljs-number">56320</span>|(<span class="hljs-number">1023</span>&amp;e)))&#125;&#125;<span class="hljs-keyword">return</span>(<span class="hljs-function">(<span class="hljs-params">t,e</span>)=&gt;</span>&#123;<span class="hljs-keyword">if</span>(e&lt;<span class="hljs-number">65534</span>&amp;&amp;t.<span class="hljs-property">subarray</span>&amp;&amp;<span class="hljs-title class_">Pt</span>)<span class="hljs-keyword">return</span> <span class="hljs-title class_">String</span>.<span class="hljs-property">fromCharCode</span>.<span class="hljs-title function_">apply</span>(<span class="hljs-literal">null</span>,t.<span class="hljs-property">length</span>===e?<span class="hljs-attr">t</span>:t.<span class="hljs-title function_">subarray</span>(<span class="hljs-number">0</span>,e));<span class="hljs-keyword">let</span> a=<span class="hljs-string">&#x27;&#x27;</span>;<span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;e;i++)a+=<span class="hljs-title class_">String</span>.<span class="hljs-title function_">fromCharCode</span>(t[i]);<span class="hljs-keyword">return</span> a&#125;)(s,n)&#125;,<span class="hljs-title class_">Wt</span>=<span class="hljs-function">(<span class="hljs-params">t,e</span>)=&gt;</span>&#123;(e=e||t.<span class="hljs-property">length</span>)&gt;t.<span class="hljs-property">length</span>&amp;&amp;(e=t.<span class="hljs-property">length</span>);<span class="hljs-keyword">let</span> a=e-<span class="hljs-number">1</span>;<span class="hljs-keyword">for</span>(;a&gt;=<span class="hljs-number">0</span>&amp;&amp;<span class="hljs-number">128</span>==(<span class="hljs-number">192</span>&amp;t[a]);)a--;<span class="hljs-keyword">return</span> a&lt;<span class="hljs-number">0</span>||<span class="hljs-number">0</span>===a?<span class="hljs-attr">e</span>:a+<span class="hljs-title class_">Yt</span>[t[a]]&gt;e?<span class="hljs-attr">a</span>:e&#125;;<span class="hljs-keyword">var</span> qt=<span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)&#123;(<span class="hljs-variable language_">this</span>.<span class="hljs-property">input</span>=<span class="hljs-literal">null</span>),(<span class="hljs-variable language_">this</span>.<span class="hljs-property">next_in</span>=<span class="hljs-number">0</span>),(<span class="hljs-variable language_">this</span>.<span class="hljs-property">avail_in</span>=<span class="hljs-number">0</span>),(<span class="hljs-variable language_">this</span>.<span class="hljs-property">total_in</span>=<span class="hljs-number">0</span>),(<span class="hljs-variable language_">this</span>.<span class="hljs-property">output</span>=<span class="hljs-literal">null</span>),(<span class="hljs-variable language_">this</span>.<span class="hljs-property">next_out</span>=<span class="hljs-number">0</span>),(<span class="hljs-variable language_">this</span>.<span class="hljs-property">avail_out</span>=<span class="hljs-number">0</span>),(<span class="hljs-variable language_">this</span>.<span class="hljs-property">total_out</span>=<span class="hljs-number">0</span>),(<span class="hljs-variable language_">this</span>.<span class="hljs-property">msg</span>=<span class="hljs-string">&#x27;&#x27;</span>),(<span class="hljs-variable language_">this</span>.<span class="hljs-property">state</span>=<span class="hljs-literal">null</span>),(<span class="hljs-variable language_">this</span>.<span class="hljs-property">data_type</span>=<span class="hljs-number">2</span>),(<span class="hljs-variable language_">this</span>.<span class="hljs-property">adler</span>=<span class="hljs-number">0</span>)&#125;;<span class="hljs-keyword">const</span> <span class="hljs-title class_">Jt</span>=<span class="hljs-title class_">Object</span>.<span class="hljs-property"><span class="hljs-keyword">prototype</span></span>.<span class="hljs-property">toString</span>,&#123;<span class="hljs-attr">Z_NO_FLUSH</span>:<span class="hljs-title class_">Qt</span>,<span class="hljs-attr">Z_SYNC_FLUSH</span>:<span class="hljs-title class_">Vt</span>,<span class="hljs-attr">Z_FULL_FLUSH</span>:$t,<span class="hljs-attr">Z_FINISH</span>:te,<span class="hljs-attr">Z_OK</span>:ee,<span class="hljs-attr">Z_STREAM_END</span>:ae,<span class="hljs-attr">Z_DEFAULT_COMPRESSION</span>:ie,<span class="hljs-attr">Z_DEFAULT_STRATEGY</span>:ne,<span class="hljs-attr">Z_DEFLATED</span>:se&#125;=K;<span class="hljs-keyword">function</span> <span class="hljs-title function_">re</span>(<span class="hljs-params">t</span>)&#123;<span class="hljs-variable language_">this</span>.<span class="hljs-property">options</span>=<span class="hljs-title function_">jt</span>(&#123;<span class="hljs-attr">level</span>:ie,<span class="hljs-attr">method</span>:se,<span class="hljs-attr">chunkSize</span>:<span class="hljs-number">16384</span>,<span class="hljs-attr">windowBits</span>:<span class="hljs-number">15</span>,<span class="hljs-attr">memLevel</span>:<span class="hljs-number">8</span>,<span class="hljs-attr">strategy</span>:ne&#125;,t||&#123;&#125;);<span class="hljs-keyword">let</span> e=<span class="hljs-variable language_">this</span>.<span class="hljs-property">options</span>;e.<span class="hljs-property">raw</span>&amp;&amp;e.<span class="hljs-property">windowBits</span>&gt;<span class="hljs-number">0</span>?(e.<span class="hljs-property">windowBits</span>=-e.<span class="hljs-property">windowBits</span>):e.<span class="hljs-property">gzip</span>&amp;&amp;e.<span class="hljs-property">windowBits</span>&gt;<span class="hljs-number">0</span>&amp;&amp;e.<span class="hljs-property">windowBits</span>&lt;<span class="hljs-number">16</span>&amp;&amp;(e.<span class="hljs-property">windowBits</span>+=<span class="hljs-number">16</span>),(<span class="hljs-variable language_">this</span>.<span class="hljs-property">err</span>=<span class="hljs-number">0</span>),(<span class="hljs-variable language_">this</span>.<span class="hljs-property">msg</span>=<span class="hljs-string">&#x27;&#x27;</span>),(<span class="hljs-variable language_">this</span>.<span class="hljs-property">ended</span>=!<span class="hljs-number">1</span>),(<span class="hljs-variable language_">this</span>.<span class="hljs-property">chunks</span>=[]),(<span class="hljs-variable language_">this</span>.<span class="hljs-property">strm</span>=<span class="hljs-keyword">new</span> <span class="hljs-title function_">qt</span>()),(<span class="hljs-variable language_">this</span>.<span class="hljs-property">strm</span>.<span class="hljs-property">avail_out</span>=<span class="hljs-number">0</span>);<span class="hljs-keyword">let</span> a=<span class="hljs-title class_">Mt</span>.<span class="hljs-title function_">deflateInit2</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">strm</span>,e.<span class="hljs-property">level</span>,e.<span class="hljs-property">method</span>,e.<span class="hljs-property">windowBits</span>,e.<span class="hljs-property">memLevel</span>,e.<span class="hljs-property">strategy</span>);<span class="hljs-keyword">if</span>(a!==ee)<span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Error</span>(j[a]);<span class="hljs-keyword">if</span>((e.<span class="hljs-property">header</span>&amp;&amp;<span class="hljs-title class_">Mt</span>.<span class="hljs-title function_">deflateSetHeader</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">strm</span>,e.<span class="hljs-property">header</span>),e.<span class="hljs-property">dictionary</span>))&#123;<span class="hljs-keyword">let</span> t;<span class="hljs-keyword">if</span>(((t=<span class="hljs-string">&#x27;string&#x27;</span>==<span class="hljs-keyword">typeof</span> e.<span class="hljs-property">dictionary</span>?<span class="hljs-title class_">Gt</span>(e.<span class="hljs-property">dictionary</span>):<span class="hljs-string">&#x27;[object ArrayBuffer]&#x27;</span>===<span class="hljs-title class_">Jt</span>.<span class="hljs-title function_">call</span>(e.<span class="hljs-property">dictionary</span>)?<span class="hljs-keyword">new</span> <span class="hljs-title class_">Uint8Array</span>(e.<span class="hljs-property">dictionary</span>):e.<span class="hljs-property">dictionary</span>),(a=<span class="hljs-title class_">Mt</span>.<span class="hljs-title function_">deflateSetDictionary</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">strm</span>,t)),a!==ee))<span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Error</span>(j[a]);<span class="hljs-variable language_">this</span>.<span class="hljs-property">_dict_set</span>=!<span class="hljs-number">0</span>&#125;&#125;<span class="hljs-keyword">function</span> <span class="hljs-title function_">oe</span>(<span class="hljs-params">t,e</span>)&#123;<span class="hljs-keyword">const</span> a=<span class="hljs-keyword">new</span> <span class="hljs-title function_">re</span>(e);<span class="hljs-keyword">if</span>((a.<span class="hljs-title function_">push</span>(t,!<span class="hljs-number">0</span>),a.<span class="hljs-property">err</span>))<span class="hljs-keyword">throw</span> a.<span class="hljs-property">msg</span>||j[a.<span class="hljs-property">err</span>];<span class="hljs-keyword">return</span> a.<span class="hljs-property">result</span>&#125;(re.<span class="hljs-property"><span class="hljs-keyword">prototype</span></span>.<span class="hljs-property">push</span>=<span class="hljs-keyword">function</span>(<span class="hljs-params">t,e</span>)&#123;<span class="hljs-keyword">const</span> a=<span class="hljs-variable language_">this</span>.<span class="hljs-property">strm</span>,i=<span class="hljs-variable language_">this</span>.<span class="hljs-property">options</span>.<span class="hljs-property">chunkSize</span>;<span class="hljs-keyword">let</span> n,s;<span class="hljs-keyword">if</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">ended</span>)<span class="hljs-keyword">return</span>!<span class="hljs-number">1</span>;<span class="hljs-keyword">for</span>(s=e===~~e?<span class="hljs-attr">e</span>:!<span class="hljs-number">0</span>===e?<span class="hljs-attr">te</span>:<span class="hljs-title class_">Qt</span>,<span class="hljs-string">&#x27;string&#x27;</span>==<span class="hljs-keyword">typeof</span> t?(a.<span class="hljs-property">input</span>=<span class="hljs-title class_">Gt</span>(t)):<span class="hljs-string">&#x27;[object ArrayBuffer]&#x27;</span>===<span class="hljs-title class_">Jt</span>.<span class="hljs-title function_">call</span>(t)?(a.<span class="hljs-property">input</span>=<span class="hljs-keyword">new</span> <span class="hljs-title class_">Uint8Array</span>(t)):(a.<span class="hljs-property">input</span>=t),a.<span class="hljs-property">next_in</span>=<span class="hljs-number">0</span>,a.<span class="hljs-property">avail_in</span>=a.<span class="hljs-property">input</span>.<span class="hljs-property">length</span>;)<span class="hljs-keyword">if</span>((<span class="hljs-number">0</span>===a.<span class="hljs-property">avail_out</span>&amp;&amp;((a.<span class="hljs-property">output</span>=<span class="hljs-keyword">new</span> <span class="hljs-title class_">Uint8Array</span>(i)),(a.<span class="hljs-property">next_out</span>=<span class="hljs-number">0</span>),(a.<span class="hljs-property">avail_out</span>=i)),(s===<span class="hljs-title class_">Vt</span>||s===$t)&amp;&amp;a.<span class="hljs-property">avail_out</span>&lt;=<span class="hljs-number">6</span>))<span class="hljs-variable language_">this</span>.<span class="hljs-title function_">onData</span>(a.<span class="hljs-property">output</span>.<span class="hljs-title function_">subarray</span>(<span class="hljs-number">0</span>,a.<span class="hljs-property">next_out</span>)),(a.<span class="hljs-property">avail_out</span>=<span class="hljs-number">0</span>);<span class="hljs-keyword">else</span>&#123;<span class="hljs-keyword">if</span>(((n=<span class="hljs-title class_">Mt</span>.<span class="hljs-title function_">deflate</span>(a,s)),n===ae))<span class="hljs-keyword">return</span>(a.<span class="hljs-property">next_out</span>&gt;<span class="hljs-number">0</span>&amp;&amp;<span class="hljs-variable language_">this</span>.<span class="hljs-title function_">onData</span>(a.<span class="hljs-property">output</span>.<span class="hljs-title function_">subarray</span>(<span class="hljs-number">0</span>,a.<span class="hljs-property">next_out</span>)),(n=<span class="hljs-title class_">Mt</span>.<span class="hljs-title function_">deflateEnd</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">strm</span>)),<span class="hljs-variable language_">this</span>.<span class="hljs-title function_">onEnd</span>(n),(<span class="hljs-variable language_">this</span>.<span class="hljs-property">ended</span>=!<span class="hljs-number">0</span>),n===ee);<span class="hljs-keyword">if</span>(<span class="hljs-number">0</span>!==a.<span class="hljs-property">avail_out</span>)&#123;<span class="hljs-keyword">if</span>(s&gt;<span class="hljs-number">0</span>&amp;&amp;a.<span class="hljs-property">next_out</span>&gt;<span class="hljs-number">0</span>)<span class="hljs-variable language_">this</span>.<span class="hljs-title function_">onData</span>(a.<span class="hljs-property">output</span>.<span class="hljs-title function_">subarray</span>(<span class="hljs-number">0</span>,a.<span class="hljs-property">next_out</span>)),(a.<span class="hljs-property">avail_out</span>=<span class="hljs-number">0</span>);<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(<span class="hljs-number">0</span>===a.<span class="hljs-property">avail_in</span>)<span class="hljs-keyword">break</span>&#125;<span class="hljs-keyword">else</span> <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">onData</span>(a.<span class="hljs-property">output</span>)&#125;<span class="hljs-keyword">return</span>!<span class="hljs-number">0</span>&#125;),(re.<span class="hljs-property"><span class="hljs-keyword">prototype</span></span>.<span class="hljs-property">onData</span>=<span class="hljs-keyword">function</span>(<span class="hljs-params">t</span>)&#123;<span class="hljs-variable language_">this</span>.<span class="hljs-property">chunks</span>.<span class="hljs-title function_">push</span>(t)&#125;),(re.<span class="hljs-property"><span class="hljs-keyword">prototype</span></span>.<span class="hljs-property">onEnd</span>=<span class="hljs-keyword">function</span>(<span class="hljs-params">t</span>)&#123;t===ee&amp;&amp;(<span class="hljs-variable language_">this</span>.<span class="hljs-property">result</span>=<span class="hljs-title class_">Kt</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">chunks</span>)),(<span class="hljs-variable language_">this</span>.<span class="hljs-property">chunks</span>=[]),(<span class="hljs-variable language_">this</span>.<span class="hljs-property">err</span>=t),(<span class="hljs-variable language_">this</span>.<span class="hljs-property">msg</span>=<span class="hljs-variable language_">this</span>.<span class="hljs-property">strm</span>.<span class="hljs-property">msg</span>)&#125;);<span class="hljs-keyword">var</span> le=&#123;<span class="hljs-title class_">Deflate</span>:re,<span class="hljs-attr">deflate</span>:oe,<span class="hljs-attr">deflateRaw</span>:<span class="hljs-keyword">function</span>(<span class="hljs-params">t,e</span>)&#123;<span class="hljs-keyword">return</span>((e=e||&#123;&#125;).<span class="hljs-property">raw</span>=!<span class="hljs-number">0</span>),<span class="hljs-title function_">oe</span>(t,e)&#125;,<span class="hljs-attr">gzip</span>:<span class="hljs-keyword">function</span>(<span class="hljs-params">t,e</span>)&#123;<span class="hljs-keyword">return</span>((e=e||&#123;&#125;).<span class="hljs-property">gzip</span>=!<span class="hljs-number">0</span>),<span class="hljs-title function_">oe</span>(t,e)&#125;,<span class="hljs-attr">constants</span>:K&#125;;<span class="hljs-keyword">const</span> he=<span class="hljs-number">16209</span>;<span class="hljs-keyword">var</span> de=<span class="hljs-keyword">function</span>(<span class="hljs-params">t,e</span>)&#123;<span class="hljs-keyword">let</span> a,i,n,s,r,o,l,h,d,_,f,c,u,w,m,b,g,p,k,v,y,x,z,A;<span class="hljs-keyword">const</span> E=t.<span class="hljs-property">state</span>;(a=t.<span class="hljs-property">next_in</span>),(z=t.<span class="hljs-property">input</span>),(i=a+(t.<span class="hljs-property">avail_in</span>-<span class="hljs-number">5</span>)),(n=t.<span class="hljs-property">next_out</span>),(A=t.<span class="hljs-property">output</span>),(s=n-(e-t.<span class="hljs-property">avail_out</span>)),(r=n+(t.<span class="hljs-property">avail_out</span>-<span class="hljs-number">257</span>)),(o=E.<span class="hljs-property">dmax</span>),(l=E.<span class="hljs-property">wsize</span>),(h=E.<span class="hljs-property">whave</span>),(d=E.<span class="hljs-property">wnext</span>),(_=E.<span class="hljs-property">window</span>),(f=E.<span class="hljs-property">hold</span>),(c=E.<span class="hljs-property">bits</span>),(u=E.<span class="hljs-property">lencode</span>),(w=E.<span class="hljs-property">distcode</span>),(m=(<span class="hljs-number">1</span>&lt;&lt;E.<span class="hljs-property">lenbits</span>)-<span class="hljs-number">1</span>),(b=(<span class="hljs-number">1</span>&lt;&lt;E.<span class="hljs-property">distbits</span>)-<span class="hljs-number">1</span>);<span class="hljs-attr">t</span>:<span class="hljs-keyword">do</span>&#123;c&lt;<span class="hljs-number">15</span>&amp;&amp;((f+=z[a++]&lt;&lt;c),(c+=<span class="hljs-number">8</span>),(f+=z[a++]&lt;&lt;c),(c+=<span class="hljs-number">8</span>)),(g=u[f&amp;m]);<span class="hljs-attr">e</span>:<span class="hljs-keyword">for</span>(;;)&#123;<span class="hljs-keyword">if</span>(((p=g&gt;&gt;&gt;<span class="hljs-number">24</span>),(f&gt;&gt;&gt;=p),(c-=p),(p=(g&gt;&gt;&gt;<span class="hljs-number">16</span>)&amp;<span class="hljs-number">255</span>),<span class="hljs-number">0</span>===p))A[n++]=<span class="hljs-number">65535</span>&amp;g;<span class="hljs-keyword">else</span>&#123;<span class="hljs-keyword">if</span>(!(<span class="hljs-number">16</span>&amp;p))&#123;<span class="hljs-keyword">if</span>(<span class="hljs-number">0</span>==(<span class="hljs-number">64</span>&amp;p))&#123;g=u[(<span class="hljs-number">65535</span>&amp;g)+(f&amp;((<span class="hljs-number">1</span>&lt;&lt;p)-<span class="hljs-number">1</span>))];<span class="hljs-keyword">continue</span> e&#125;<span class="hljs-keyword">if</span>(<span class="hljs-number">32</span>&amp;p)&#123;E.<span class="hljs-property">mode</span>=<span class="hljs-number">16191</span>;<span class="hljs-keyword">break</span> t&#125;(t.<span class="hljs-property">msg</span>=<span class="hljs-string">&#x27;invalid literal/length code&#x27;</span>),(E.<span class="hljs-property">mode</span>=he);<span class="hljs-keyword">break</span> t&#125;(k=<span class="hljs-number">65535</span>&amp;g),(p&amp;=<span class="hljs-number">15</span>),p&amp;&amp;(c&lt;p&amp;&amp;((f+=z[a++]&lt;&lt;c),(c+=<span class="hljs-number">8</span>)),(k+=f&amp;((<span class="hljs-number">1</span>&lt;&lt;p)-<span class="hljs-number">1</span>)),(f&gt;&gt;&gt;=p),(c-=p)),c&lt;<span class="hljs-number">15</span>&amp;&amp;((f+=z[a++]&lt;&lt;c),(c+=<span class="hljs-number">8</span>),(f+=z[a++]&lt;&lt;c),(c+=<span class="hljs-number">8</span>)),(g=w[f&amp;b]);<span class="hljs-attr">a</span>:<span class="hljs-keyword">for</span>(;;)&#123;<span class="hljs-keyword">if</span>(((p=g&gt;&gt;&gt;<span class="hljs-number">24</span>),(f&gt;&gt;&gt;=p),(c-=p),(p=(g&gt;&gt;&gt;<span class="hljs-number">16</span>)&amp;<span class="hljs-number">255</span>),!(<span class="hljs-number">16</span>&amp;p)))&#123;<span class="hljs-keyword">if</span>(<span class="hljs-number">0</span>==(<span class="hljs-number">64</span>&amp;p))&#123;g=w[(<span class="hljs-number">65535</span>&amp;g)+(f&amp;((<span class="hljs-number">1</span>&lt;&lt;p)-<span class="hljs-number">1</span>))];<span class="hljs-keyword">continue</span> a&#125;(t.<span class="hljs-property">msg</span>=<span class="hljs-string">&#x27;invalid distance code&#x27;</span>),(E.<span class="hljs-property">mode</span>=he);<span class="hljs-keyword">break</span> t&#125;<span class="hljs-keyword">if</span>(((v=<span class="hljs-number">65535</span>&amp;g),(p&amp;=<span class="hljs-number">15</span>),c&lt;p&amp;&amp;((f+=z[a++]&lt;&lt;c),(c+=<span class="hljs-number">8</span>),c&lt;p&amp;&amp;((f+=z[a++]&lt;&lt;c),(c+=<span class="hljs-number">8</span>))),(v+=f&amp;((<span class="hljs-number">1</span>&lt;&lt;p)-<span class="hljs-number">1</span>)),v&gt;o))&#123;(t.<span class="hljs-property">msg</span>=<span class="hljs-string">&#x27;invalid distance too far back&#x27;</span>),(E.<span class="hljs-property">mode</span>=he);<span class="hljs-keyword">break</span> t&#125;<span class="hljs-keyword">if</span>(((f&gt;&gt;&gt;=p),(c-=p),(p=n-s),v&gt;p))&#123;<span class="hljs-keyword">if</span>(((p=v-p),p&gt;h&amp;&amp;E.<span class="hljs-property">sane</span>))&#123;(t.<span class="hljs-property">msg</span>=<span class="hljs-string">&#x27;invalid distance too far back&#x27;</span>),(E.<span class="hljs-property">mode</span>=he);<span class="hljs-keyword">break</span> t&#125;<span class="hljs-keyword">if</span>(((y=<span class="hljs-number">0</span>),(x=_),<span class="hljs-number">0</span>===d))&#123;<span class="hljs-keyword">if</span>(((y+=l-p),p&lt;k))&#123;k-=p;<span class="hljs-keyword">do</span>&#123;A[n++]=_[y++]&#125;<span class="hljs-keyword">while</span>(--p);(y=n-v),(x=A)&#125;&#125;<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(d&lt;p)&#123;<span class="hljs-keyword">if</span>(((y+=l+d-p),(p-=d),p&lt;k))&#123;k-=p;<span class="hljs-keyword">do</span>&#123;A[n++]=_[y++]&#125;<span class="hljs-keyword">while</span>(--p);<span class="hljs-keyword">if</span>(((y=<span class="hljs-number">0</span>),d&lt;k))&#123;(p=d),(k-=p);<span class="hljs-keyword">do</span>&#123;A[n++]=_[y++]&#125;<span class="hljs-keyword">while</span>(--p);(y=n-v),(x=A)&#125;&#125;&#125;<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(((y+=d-p),p&lt;k))&#123;k-=p;<span class="hljs-keyword">do</span>&#123;A[n++]=_[y++]&#125;<span class="hljs-keyword">while</span>(--p);(y=n-v),(x=A)&#125;<span class="hljs-keyword">for</span>(;k&gt;<span class="hljs-number">2</span>;)(A[n++]=x[y++]),(A[n++]=x[y++]),(A[n++]=x[y++]),(k-=<span class="hljs-number">3</span>);k&amp;&amp;((A[n++]=x[y++]),k&gt;<span class="hljs-number">1</span>&amp;&amp;(A[n++]=x[y++]))&#125;<span class="hljs-keyword">else</span>&#123;y=n-v;<span class="hljs-keyword">do</span>&#123;(A[n++]=A[y++]),(A[n++]=A[y++]),(A[n++]=A[y++]),(k-=<span class="hljs-number">3</span>)&#125;<span class="hljs-keyword">while</span>(k&gt;<span class="hljs-number">2</span>);k&amp;&amp;((A[n++]=A[y++]),k&gt;<span class="hljs-number">1</span>&amp;&amp;(A[n++]=A[y++]))&#125;<span class="hljs-keyword">break</span>&#125;&#125;<span class="hljs-keyword">break</span>&#125;&#125;<span class="hljs-keyword">while</span>(a&lt;i&amp;&amp;n&lt;r);(k=c&gt;&gt;<span class="hljs-number">3</span>),(a-=k),(c-=k&lt;&lt;<span class="hljs-number">3</span>),(f&amp;=(<span class="hljs-number">1</span>&lt;&lt;c)-<span class="hljs-number">1</span>),(t.<span class="hljs-property">next_in</span>=a),(t.<span class="hljs-property">next_out</span>=n),(t.<span class="hljs-property">avail_in</span>=a&lt;i?i-a+<span class="hljs-number">5</span>:<span class="hljs-number">5</span>-(a-i)),(t.<span class="hljs-property">avail_out</span>=n&lt;r?r-n+<span class="hljs-number">257</span>:<span class="hljs-number">257</span>-(n-r)),(E.<span class="hljs-property">hold</span>=f),(E.<span class="hljs-property">bits</span>=c)&#125;;<span class="hljs-keyword">const</span> _e=<span class="hljs-number">15</span>,fe=<span class="hljs-keyword">new</span> <span class="hljs-title class_">Uint16Array</span>([<span class="hljs-number">3</span>,<span class="hljs-number">4</span>,<span class="hljs-number">5</span>,<span class="hljs-number">6</span>,<span class="hljs-number">7</span>,<span class="hljs-number">8</span>,<span class="hljs-number">9</span>,<span class="hljs-number">10</span>,<span class="hljs-number">11</span>,<span class="hljs-number">13</span>,<span class="hljs-number">15</span>,<span class="hljs-number">17</span>,<span class="hljs-number">19</span>,<span class="hljs-number">23</span>,<span class="hljs-number">27</span>,<span class="hljs-number">31</span>,<span class="hljs-number">35</span>,<span class="hljs-number">43</span>,<span class="hljs-number">51</span>,<span class="hljs-number">59</span>,<span class="hljs-number">67</span>,<span class="hljs-number">83</span>,<span class="hljs-number">99</span>,<span class="hljs-number">115</span>,<span class="hljs-number">131</span>,<span class="hljs-number">163</span>,<span class="hljs-number">195</span>,<span class="hljs-number">227</span>,<span class="hljs-number">258</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>]),ce=<span class="hljs-keyword">new</span> <span class="hljs-title class_">Uint8Array</span>([<span class="hljs-number">16</span>,<span class="hljs-number">16</span>,<span class="hljs-number">16</span>,<span class="hljs-number">16</span>,<span class="hljs-number">16</span>,<span class="hljs-number">16</span>,<span class="hljs-number">16</span>,<span class="hljs-number">16</span>,<span class="hljs-number">17</span>,<span class="hljs-number">17</span>,<span class="hljs-number">17</span>,<span class="hljs-number">17</span>,<span class="hljs-number">18</span>,<span class="hljs-number">18</span>,<span class="hljs-number">18</span>,<span class="hljs-number">18</span>,<span class="hljs-number">19</span>,<span class="hljs-number">19</span>,<span class="hljs-number">19</span>,<span class="hljs-number">19</span>,<span class="hljs-number">20</span>,<span class="hljs-number">20</span>,<span class="hljs-number">20</span>,<span class="hljs-number">20</span>,<span class="hljs-number">21</span>,<span class="hljs-number">21</span>,<span class="hljs-number">21</span>,<span class="hljs-number">21</span>,<span class="hljs-number">16</span>,<span class="hljs-number">72</span>,<span class="hljs-number">78</span>]),ue=<span class="hljs-keyword">new</span> <span class="hljs-title class_">Uint16Array</span>([<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span>,<span class="hljs-number">4</span>,<span class="hljs-number">5</span>,<span class="hljs-number">7</span>,<span class="hljs-number">9</span>,<span class="hljs-number">13</span>,<span class="hljs-number">17</span>,<span class="hljs-number">25</span>,<span class="hljs-number">33</span>,<span class="hljs-number">49</span>,<span class="hljs-number">65</span>,<span class="hljs-number">97</span>,<span class="hljs-number">129</span>,<span class="hljs-number">193</span>,<span class="hljs-number">257</span>,<span class="hljs-number">385</span>,<span class="hljs-number">513</span>,<span class="hljs-number">769</span>,<span class="hljs-number">1025</span>,<span class="hljs-number">1537</span>,<span class="hljs-number">2049</span>,<span class="hljs-number">3073</span>,<span class="hljs-number">4097</span>,<span class="hljs-number">6145</span>,<span class="hljs-number">8193</span>,<span class="hljs-number">12289</span>,<span class="hljs-number">16385</span>,<span class="hljs-number">24577</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>]),we=<span class="hljs-keyword">new</span> <span class="hljs-title class_">Uint8Array</span>([<span class="hljs-number">16</span>,<span class="hljs-number">16</span>,<span class="hljs-number">16</span>,<span class="hljs-number">16</span>,<span class="hljs-number">17</span>,<span class="hljs-number">17</span>,<span class="hljs-number">18</span>,<span class="hljs-number">18</span>,<span class="hljs-number">19</span>,<span class="hljs-number">19</span>,<span class="hljs-number">20</span>,<span class="hljs-number">20</span>,<span class="hljs-number">21</span>,<span class="hljs-number">21</span>,<span class="hljs-number">22</span>,<span class="hljs-number">22</span>,<span class="hljs-number">23</span>,<span class="hljs-number">23</span>,<span class="hljs-number">24</span>,<span class="hljs-number">24</span>,<span class="hljs-number">25</span>,<span class="hljs-number">25</span>,<span class="hljs-number">26</span>,<span class="hljs-number">26</span>,<span class="hljs-number">27</span>,<span class="hljs-number">27</span>,<span class="hljs-number">28</span>,<span class="hljs-number">28</span>,<span class="hljs-number">29</span>,<span class="hljs-number">29</span>,<span class="hljs-number">64</span>,<span class="hljs-number">64</span>]);<span class="hljs-keyword">var</span> <span class="hljs-title function_">me</span>=(<span class="hljs-params">t,e,a,i,n,s,r,o</span>)=&gt;&#123;<span class="hljs-keyword">const</span> l=o.<span class="hljs-property">bits</span>;<span class="hljs-keyword">let</span> h,d,_,f,c,u,w=<span class="hljs-number">0</span>,m=<span class="hljs-number">0</span>,b=<span class="hljs-number">0</span>,g=<span class="hljs-number">0</span>,p=<span class="hljs-number">0</span>,k=<span class="hljs-number">0</span>,v=<span class="hljs-number">0</span>,y=<span class="hljs-number">0</span>,x=<span class="hljs-number">0</span>,z=<span class="hljs-number">0</span>,A=<span class="hljs-literal">null</span>;<span class="hljs-keyword">const</span> E=<span class="hljs-keyword">new</span> <span class="hljs-title class_">Uint16Array</span>(<span class="hljs-number">16</span>),R=<span class="hljs-keyword">new</span> <span class="hljs-title class_">Uint16Array</span>(<span class="hljs-number">16</span>);<span class="hljs-keyword">let</span> Z,U,S,D=<span class="hljs-literal">null</span>;<span class="hljs-keyword">for</span>(w=<span class="hljs-number">0</span>;w&lt;=_e;w++)E[w]=<span class="hljs-number">0</span>;<span class="hljs-keyword">for</span>(m=<span class="hljs-number">0</span>;m&lt;i;m++)E[e[a+m]]++;<span class="hljs-keyword">for</span>(p=l,g=_e;g&gt;=<span class="hljs-number">1</span>&amp;&amp;<span class="hljs-number">0</span>===E[g];g--);<span class="hljs-keyword">if</span>((p&gt;g&amp;&amp;(p=g),<span class="hljs-number">0</span>===g))<span class="hljs-keyword">return</span>(n[s++]=<span class="hljs-number">20971520</span>),(n[s++]=<span class="hljs-number">20971520</span>),(o.<span class="hljs-property">bits</span>=<span class="hljs-number">1</span>),<span class="hljs-number">0</span>;<span class="hljs-keyword">for</span>(b=<span class="hljs-number">1</span>;b&lt;g&amp;&amp;<span class="hljs-number">0</span>===E[b];b++);<span class="hljs-keyword">for</span>(p&lt;b&amp;&amp;(p=b),y=<span class="hljs-number">1</span>,w=<span class="hljs-number">1</span>;w&lt;=_e;w++)<span class="hljs-keyword">if</span>(((y&lt;&lt;=<span class="hljs-number">1</span>),(y-=E[w]),y&lt;<span class="hljs-number">0</span>))<span class="hljs-keyword">return</span>-<span class="hljs-number">1</span>;<span class="hljs-keyword">if</span>(y&gt;<span class="hljs-number">0</span>&amp;&amp;(<span class="hljs-number">0</span>===t||<span class="hljs-number">1</span>!==g))<span class="hljs-keyword">return</span>-<span class="hljs-number">1</span>;<span class="hljs-keyword">for</span>(R[<span class="hljs-number">1</span>]=<span class="hljs-number">0</span>,w=<span class="hljs-number">1</span>;w&lt;_e;w++)R[w+<span class="hljs-number">1</span>]=R[w]+E[w];<span class="hljs-keyword">for</span>(m=<span class="hljs-number">0</span>;m&lt;i;m++)<span class="hljs-number">0</span>!==e[a+m]&amp;&amp;(r[R[e[a+m]]++]=m);<span class="hljs-keyword">if</span>((<span class="hljs-number">0</span>===t?((A=D=r),(u=<span class="hljs-number">20</span>)):<span class="hljs-number">1</span>===t?((A=fe),(D=ce),(u=<span class="hljs-number">257</span>)):((A=ue),(D=we),(u=<span class="hljs-number">0</span>)),(z=<span class="hljs-number">0</span>),(m=<span class="hljs-number">0</span>),(w=b),(c=s),(k=p),(v=<span class="hljs-number">0</span>),(_=-<span class="hljs-number">1</span>),(x=<span class="hljs-number">1</span>&lt;&lt;p),(f=x-<span class="hljs-number">1</span>),(<span class="hljs-number">1</span>===t&amp;&amp;x&gt;<span class="hljs-number">852</span>)||(<span class="hljs-number">2</span>===t&amp;&amp;x&gt;<span class="hljs-number">592</span>)))<span class="hljs-keyword">return</span> <span class="hljs-number">1</span>;<span class="hljs-keyword">for</span>(;;)&#123;(Z=w-v),r[m]+<span class="hljs-number">1</span>&lt;u?((U=<span class="hljs-number">0</span>),(S=r[m])):r[m]&gt;=u?((U=D[r[m]-u]),(S=A[r[m]-u])):((U=<span class="hljs-number">96</span>),(S=<span class="hljs-number">0</span>)),(h=<span class="hljs-number">1</span>&lt;&lt;(w-v)),(d=<span class="hljs-number">1</span>&lt;&lt;k),(b=d);<span class="hljs-keyword">do</span>&#123;(d-=h),(n[c+(z&gt;&gt;v)+d]=(Z&lt;&lt;<span class="hljs-number">24</span>)|(U&lt;&lt;<span class="hljs-number">16</span>)|S|<span class="hljs-number">0</span>)&#125;<span class="hljs-keyword">while</span>(<span class="hljs-number">0</span>!==d);<span class="hljs-keyword">for</span>(h=<span class="hljs-number">1</span>&lt;&lt;(w-<span class="hljs-number">1</span>);z&amp;h;)h&gt;&gt;=<span class="hljs-number">1</span>;<span class="hljs-keyword">if</span>((<span class="hljs-number">0</span>!==h?((z&amp;=h-<span class="hljs-number">1</span>),(z+=h)):(z=<span class="hljs-number">0</span>),m++,<span class="hljs-number">0</span>==--E[w]))&#123;<span class="hljs-keyword">if</span>(w===g)<span class="hljs-keyword">break</span>;w=e[a+r[m]]&#125;<span class="hljs-keyword">if</span>(w&gt;p&amp;&amp;(z&amp;f)!==_)&#123;<span class="hljs-keyword">for</span>(<span class="hljs-number">0</span>===v&amp;&amp;(v=p),c+=b,k=w-v,y=<span class="hljs-number">1</span>&lt;&lt;k;k+v&lt;g&amp;&amp;((y-=E[k+v]),!(y&lt;=<span class="hljs-number">0</span>));)k++,(y&lt;&lt;=<span class="hljs-number">1</span>);<span class="hljs-keyword">if</span>(((x+=<span class="hljs-number">1</span>&lt;&lt;k),(<span class="hljs-number">1</span>===t&amp;&amp;x&gt;<span class="hljs-number">852</span>)||(<span class="hljs-number">2</span>===t&amp;&amp;x&gt;<span class="hljs-number">592</span>)))<span class="hljs-keyword">return</span> <span class="hljs-number">1</span>;(_=z&amp;f),(n[_]=(p&lt;&lt;<span class="hljs-number">24</span>)|(k&lt;&lt;<span class="hljs-number">16</span>)|(c-s)|<span class="hljs-number">0</span>)&#125;&#125;<span class="hljs-keyword">return</span>(<span class="hljs-number">0</span>!==z&amp;&amp;(n[c+z]=((w-v)&lt;&lt;<span class="hljs-number">24</span>)|(<span class="hljs-number">64</span>&lt;&lt;<span class="hljs-number">16</span>)|<span class="hljs-number">0</span>),(o.<span class="hljs-property">bits</span>=p),<span class="hljs-number">0</span>)&#125;;<span class="hljs-keyword">const</span>&#123;<span class="hljs-attr">Z_FINISH</span>:be,<span class="hljs-attr">Z_BLOCK</span>:ge,<span class="hljs-attr">Z_TREES</span>:pe,<span class="hljs-attr">Z_OK</span>:ke,<span class="hljs-attr">Z_STREAM_END</span>:ve,<span class="hljs-attr">Z_NEED_DICT</span>:ye,<span class="hljs-attr">Z_STREAM_ERROR</span>:xe,<span class="hljs-attr">Z_DATA_ERROR</span>:ze,<span class="hljs-attr">Z_MEM_ERROR</span>:<span class="hljs-title class_">Ae</span>,<span class="hljs-attr">Z_BUF_ERROR</span>:<span class="hljs-title class_">Ee</span>,<span class="hljs-attr">Z_DEFLATED</span>:<span class="hljs-title class_">Re</span>&#125;=K,<span class="hljs-title class_">Ze</span>=<span class="hljs-number">16180</span>,<span class="hljs-title class_">Ue</span>=<span class="hljs-number">16190</span>,<span class="hljs-title class_">Se</span>=<span class="hljs-number">16191</span>,<span class="hljs-title class_">De</span>=<span class="hljs-number">16192</span>,<span class="hljs-title class_">Te</span>=<span class="hljs-number">16194</span>,<span class="hljs-title class_">Oe</span>=<span class="hljs-number">16199</span>,<span class="hljs-title class_">Ie</span>=<span class="hljs-number">16200</span>,<span class="hljs-title class_">Fe</span>=<span class="hljs-number">16206</span>,<span class="hljs-title class_">Le</span>=<span class="hljs-number">16209</span>,<span class="hljs-title class_">Ne</span>=<span class="hljs-function">(<span class="hljs-params">t</span>)=&gt;</span>((t&gt;&gt;&gt;<span class="hljs-number">24</span>)&amp;<span class="hljs-number">255</span>)+((t&gt;&gt;&gt;<span class="hljs-number">8</span>)&amp;<span class="hljs-number">65280</span>)+((<span class="hljs-number">65280</span>&amp;t)&lt;&lt;<span class="hljs-number">8</span>)+((<span class="hljs-number">255</span>&amp;t)&lt;&lt;<span class="hljs-number">24</span>);<span class="hljs-keyword">function</span> <span class="hljs-title function_">Be</span>(<span class="hljs-params"></span>)&#123;(<span class="hljs-variable language_">this</span>.<span class="hljs-property">strm</span>=<span class="hljs-literal">null</span>),(<span class="hljs-variable language_">this</span>.<span class="hljs-property">mode</span>=<span class="hljs-number">0</span>),(<span class="hljs-variable language_">this</span>.<span class="hljs-property">last</span>=!<span class="hljs-number">1</span>),(<span class="hljs-variable language_">this</span>.<span class="hljs-property">wrap</span>=<span class="hljs-number">0</span>),(<span class="hljs-variable language_">this</span>.<span class="hljs-property">havedict</span>=!<span class="hljs-number">1</span>),(<span class="hljs-variable language_">this</span>.<span class="hljs-property">flags</span>=<span class="hljs-number">0</span>),(<span class="hljs-variable language_">this</span>.<span class="hljs-property">dmax</span>=<span class="hljs-number">0</span>),(<span class="hljs-variable language_">this</span>.<span class="hljs-property">check</span>=<span class="hljs-number">0</span>),(<span class="hljs-variable language_">this</span>.<span class="hljs-property">total</span>=<span class="hljs-number">0</span>),(<span class="hljs-variable language_">this</span>.<span class="hljs-property">head</span>=<span class="hljs-literal">null</span>),(<span class="hljs-variable language_">this</span>.<span class="hljs-property">wbits</span>=<span class="hljs-number">0</span>),(<span class="hljs-variable language_">this</span>.<span class="hljs-property">wsize</span>=<span class="hljs-number">0</span>),(<span class="hljs-variable language_">this</span>.<span class="hljs-property">whave</span>=<span class="hljs-number">0</span>),(<span class="hljs-variable language_">this</span>.<span class="hljs-property">wnext</span>=<span class="hljs-number">0</span>),(<span class="hljs-variable language_">this</span>.<span class="hljs-property">window</span>=<span class="hljs-literal">null</span>),(<span class="hljs-variable language_">this</span>.<span class="hljs-property">hold</span>=<span class="hljs-number">0</span>),(<span class="hljs-variable language_">this</span>.<span class="hljs-property">bits</span>=<span class="hljs-number">0</span>),(<span class="hljs-variable language_">this</span>.<span class="hljs-property">length</span>=<span class="hljs-number">0</span>),(<span class="hljs-variable language_">this</span>.<span class="hljs-property">offset</span>=<span class="hljs-number">0</span>),(<span class="hljs-variable language_">this</span>.<span class="hljs-property">extra</span>=<span class="hljs-number">0</span>),(<span class="hljs-variable language_">this</span>.<span class="hljs-property">lencode</span>=<span class="hljs-literal">null</span>),(<span class="hljs-variable language_">this</span>.<span class="hljs-property">distcode</span>=<span class="hljs-literal">null</span>),(<span class="hljs-variable language_">this</span>.<span class="hljs-property">lenbits</span>=<span class="hljs-number">0</span>),(<span class="hljs-variable language_">this</span>.<span class="hljs-property">distbits</span>=<span class="hljs-number">0</span>),(<span class="hljs-variable language_">this</span>.<span class="hljs-property">ncode</span>=<span class="hljs-number">0</span>),(<span class="hljs-variable language_">this</span>.<span class="hljs-property">nlen</span>=<span class="hljs-number">0</span>),(<span class="hljs-variable language_">this</span>.<span class="hljs-property">ndist</span>=<span class="hljs-number">0</span>),(<span class="hljs-variable language_">this</span>.<span class="hljs-property">have</span>=<span class="hljs-number">0</span>),(<span class="hljs-variable language_">this</span>.<span class="hljs-property">next</span>=<span class="hljs-literal">null</span>),(<span class="hljs-variable language_">this</span>.<span class="hljs-property">lens</span>=<span class="hljs-keyword">new</span> <span class="hljs-title class_">Uint16Array</span>(<span class="hljs-number">320</span>)),(<span class="hljs-variable language_">this</span>.<span class="hljs-property">work</span>=<span class="hljs-keyword">new</span> <span class="hljs-title class_">Uint16Array</span>(<span class="hljs-number">288</span>)),(<span class="hljs-variable language_">this</span>.<span class="hljs-property">lendyn</span>=<span class="hljs-literal">null</span>),(<span class="hljs-variable language_">this</span>.<span class="hljs-property">distdyn</span>=<span class="hljs-literal">null</span>),(<span class="hljs-variable language_">this</span>.<span class="hljs-property">sane</span>=<span class="hljs-number">0</span>),(<span class="hljs-variable language_">this</span>.<span class="hljs-property">back</span>=<span class="hljs-number">0</span>),(<span class="hljs-variable language_">this</span>.<span class="hljs-property">was</span>=<span class="hljs-number">0</span>)&#125;<span class="hljs-keyword">const</span> <span class="hljs-title function_">Ce</span>=(<span class="hljs-params">t</span>)=&gt;&#123;<span class="hljs-keyword">if</span>(!t)<span class="hljs-keyword">return</span> <span class="hljs-number">1</span>;<span class="hljs-keyword">const</span> e=t.<span class="hljs-property">state</span>;<span class="hljs-keyword">return</span>!e||e.<span class="hljs-property">strm</span>!==t||e.<span class="hljs-property">mode</span>&lt;<span class="hljs-title class_">Ze</span>||e.<span class="hljs-property">mode</span>&gt;<span class="hljs-number">16211</span>?<span class="hljs-number">1</span>:<span class="hljs-number">0</span>&#125;,<span class="hljs-title class_">Me</span>=<span class="hljs-function">(<span class="hljs-params">t</span>)=&gt;</span>&#123;<span class="hljs-keyword">if</span>(<span class="hljs-title class_">Ce</span>(t))<span class="hljs-keyword">return</span> xe;<span class="hljs-keyword">const</span> e=t.<span class="hljs-property">state</span>;<span class="hljs-keyword">return</span>((t.<span class="hljs-property">total_in</span>=t.<span class="hljs-property">total_out</span>=e.<span class="hljs-property">total</span>=<span class="hljs-number">0</span>),(t.<span class="hljs-property">msg</span>=<span class="hljs-string">&#x27;&#x27;</span>),e.<span class="hljs-property">wrap</span>&amp;&amp;(t.<span class="hljs-property">adler</span>=<span class="hljs-number">1</span>&amp;e.<span class="hljs-property">wrap</span>),(e.<span class="hljs-property">mode</span>=<span class="hljs-title class_">Ze</span>),(e.<span class="hljs-property">last</span>=<span class="hljs-number">0</span>),(e.<span class="hljs-property">havedict</span>=<span class="hljs-number">0</span>),(e.<span class="hljs-property">flags</span>=-<span class="hljs-number">1</span>),(e.<span class="hljs-property">dmax</span>=<span class="hljs-number">32768</span>),(e.<span class="hljs-property">head</span>=<span class="hljs-literal">null</span>),(e.<span class="hljs-property">hold</span>=<span class="hljs-number">0</span>),(e.<span class="hljs-property">bits</span>=<span class="hljs-number">0</span>),(e.<span class="hljs-property">lencode</span>=e.<span class="hljs-property">lendyn</span>=<span class="hljs-keyword">new</span> <span class="hljs-title class_">Int32Array</span>(<span class="hljs-number">852</span>)),(e.<span class="hljs-property">distcode</span>=e.<span class="hljs-property">distdyn</span>=<span class="hljs-keyword">new</span> <span class="hljs-title class_">Int32Array</span>(<span class="hljs-number">592</span>)),(e.<span class="hljs-property">sane</span>=<span class="hljs-number">1</span>),(e.<span class="hljs-property">back</span>=-<span class="hljs-number">1</span>),ke)&#125;,<span class="hljs-title class_">He</span>=<span class="hljs-function">(<span class="hljs-params">t</span>)=&gt;</span>&#123;<span class="hljs-keyword">if</span>(<span class="hljs-title class_">Ce</span>(t))<span class="hljs-keyword">return</span> xe;<span class="hljs-keyword">const</span> e=t.<span class="hljs-property">state</span>;<span class="hljs-keyword">return</span>(e.<span class="hljs-property">wsize</span>=<span class="hljs-number">0</span>),(e.<span class="hljs-property">whave</span>=<span class="hljs-number">0</span>),(e.<span class="hljs-property">wnext</span>=<span class="hljs-number">0</span>),<span class="hljs-title class_">Me</span>(t)&#125;,je=<span class="hljs-function">(<span class="hljs-params">t,e</span>)=&gt;</span>&#123;<span class="hljs-keyword">let</span> a;<span class="hljs-keyword">if</span>(<span class="hljs-title class_">Ce</span>(t))<span class="hljs-keyword">return</span> xe;<span class="hljs-keyword">const</span> i=t.<span class="hljs-property">state</span>;<span class="hljs-keyword">return</span>(e&lt;<span class="hljs-number">0</span>?((a=<span class="hljs-number">0</span>),(e=-e)):((a=<span class="hljs-number">5</span>+(e&gt;&gt;<span class="hljs-number">4</span>)),e&lt;<span class="hljs-number">48</span>&amp;&amp;(e&amp;=<span class="hljs-number">15</span>)),e&amp;&amp;(e&lt;<span class="hljs-number">8</span>||e&gt;<span class="hljs-number">15</span>)?<span class="hljs-attr">xe</span>:(<span class="hljs-literal">null</span>!==i.<span class="hljs-property">window</span>&amp;&amp;i.<span class="hljs-property">wbits</span>!==e&amp;&amp;(i.<span class="hljs-property">window</span>=<span class="hljs-literal">null</span>),(i.<span class="hljs-property">wrap</span>=a),(i.<span class="hljs-property">wbits</span>=e),<span class="hljs-title class_">He</span>(t)))&#125;,<span class="hljs-title class_">Ke</span>=<span class="hljs-function">(<span class="hljs-params">t,e</span>)=&gt;</span>&#123;<span class="hljs-keyword">if</span>(!t)<span class="hljs-keyword">return</span> xe;<span class="hljs-keyword">const</span> a=<span class="hljs-keyword">new</span> <span class="hljs-title class_">Be</span>();(t.<span class="hljs-property">state</span>=a),(a.<span class="hljs-property">strm</span>=t),(a.<span class="hljs-property">window</span>=<span class="hljs-literal">null</span>),(a.<span class="hljs-property">mode</span>=<span class="hljs-title class_">Ze</span>);<span class="hljs-keyword">const</span> i=<span class="hljs-title function_">je</span>(t,e);<span class="hljs-keyword">return</span> i!==ke&amp;&amp;(t.<span class="hljs-property">state</span>=<span class="hljs-literal">null</span>),i&#125;;<span class="hljs-keyword">let</span> <span class="hljs-title class_">Pe</span>,<span class="hljs-title class_">Ye</span>,<span class="hljs-title class_">Ge</span>=!<span class="hljs-number">0</span>;<span class="hljs-keyword">const</span> <span class="hljs-title function_">Xe</span>=(<span class="hljs-params">t</span>)=&gt;&#123;<span class="hljs-keyword">if</span>(<span class="hljs-title class_">Ge</span>)&#123;(<span class="hljs-title class_">Pe</span>=<span class="hljs-keyword">new</span> <span class="hljs-title class_">Int32Array</span>(<span class="hljs-number">512</span>)),(<span class="hljs-title class_">Ye</span>=<span class="hljs-keyword">new</span> <span class="hljs-title class_">Int32Array</span>(<span class="hljs-number">32</span>));<span class="hljs-keyword">let</span> e=<span class="hljs-number">0</span>;<span class="hljs-keyword">for</span>(;e&lt;<span class="hljs-number">144</span>;)t.<span class="hljs-property">lens</span>[e++]=<span class="hljs-number">8</span>;<span class="hljs-keyword">for</span>(;e&lt;<span class="hljs-number">256</span>;)t.<span class="hljs-property">lens</span>[e++]=<span class="hljs-number">9</span>;<span class="hljs-keyword">for</span>(;e&lt;<span class="hljs-number">280</span>;)t.<span class="hljs-property">lens</span>[e++]=<span class="hljs-number">7</span>;<span class="hljs-keyword">for</span>(;e&lt;<span class="hljs-number">288</span>;)t.<span class="hljs-property">lens</span>[e++]=<span class="hljs-number">8</span>;<span class="hljs-keyword">for</span>(<span class="hljs-title function_">me</span>(<span class="hljs-number">1</span>,t.<span class="hljs-property">lens</span>,<span class="hljs-number">0</span>,<span class="hljs-number">288</span>,<span class="hljs-title class_">Pe</span>,<span class="hljs-number">0</span>,t.<span class="hljs-property">work</span>,&#123;<span class="hljs-attr">bits</span>:<span class="hljs-number">9</span>&#125;),e=<span class="hljs-number">0</span>;e&lt;<span class="hljs-number">32</span>;)t.<span class="hljs-property">lens</span>[e++]=<span class="hljs-number">5</span>;<span class="hljs-title function_">me</span>(<span class="hljs-number">2</span>,t.<span class="hljs-property">lens</span>,<span class="hljs-number">0</span>,<span class="hljs-number">32</span>,<span class="hljs-title class_">Ye</span>,<span class="hljs-number">0</span>,t.<span class="hljs-property">work</span>,&#123;<span class="hljs-attr">bits</span>:<span class="hljs-number">5</span>&#125;),(<span class="hljs-title class_">Ge</span>=!<span class="hljs-number">1</span>)&#125;(t.<span class="hljs-property">lencode</span>=<span class="hljs-title class_">Pe</span>),(t.<span class="hljs-property">lenbits</span>=<span class="hljs-number">9</span>),(t.<span class="hljs-property">distcode</span>=<span class="hljs-title class_">Ye</span>),(t.<span class="hljs-property">distbits</span>=<span class="hljs-number">5</span>)&#125;,<span class="hljs-title class_">We</span>=<span class="hljs-function">(<span class="hljs-params">t,e,a,i</span>)=&gt;</span>&#123;<span class="hljs-keyword">let</span> n;<span class="hljs-keyword">const</span> s=t.<span class="hljs-property">state</span>;<span class="hljs-keyword">return</span>(<span class="hljs-literal">null</span>===s.<span class="hljs-property">window</span>&amp;&amp;((s.<span class="hljs-property">wsize</span>=<span class="hljs-number">1</span>&lt;&lt;s.<span class="hljs-property">wbits</span>),(s.<span class="hljs-property">wnext</span>=<span class="hljs-number">0</span>),(s.<span class="hljs-property">whave</span>=<span class="hljs-number">0</span>),(s.<span class="hljs-property">window</span>=<span class="hljs-keyword">new</span> <span class="hljs-title class_">Uint8Array</span>(s.<span class="hljs-property">wsize</span>))),i&gt;=s.<span class="hljs-property">wsize</span>?(s.<span class="hljs-property">window</span>.<span class="hljs-title function_">set</span>(e.<span class="hljs-title function_">subarray</span>(a-s.<span class="hljs-property">wsize</span>,a),<span class="hljs-number">0</span>),(s.<span class="hljs-property">wnext</span>=<span class="hljs-number">0</span>),(s.<span class="hljs-property">whave</span>=s.<span class="hljs-property">wsize</span>)):((n=s.<span class="hljs-property">wsize</span>-s.<span class="hljs-property">wnext</span>),n&gt;i&amp;&amp;(n=i),s.<span class="hljs-property">window</span>.<span class="hljs-title function_">set</span>(e.<span class="hljs-title function_">subarray</span>(a-i,a-i+n),s.<span class="hljs-property">wnext</span>),(i-=n)?(s.<span class="hljs-property">window</span>.<span class="hljs-title function_">set</span>(e.<span class="hljs-title function_">subarray</span>(a-i,a),<span class="hljs-number">0</span>),(s.<span class="hljs-property">wnext</span>=i),(s.<span class="hljs-property">whave</span>=s.<span class="hljs-property">wsize</span>)):((s.<span class="hljs-property">wnext</span>+=n),s.<span class="hljs-property">wnext</span>===s.<span class="hljs-property">wsize</span>&amp;&amp;(s.<span class="hljs-property">wnext</span>=<span class="hljs-number">0</span>),s.<span class="hljs-property">whave</span>&lt;s.<span class="hljs-property">wsize</span>&amp;&amp;(s.<span class="hljs-property">whave</span>+=n))),<span class="hljs-number">0</span>)&#125;;<span class="hljs-keyword">var</span> qe=&#123;<span class="hljs-attr">inflateReset</span>:<span class="hljs-title class_">He</span>,<span class="hljs-attr">inflateReset2</span>:je,<span class="hljs-attr">inflateResetKeep</span>:<span class="hljs-title class_">Me</span>,<span class="hljs-attr">inflateInit</span>:<span class="hljs-function">(<span class="hljs-params">t</span>)=&gt;</span><span class="hljs-title class_">Ke</span>(t,<span class="hljs-number">15</span>),<span class="hljs-attr">inflateInit2</span>:<span class="hljs-title class_">Ke</span>,<span class="hljs-attr">inflate</span>:<span class="hljs-function">(<span class="hljs-params">t,e</span>)=&gt;</span>&#123;<span class="hljs-keyword">let</span> a,i,n,s,r,o,l,h,d,_,f,c,u,w,m,b,g,p,k,v,y,x,z=<span class="hljs-number">0</span>;<span class="hljs-keyword">const</span> A=<span class="hljs-keyword">new</span> <span class="hljs-title class_">Uint8Array</span>(<span class="hljs-number">4</span>);<span class="hljs-keyword">let</span> E,R;<span class="hljs-keyword">const</span> Z=<span class="hljs-keyword">new</span> <span class="hljs-title class_">Uint8Array</span>([<span class="hljs-number">16</span>,<span class="hljs-number">17</span>,<span class="hljs-number">18</span>,<span class="hljs-number">0</span>,<span class="hljs-number">8</span>,<span class="hljs-number">7</span>,<span class="hljs-number">9</span>,<span class="hljs-number">6</span>,<span class="hljs-number">10</span>,<span class="hljs-number">5</span>,<span class="hljs-number">11</span>,<span class="hljs-number">4</span>,<span class="hljs-number">12</span>,<span class="hljs-number">3</span>,<span class="hljs-number">13</span>,<span class="hljs-number">2</span>,<span class="hljs-number">14</span>,<span class="hljs-number">1</span>,<span class="hljs-number">15</span>]);<span class="hljs-keyword">if</span>(<span class="hljs-title class_">Ce</span>(t)||!t.<span class="hljs-property">output</span>||(!t.<span class="hljs-property">input</span>&amp;&amp;<span class="hljs-number">0</span>!==t.<span class="hljs-property">avail_in</span>))<span class="hljs-keyword">return</span> xe;(a=t.<span class="hljs-property">state</span>),a.<span class="hljs-property">mode</span>===<span class="hljs-title class_">Se</span>&amp;&amp;(a.<span class="hljs-property">mode</span>=<span class="hljs-title class_">De</span>),(r=t.<span class="hljs-property">next_out</span>),(n=t.<span class="hljs-property">output</span>),(l=t.<span class="hljs-property">avail_out</span>),(s=t.<span class="hljs-property">next_in</span>),(i=t.<span class="hljs-property">input</span>),(o=t.<span class="hljs-property">avail_in</span>),(h=a.<span class="hljs-property">hold</span>),(d=a.<span class="hljs-property">bits</span>),(_=o),(f=l),(x=ke);<span class="hljs-attr">t</span>:<span class="hljs-keyword">for</span>(;;)<span class="hljs-keyword">switch</span>(a.<span class="hljs-property">mode</span>)&#123;<span class="hljs-keyword">case</span> <span class="hljs-title class_">Ze</span>:<span class="hljs-keyword">if</span>(<span class="hljs-number">0</span>===a.<span class="hljs-property">wrap</span>)&#123;a.<span class="hljs-property">mode</span>=<span class="hljs-title class_">De</span>;<span class="hljs-keyword">break</span>&#125;<span class="hljs-keyword">for</span>(;d&lt;<span class="hljs-number">16</span>;)&#123;<span class="hljs-keyword">if</span>(<span class="hljs-number">0</span>===o)<span class="hljs-keyword">break</span> t;o--,(h+=i[s++]&lt;&lt;d),(d+=<span class="hljs-number">8</span>)&#125;<span class="hljs-keyword">if</span>(<span class="hljs-number">2</span>&amp;a.<span class="hljs-property">wrap</span>&amp;&amp;<span class="hljs-number">35615</span>===h)&#123;<span class="hljs-number">0</span>===a.<span class="hljs-property">wbits</span>&amp;&amp;(a.<span class="hljs-property">wbits</span>=<span class="hljs-number">15</span>),(a.<span class="hljs-property">check</span>=<span class="hljs-number">0</span>),(A[<span class="hljs-number">0</span>]=<span class="hljs-number">255</span>&amp;h),(A[<span class="hljs-number">1</span>]=(h&gt;&gt;&gt;<span class="hljs-number">8</span>)&amp;<span class="hljs-number">255</span>),(a.<span class="hljs-property">check</span>=<span class="hljs-title function_">H</span>(a.<span class="hljs-property">check</span>,A,<span class="hljs-number">2</span>,<span class="hljs-number">0</span>)),(h=<span class="hljs-number">0</span>),(d=<span class="hljs-number">0</span>),(a.<span class="hljs-property">mode</span>=<span class="hljs-number">16181</span>);<span class="hljs-keyword">break</span>&#125;<span class="hljs-keyword">if</span>((a.<span class="hljs-property">head</span>&amp;&amp;(a.<span class="hljs-property">head</span>.<span class="hljs-property">done</span>=!<span class="hljs-number">1</span>),!(<span class="hljs-number">1</span>&amp;a.<span class="hljs-property">wrap</span>)||(((<span class="hljs-number">255</span>&amp;h)&lt;&lt;<span class="hljs-number">8</span>)+(h&gt;&gt;<span class="hljs-number">8</span>))%<span class="hljs-number">31</span>))&#123;(t.<span class="hljs-property">msg</span>=<span class="hljs-string">&#x27;incorrect header check&#x27;</span>),(a.<span class="hljs-property">mode</span>=<span class="hljs-title class_">Le</span>);<span class="hljs-keyword">break</span>&#125;<span class="hljs-keyword">if</span>((<span class="hljs-number">15</span>&amp;h)!==<span class="hljs-title class_">Re</span>)&#123;(t.<span class="hljs-property">msg</span>=<span class="hljs-string">&#x27;unknown compression method&#x27;</span>),(a.<span class="hljs-property">mode</span>=<span class="hljs-title class_">Le</span>);<span class="hljs-keyword">break</span>&#125;<span class="hljs-keyword">if</span>(((h&gt;&gt;&gt;=<span class="hljs-number">4</span>),(d-=<span class="hljs-number">4</span>),(y=<span class="hljs-number">8</span>+(<span class="hljs-number">15</span>&amp;h)),<span class="hljs-number">0</span>===a.<span class="hljs-property">wbits</span>&amp;&amp;(a.<span class="hljs-property">wbits</span>=y),y&gt;<span class="hljs-number">15</span>||y&gt;a.<span class="hljs-property">wbits</span>))&#123;(t.<span class="hljs-property">msg</span>=<span class="hljs-string">&#x27;invalid window size&#x27;</span>),(a.<span class="hljs-property">mode</span>=<span class="hljs-title class_">Le</span>);<span class="hljs-keyword">break</span>&#125;(a.<span class="hljs-property">dmax</span>=<span class="hljs-number">1</span>&lt;&lt;a.<span class="hljs-property">wbits</span>),(a.<span class="hljs-property">flags</span>=<span class="hljs-number">0</span>),(t.<span class="hljs-property">adler</span>=a.<span class="hljs-property">check</span>=<span class="hljs-number">1</span>),(a.<span class="hljs-property">mode</span>=<span class="hljs-number">512</span>&amp;h?<span class="hljs-number">16189</span>:<span class="hljs-title class_">Se</span>),(h=<span class="hljs-number">0</span>),(d=<span class="hljs-number">0</span>);<span class="hljs-keyword">break</span>;<span class="hljs-keyword">case</span> <span class="hljs-number">16181</span>:<span class="hljs-keyword">for</span>(;d&lt;<span class="hljs-number">16</span>;)&#123;<span class="hljs-keyword">if</span>(<span class="hljs-number">0</span>===o)<span class="hljs-keyword">break</span> t;o--,(h+=i[s++]&lt;&lt;d),(d+=<span class="hljs-number">8</span>)&#125;<span class="hljs-keyword">if</span>(((a.<span class="hljs-property">flags</span>=h),(<span class="hljs-number">255</span>&amp;a.<span class="hljs-property">flags</span>)!==<span class="hljs-title class_">Re</span>))&#123;(t.<span class="hljs-property">msg</span>=<span class="hljs-string">&#x27;unknown compression method&#x27;</span>),(a.<span class="hljs-property">mode</span>=<span class="hljs-title class_">Le</span>);<span class="hljs-keyword">break</span>&#125;<span class="hljs-keyword">if</span>(<span class="hljs-number">57344</span>&amp;a.<span class="hljs-property">flags</span>)&#123;(t.<span class="hljs-property">msg</span>=<span class="hljs-string">&#x27;unknown header flags set&#x27;</span>),(a.<span class="hljs-property">mode</span>=<span class="hljs-title class_">Le</span>);<span class="hljs-keyword">break</span>&#125;a.<span class="hljs-property">head</span>&amp;&amp;(a.<span class="hljs-property">head</span>.<span class="hljs-property">text</span>=(h&gt;&gt;<span class="hljs-number">8</span>)&amp;<span class="hljs-number">1</span>),<span class="hljs-number">512</span>&amp;a.<span class="hljs-property">flags</span>&amp;&amp;<span class="hljs-number">4</span>&amp;a.<span class="hljs-property">wrap</span>&amp;&amp;((A[<span class="hljs-number">0</span>]=<span class="hljs-number">255</span>&amp;h),(A[<span class="hljs-number">1</span>]=(h&gt;&gt;&gt;<span class="hljs-number">8</span>)&amp;<span class="hljs-number">255</span>),(a.<span class="hljs-property">check</span>=<span class="hljs-title function_">H</span>(a.<span class="hljs-property">check</span>,A,<span class="hljs-number">2</span>,<span class="hljs-number">0</span>))),(h=<span class="hljs-number">0</span>),(d=<span class="hljs-number">0</span>),(a.<span class="hljs-property">mode</span>=<span class="hljs-number">16182</span>);<span class="hljs-keyword">case</span> <span class="hljs-number">16182</span>:<span class="hljs-keyword">for</span>(;d&lt;<span class="hljs-number">32</span>;)&#123;<span class="hljs-keyword">if</span>(<span class="hljs-number">0</span>===o)<span class="hljs-keyword">break</span> t;o--,(h+=i[s++]&lt;&lt;d),(d+=<span class="hljs-number">8</span>)&#125;a.<span class="hljs-property">head</span>&amp;&amp;(a.<span class="hljs-property">head</span>.<span class="hljs-property">time</span>=h),<span class="hljs-number">512</span>&amp;a.<span class="hljs-property">flags</span>&amp;&amp;<span class="hljs-number">4</span>&amp;a.<span class="hljs-property">wrap</span>&amp;&amp;((A[<span class="hljs-number">0</span>]=<span class="hljs-number">255</span>&amp;h),(A[<span class="hljs-number">1</span>]=(h&gt;&gt;&gt;<span class="hljs-number">8</span>)&amp;<span class="hljs-number">255</span>),(A[<span class="hljs-number">2</span>]=(h&gt;&gt;&gt;<span class="hljs-number">16</span>)&amp;<span class="hljs-number">255</span>),(A[<span class="hljs-number">3</span>]=(h&gt;&gt;&gt;<span class="hljs-number">24</span>)&amp;<span class="hljs-number">255</span>),(a.<span class="hljs-property">check</span>=<span class="hljs-title function_">H</span>(a.<span class="hljs-property">check</span>,A,<span class="hljs-number">4</span>,<span class="hljs-number">0</span>))),(h=<span class="hljs-number">0</span>),(d=<span class="hljs-number">0</span>),(a.<span class="hljs-property">mode</span>=<span class="hljs-number">16183</span>);<span class="hljs-keyword">case</span> <span class="hljs-number">16183</span>:<span class="hljs-keyword">for</span>(;d&lt;<span class="hljs-number">16</span>;)&#123;<span class="hljs-keyword">if</span>(<span class="hljs-number">0</span>===o)<span class="hljs-keyword">break</span> t;o--,(h+=i[s++]&lt;&lt;d),(d+=<span class="hljs-number">8</span>)&#125;a.<span class="hljs-property">head</span>&amp;&amp;((a.<span class="hljs-property">head</span>.<span class="hljs-property">xflags</span>=<span class="hljs-number">255</span>&amp;h),(a.<span class="hljs-property">head</span>.<span class="hljs-property">os</span>=h&gt;&gt;<span class="hljs-number">8</span>)),<span class="hljs-number">512</span>&amp;a.<span class="hljs-property">flags</span>&amp;&amp;<span class="hljs-number">4</span>&amp;a.<span class="hljs-property">wrap</span>&amp;&amp;((A[<span class="hljs-number">0</span>]=<span class="hljs-number">255</span>&amp;h),(A[<span class="hljs-number">1</span>]=(h&gt;&gt;&gt;<span class="hljs-number">8</span>)&amp;<span class="hljs-number">255</span>),(a.<span class="hljs-property">check</span>=<span class="hljs-title function_">H</span>(a.<span class="hljs-property">check</span>,A,<span class="hljs-number">2</span>,<span class="hljs-number">0</span>))),(h=<span class="hljs-number">0</span>),(d=<span class="hljs-number">0</span>),(a.<span class="hljs-property">mode</span>=<span class="hljs-number">16184</span>);<span class="hljs-keyword">case</span> <span class="hljs-number">16184</span>:<span class="hljs-keyword">if</span>(<span class="hljs-number">1024</span>&amp;a.<span class="hljs-property">flags</span>)&#123;<span class="hljs-keyword">for</span>(;d&lt;<span class="hljs-number">16</span>;)&#123;<span class="hljs-keyword">if</span>(<span class="hljs-number">0</span>===o)<span class="hljs-keyword">break</span> t;o--,(h+=i[s++]&lt;&lt;d),(d+=<span class="hljs-number">8</span>)&#125;(a.<span class="hljs-property">length</span>=h),a.<span class="hljs-property">head</span>&amp;&amp;(a.<span class="hljs-property">head</span>.<span class="hljs-property">extra_len</span>=h),<span class="hljs-number">512</span>&amp;a.<span class="hljs-property">flags</span>&amp;&amp;<span class="hljs-number">4</span>&amp;a.<span class="hljs-property">wrap</span>&amp;&amp;((A[<span class="hljs-number">0</span>]=<span class="hljs-number">255</span>&amp;h),(A[<span class="hljs-number">1</span>]=(h&gt;&gt;&gt;<span class="hljs-number">8</span>)&amp;<span class="hljs-number">255</span>),(a.<span class="hljs-property">check</span>=<span class="hljs-title function_">H</span>(a.<span class="hljs-property">check</span>,A,<span class="hljs-number">2</span>,<span class="hljs-number">0</span>))),(h=<span class="hljs-number">0</span>),(d=<span class="hljs-number">0</span>)&#125;<span class="hljs-keyword">else</span> a.<span class="hljs-property">head</span>&amp;&amp;(a.<span class="hljs-property">head</span>.<span class="hljs-property">extra</span>=<span class="hljs-literal">null</span>);a.<span class="hljs-property">mode</span>=<span class="hljs-number">16185</span>;<span class="hljs-keyword">case</span> <span class="hljs-number">16185</span>:<span class="hljs-keyword">if</span>(<span class="hljs-number">1024</span>&amp;a.<span class="hljs-property">flags</span>&amp;&amp;((c=a.<span class="hljs-property">length</span>),c&gt;o&amp;&amp;(c=o),c&amp;&amp;(a.<span class="hljs-property">head</span>&amp;&amp;((y=a.<span class="hljs-property">head</span>.<span class="hljs-property">extra_len</span>-a.<span class="hljs-property">length</span>),a.<span class="hljs-property">head</span>.<span class="hljs-property">extra</span>||(a.<span class="hljs-property">head</span>.<span class="hljs-property">extra</span>=<span class="hljs-keyword">new</span> <span class="hljs-title class_">Uint8Array</span>(a.<span class="hljs-property">head</span>.<span class="hljs-property">extra_len</span>)),a.<span class="hljs-property">head</span>.<span class="hljs-property">extra</span>.<span class="hljs-title function_">set</span>(i.<span class="hljs-title function_">subarray</span>(s,s+c),y)),<span class="hljs-number">512</span>&amp;a.<span class="hljs-property">flags</span>&amp;&amp;<span class="hljs-number">4</span>&amp;a.<span class="hljs-property">wrap</span>&amp;&amp;(a.<span class="hljs-property">check</span>=<span class="hljs-title function_">H</span>(a.<span class="hljs-property">check</span>,i,c,s)),(o-=c),(s+=c),(a.<span class="hljs-property">length</span>-=c)),a.<span class="hljs-property">length</span>))<span class="hljs-keyword">break</span> t;(a.<span class="hljs-property">length</span>=<span class="hljs-number">0</span>),(a.<span class="hljs-property">mode</span>=<span class="hljs-number">16186</span>);<span class="hljs-keyword">case</span> <span class="hljs-number">16186</span>:<span class="hljs-keyword">if</span>(<span class="hljs-number">2048</span>&amp;a.<span class="hljs-property">flags</span>)&#123;<span class="hljs-keyword">if</span>(<span class="hljs-number">0</span>===o)<span class="hljs-keyword">break</span> t;c=<span class="hljs-number">0</span>;<span class="hljs-keyword">do</span>&#123;(y=i[s+c++]),a.<span class="hljs-property">head</span>&amp;&amp;y&amp;&amp;a.<span class="hljs-property">length</span>&lt;<span class="hljs-number">65536</span>&amp;&amp;(a.<span class="hljs-property">head</span>.<span class="hljs-property">name</span>+=<span class="hljs-title class_">String</span>.<span class="hljs-title function_">fromCharCode</span>(y))&#125;<span class="hljs-keyword">while</span>(y&amp;&amp;c&lt;o);<span class="hljs-keyword">if</span>((<span class="hljs-number">512</span>&amp;a.<span class="hljs-property">flags</span>&amp;&amp;<span class="hljs-number">4</span>&amp;a.<span class="hljs-property">wrap</span>&amp;&amp;(a.<span class="hljs-property">check</span>=<span class="hljs-title function_">H</span>(a.<span class="hljs-property">check</span>,i,c,s)),(o-=c),(s+=c),y))<span class="hljs-keyword">break</span> t&#125;<span class="hljs-keyword">else</span> a.<span class="hljs-property">head</span>&amp;&amp;(a.<span class="hljs-property">head</span>.<span class="hljs-property">name</span>=<span class="hljs-literal">null</span>);(a.<span class="hljs-property">length</span>=<span class="hljs-number">0</span>),(a.<span class="hljs-property">mode</span>=<span class="hljs-number">16187</span>);<span class="hljs-keyword">case</span> <span class="hljs-number">16187</span>:<span class="hljs-keyword">if</span>(<span class="hljs-number">4096</span>&amp;a.<span class="hljs-property">flags</span>)&#123;<span class="hljs-keyword">if</span>(<span class="hljs-number">0</span>===o)<span class="hljs-keyword">break</span> t;c=<span class="hljs-number">0</span>;<span class="hljs-keyword">do</span>&#123;(y=i[s+c++]),a.<span class="hljs-property">head</span>&amp;&amp;y&amp;&amp;a.<span class="hljs-property">length</span>&lt;<span class="hljs-number">65536</span>&amp;&amp;(a.<span class="hljs-property">head</span>.<span class="hljs-property">comment</span>+=<span class="hljs-title class_">String</span>.<span class="hljs-title function_">fromCharCode</span>(y))&#125;<span class="hljs-keyword">while</span>(y&amp;&amp;c&lt;o);<span class="hljs-keyword">if</span>((<span class="hljs-number">512</span>&amp;a.<span class="hljs-property">flags</span>&amp;&amp;<span class="hljs-number">4</span>&amp;a.<span class="hljs-property">wrap</span>&amp;&amp;(a.<span class="hljs-property">check</span>=<span class="hljs-title function_">H</span>(a.<span class="hljs-property">check</span>,i,c,s)),(o-=c),(s+=c),y))<span class="hljs-keyword">break</span> t&#125;<span class="hljs-keyword">else</span> a.<span class="hljs-property">head</span>&amp;&amp;(a.<span class="hljs-property">head</span>.<span class="hljs-property">comment</span>=<span class="hljs-literal">null</span>);a.<span class="hljs-property">mode</span>=<span class="hljs-number">16188</span>;<span class="hljs-keyword">case</span> <span class="hljs-number">16188</span>:<span class="hljs-keyword">if</span>(<span class="hljs-number">512</span>&amp;a.<span class="hljs-property">flags</span>)&#123;<span class="hljs-keyword">for</span>(;d&lt;<span class="hljs-number">16</span>;)&#123;<span class="hljs-keyword">if</span>(<span class="hljs-number">0</span>===o)<span class="hljs-keyword">break</span> t;o--,(h+=i[s++]&lt;&lt;d),(d+=<span class="hljs-number">8</span>)&#125;<span class="hljs-keyword">if</span>(<span class="hljs-number">4</span>&amp;a.<span class="hljs-property">wrap</span>&amp;&amp;h!==(<span class="hljs-number">65535</span>&amp;a.<span class="hljs-property">check</span>))&#123;(t.<span class="hljs-property">msg</span>=<span class="hljs-string">&#x27;header crc mismatch&#x27;</span>),(a.<span class="hljs-property">mode</span>=<span class="hljs-title class_">Le</span>);<span class="hljs-keyword">break</span>&#125;(h=<span class="hljs-number">0</span>),(d=<span class="hljs-number">0</span>)&#125;a.<span class="hljs-property">head</span>&amp;&amp;((a.<span class="hljs-property">head</span>.<span class="hljs-property">hcrc</span>=(a.<span class="hljs-property">flags</span>&gt;&gt;<span class="hljs-number">9</span>)&amp;<span class="hljs-number">1</span>),(a.<span class="hljs-property">head</span>.<span class="hljs-property">done</span>=!<span class="hljs-number">0</span>)),(t.<span class="hljs-property">adler</span>=a.<span class="hljs-property">check</span>=<span class="hljs-number">0</span>),(a.<span class="hljs-property">mode</span>=<span class="hljs-title class_">Se</span>);<span class="hljs-keyword">break</span>;<span class="hljs-keyword">case</span> <span class="hljs-number">16189</span>:<span class="hljs-keyword">for</span>(;d&lt;<span class="hljs-number">32</span>;)&#123;<span class="hljs-keyword">if</span>(<span class="hljs-number">0</span>===o)<span class="hljs-keyword">break</span> t;o--,(h+=i[s++]&lt;&lt;d),(d+=<span class="hljs-number">8</span>)&#125;(t.<span class="hljs-property">adler</span>=a.<span class="hljs-property">check</span>=<span class="hljs-title class_">Ne</span>(h)),(h=<span class="hljs-number">0</span>),(d=<span class="hljs-number">0</span>),(a.<span class="hljs-property">mode</span>=<span class="hljs-title class_">Ue</span>);<span class="hljs-keyword">case</span> <span class="hljs-title class_">Ue</span>:<span class="hljs-keyword">if</span>(<span class="hljs-number">0</span>===a.<span class="hljs-property">havedict</span>)<span class="hljs-keyword">return</span>((t.<span class="hljs-property">next_out</span>=r),(t.<span class="hljs-property">avail_out</span>=l),(t.<span class="hljs-property">next_in</span>=s),(t.<span class="hljs-property">avail_in</span>=o),(a.<span class="hljs-property">hold</span>=h),(a.<span class="hljs-property">bits</span>=d),ye);(t.<span class="hljs-property">adler</span>=a.<span class="hljs-property">check</span>=<span class="hljs-number">1</span>),(a.<span class="hljs-property">mode</span>=<span class="hljs-title class_">Se</span>);<span class="hljs-keyword">case</span> <span class="hljs-title class_">Se</span>:<span class="hljs-keyword">if</span>(e===ge||e===pe)<span class="hljs-keyword">break</span> t;<span class="hljs-keyword">case</span> <span class="hljs-title class_">De</span>:<span class="hljs-keyword">if</span>(a.<span class="hljs-property">last</span>)&#123;(h&gt;&gt;&gt;=<span class="hljs-number">7</span>&amp;d),(d-=<span class="hljs-number">7</span>&amp;d),(a.<span class="hljs-property">mode</span>=<span class="hljs-title class_">Fe</span>);<span class="hljs-keyword">break</span>&#125;<span class="hljs-keyword">for</span>(;d&lt;<span class="hljs-number">3</span>;)&#123;<span class="hljs-keyword">if</span>(<span class="hljs-number">0</span>===o)<span class="hljs-keyword">break</span> t;o--,(h+=i[s++]&lt;&lt;d),(d+=<span class="hljs-number">8</span>)&#125;<span class="hljs-keyword">switch</span>(((a.<span class="hljs-property">last</span>=<span class="hljs-number">1</span>&amp;h),(h&gt;&gt;&gt;=<span class="hljs-number">1</span>),(d-=<span class="hljs-number">1</span>),<span class="hljs-number">3</span>&amp;h))&#123;<span class="hljs-keyword">case</span> <span class="hljs-number">0</span>:a.<span class="hljs-property">mode</span>=<span class="hljs-number">16193</span>;<span class="hljs-keyword">break</span>;<span class="hljs-keyword">case</span> <span class="hljs-number">1</span>:<span class="hljs-keyword">if</span>((<span class="hljs-title class_">Xe</span>(a),(a.<span class="hljs-property">mode</span>=<span class="hljs-title class_">Oe</span>),e===pe))&#123;(h&gt;&gt;&gt;=<span class="hljs-number">2</span>),(d-=<span class="hljs-number">2</span>);<span class="hljs-keyword">break</span> t&#125;<span class="hljs-keyword">break</span>;<span class="hljs-keyword">case</span> <span class="hljs-number">2</span>:a.<span class="hljs-property">mode</span>=<span class="hljs-number">16196</span>;<span class="hljs-keyword">break</span>;<span class="hljs-keyword">case</span> <span class="hljs-number">3</span>:(t.<span class="hljs-property">msg</span>=<span class="hljs-string">&#x27;invalid block type&#x27;</span>),(a.<span class="hljs-property">mode</span>=<span class="hljs-title class_">Le</span>)&#125;(h&gt;&gt;&gt;=<span class="hljs-number">2</span>),(d-=<span class="hljs-number">2</span>);<span class="hljs-keyword">break</span>;<span class="hljs-keyword">case</span> <span class="hljs-number">16193</span>:<span class="hljs-keyword">for</span>(h&gt;&gt;&gt;=<span class="hljs-number">7</span>&amp;d,d-=<span class="hljs-number">7</span>&amp;d;d&lt;<span class="hljs-number">32</span>;)&#123;<span class="hljs-keyword">if</span>(<span class="hljs-number">0</span>===o)<span class="hljs-keyword">break</span> t;o--,(h+=i[s++]&lt;&lt;d),(d+=<span class="hljs-number">8</span>)&#125;<span class="hljs-keyword">if</span>((<span class="hljs-number">65535</span>&amp;h)!=((h&gt;&gt;&gt;<span class="hljs-number">16</span>)^<span class="hljs-number">65535</span>))&#123;(t.<span class="hljs-property">msg</span>=<span class="hljs-string">&#x27;invalid stored block lengths&#x27;</span>),(a.<span class="hljs-property">mode</span>=<span class="hljs-title class_">Le</span>);<span class="hljs-keyword">break</span>&#125;<span class="hljs-keyword">if</span>(((a.<span class="hljs-property">length</span>=<span class="hljs-number">65535</span>&amp;h),(h=<span class="hljs-number">0</span>),(d=<span class="hljs-number">0</span>),(a.<span class="hljs-property">mode</span>=<span class="hljs-title class_">Te</span>),e===pe))<span class="hljs-keyword">break</span> t;<span class="hljs-keyword">case</span> <span class="hljs-title class_">Te</span>:a.<span class="hljs-property">mode</span>=<span class="hljs-number">16195</span>;<span class="hljs-keyword">case</span> <span class="hljs-number">16195</span>:<span class="hljs-keyword">if</span>(((c=a.<span class="hljs-property">length</span>),c))&#123;<span class="hljs-keyword">if</span>((c&gt;o&amp;&amp;(c=o),c&gt;l&amp;&amp;(c=l),<span class="hljs-number">0</span>===c))<span class="hljs-keyword">break</span> t;n.<span class="hljs-title function_">set</span>(i.<span class="hljs-title function_">subarray</span>(s,s+c),r),(o-=c),(s+=c),(l-=c),(r+=c),(a.<span class="hljs-property">length</span>-=c);<span class="hljs-keyword">break</span>&#125;a.<span class="hljs-property">mode</span>=<span class="hljs-title class_">Se</span>;<span class="hljs-keyword">break</span>;<span class="hljs-keyword">case</span> <span class="hljs-number">16196</span>:<span class="hljs-keyword">for</span>(;d&lt;<span class="hljs-number">14</span>;)&#123;<span class="hljs-keyword">if</span>(<span class="hljs-number">0</span>===o)<span class="hljs-keyword">break</span> t;o--,(h+=i[s++]&lt;&lt;d),(d+=<span class="hljs-number">8</span>)&#125;<span class="hljs-keyword">if</span>(((a.<span class="hljs-property">nlen</span>=<span class="hljs-number">257</span>+(<span class="hljs-number">31</span>&amp;h)),(h&gt;&gt;&gt;=<span class="hljs-number">5</span>),(d-=<span class="hljs-number">5</span>),(a.<span class="hljs-property">ndist</span>=<span class="hljs-number">1</span>+(<span class="hljs-number">31</span>&amp;h)),(h&gt;&gt;&gt;=<span class="hljs-number">5</span>),(d-=<span class="hljs-number">5</span>),(a.<span class="hljs-property">ncode</span>=<span class="hljs-number">4</span>+(<span class="hljs-number">15</span>&amp;h)),(h&gt;&gt;&gt;=<span class="hljs-number">4</span>),(d-=<span class="hljs-number">4</span>),a.<span class="hljs-property">nlen</span>&gt;<span class="hljs-number">286</span>||a.<span class="hljs-property">ndist</span>&gt;<span class="hljs-number">30</span>))&#123;(t.<span class="hljs-property">msg</span>=<span class="hljs-string">&#x27;too many length or distance symbols&#x27;</span>),(a.<span class="hljs-property">mode</span>=<span class="hljs-title class_">Le</span>);<span class="hljs-keyword">break</span>&#125;(a.<span class="hljs-property">have</span>=<span class="hljs-number">0</span>),(a.<span class="hljs-property">mode</span>=<span class="hljs-number">16197</span>);<span class="hljs-keyword">case</span> <span class="hljs-number">16197</span>:<span class="hljs-keyword">for</span>(;a.<span class="hljs-property">have</span>&lt;a.<span class="hljs-property">ncode</span>;)&#123;<span class="hljs-keyword">for</span>(;d&lt;<span class="hljs-number">3</span>;)&#123;<span class="hljs-keyword">if</span>(<span class="hljs-number">0</span>===o)<span class="hljs-keyword">break</span> t;o--,(h+=i[s++]&lt;&lt;d),(d+=<span class="hljs-number">8</span>)&#125;(a.<span class="hljs-property">lens</span>[Z[a.<span class="hljs-property">have</span>++]]=<span class="hljs-number">7</span>&amp;h),(h&gt;&gt;&gt;=<span class="hljs-number">3</span>),(d-=<span class="hljs-number">3</span>)&#125;<span class="hljs-keyword">for</span>(;a.<span class="hljs-property">have</span>&lt;<span class="hljs-number">19</span>;)a.<span class="hljs-property">lens</span>[Z[a.<span class="hljs-property">have</span>++]]=<span class="hljs-number">0</span>;<span class="hljs-keyword">if</span>(((a.<span class="hljs-property">lencode</span>=a.<span class="hljs-property">lendyn</span>),(a.<span class="hljs-property">lenbits</span>=<span class="hljs-number">7</span>),(E=&#123;<span class="hljs-attr">bits</span>:a.<span class="hljs-property">lenbits</span>&#125;),(x=<span class="hljs-title function_">me</span>(<span class="hljs-number">0</span>,a.<span class="hljs-property">lens</span>,<span class="hljs-number">0</span>,<span class="hljs-number">19</span>,a.<span class="hljs-property">lencode</span>,<span class="hljs-number">0</span>,a.<span class="hljs-property">work</span>,E)),(a.<span class="hljs-property">lenbits</span>=E.<span class="hljs-property">bits</span>),x))&#123;(t.<span class="hljs-property">msg</span>=<span class="hljs-string">&#x27;invalid code lengths set&#x27;</span>),(a.<span class="hljs-property">mode</span>=<span class="hljs-title class_">Le</span>);<span class="hljs-keyword">break</span>&#125;(a.<span class="hljs-property">have</span>=<span class="hljs-number">0</span>),(a.<span class="hljs-property">mode</span>=<span class="hljs-number">16198</span>);<span class="hljs-keyword">case</span> <span class="hljs-number">16198</span>:<span class="hljs-keyword">for</span>(;a.<span class="hljs-property">have</span>&lt;a.<span class="hljs-property">nlen</span>+a.<span class="hljs-property">ndist</span>;)&#123;<span class="hljs-keyword">for</span>(;(z=a.<span class="hljs-property">lencode</span>[h&amp;((<span class="hljs-number">1</span>&lt;&lt;a.<span class="hljs-property">lenbits</span>)-<span class="hljs-number">1</span>)]),(m=z&gt;&gt;&gt;<span class="hljs-number">24</span>),(b=(z&gt;&gt;&gt;<span class="hljs-number">16</span>)&amp;<span class="hljs-number">255</span>),(g=<span class="hljs-number">65535</span>&amp;z),!(m&lt;=d);)&#123;<span class="hljs-keyword">if</span>(<span class="hljs-number">0</span>===o)<span class="hljs-keyword">break</span> t;o--,(h+=i[s++]&lt;&lt;d),(d+=<span class="hljs-number">8</span>)&#125;<span class="hljs-keyword">if</span>(g&lt;<span class="hljs-number">16</span>)(h&gt;&gt;&gt;=m),(d-=m),(a.<span class="hljs-property">lens</span>[a.<span class="hljs-property">have</span>++]=g);<span class="hljs-keyword">else</span>&#123;<span class="hljs-keyword">if</span>(<span class="hljs-number">16</span>===g)&#123;<span class="hljs-keyword">for</span>(R=m+<span class="hljs-number">2</span>;d&lt;R;)&#123;<span class="hljs-keyword">if</span>(<span class="hljs-number">0</span>===o)<span class="hljs-keyword">break</span> t;o--,(h+=i[s++]&lt;&lt;d),(d+=<span class="hljs-number">8</span>)&#125;<span class="hljs-keyword">if</span>(((h&gt;&gt;&gt;=m),(d-=m),<span class="hljs-number">0</span>===a.<span class="hljs-property">have</span>))&#123;(t.<span class="hljs-property">msg</span>=<span class="hljs-string">&#x27;invalid bit length repeat&#x27;</span>),(a.<span class="hljs-property">mode</span>=<span class="hljs-title class_">Le</span>);<span class="hljs-keyword">break</span>&#125;(y=a.<span class="hljs-property">lens</span>[a.<span class="hljs-property">have</span>-<span class="hljs-number">1</span>]),(c=<span class="hljs-number">3</span>+(<span class="hljs-number">3</span>&amp;h)),(h&gt;&gt;&gt;=<span class="hljs-number">2</span>),(d-=<span class="hljs-number">2</span>)&#125;<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(<span class="hljs-number">17</span>===g)&#123;<span class="hljs-keyword">for</span>(R=m+<span class="hljs-number">3</span>;d&lt;R;)&#123;<span class="hljs-keyword">if</span>(<span class="hljs-number">0</span>===o)<span class="hljs-keyword">break</span> t;o--,(h+=i[s++]&lt;&lt;d),(d+=<span class="hljs-number">8</span>)&#125;(h&gt;&gt;&gt;=m),(d-=m),(y=<span class="hljs-number">0</span>),(c=<span class="hljs-number">3</span>+(<span class="hljs-number">7</span>&amp;h)),(h&gt;&gt;&gt;=<span class="hljs-number">3</span>),(d-=<span class="hljs-number">3</span>)&#125;<span class="hljs-keyword">else</span>&#123;<span class="hljs-keyword">for</span>(R=m+<span class="hljs-number">7</span>;d&lt;R;)&#123;<span class="hljs-keyword">if</span>(<span class="hljs-number">0</span>===o)<span class="hljs-keyword">break</span> t;o--,(h+=i[s++]&lt;&lt;d),(d+=<span class="hljs-number">8</span>)&#125;(h&gt;&gt;&gt;=m),(d-=m),(y=<span class="hljs-number">0</span>),(c=<span class="hljs-number">11</span>+(<span class="hljs-number">127</span>&amp;h)),(h&gt;&gt;&gt;=<span class="hljs-number">7</span>),(d-=<span class="hljs-number">7</span>)&#125;<span class="hljs-keyword">if</span>(a.<span class="hljs-property">have</span>+c&gt;a.<span class="hljs-property">nlen</span>+a.<span class="hljs-property">ndist</span>)&#123;(t.<span class="hljs-property">msg</span>=<span class="hljs-string">&#x27;invalid bit length repeat&#x27;</span>),(a.<span class="hljs-property">mode</span>=<span class="hljs-title class_">Le</span>);<span class="hljs-keyword">break</span>&#125;<span class="hljs-keyword">for</span>(;c--;)a.<span class="hljs-property">lens</span>[a.<span class="hljs-property">have</span>++]=y&#125;&#125;<span class="hljs-keyword">if</span>(a.<span class="hljs-property">mode</span>===<span class="hljs-title class_">Le</span>)<span class="hljs-keyword">break</span>;<span class="hljs-keyword">if</span>(<span class="hljs-number">0</span>===a.<span class="hljs-property">lens</span>[<span class="hljs-number">256</span>])&#123;(t.<span class="hljs-property">msg</span>=<span class="hljs-string">&#x27;invalid code -- missing end-of-block&#x27;</span>),(a.<span class="hljs-property">mode</span>=<span class="hljs-title class_">Le</span>);<span class="hljs-keyword">break</span>&#125;<span class="hljs-keyword">if</span>(((a.<span class="hljs-property">lenbits</span>=<span class="hljs-number">9</span>),(E=&#123;<span class="hljs-attr">bits</span>:a.<span class="hljs-property">lenbits</span>&#125;),(x=<span class="hljs-title function_">me</span>(<span class="hljs-number">1</span>,a.<span class="hljs-property">lens</span>,<span class="hljs-number">0</span>,a.<span class="hljs-property">nlen</span>,a.<span class="hljs-property">lencode</span>,<span class="hljs-number">0</span>,a.<span class="hljs-property">work</span>,E)),(a.<span class="hljs-property">lenbits</span>=E.<span class="hljs-property">bits</span>),x))&#123;(t.<span class="hljs-property">msg</span>=<span class="hljs-string">&#x27;invalid literal/lengths set&#x27;</span>),(a.<span class="hljs-property">mode</span>=<span class="hljs-title class_">Le</span>);<span class="hljs-keyword">break</span>&#125;<span class="hljs-keyword">if</span>(((a.<span class="hljs-property">distbits</span>=<span class="hljs-number">6</span>),(a.<span class="hljs-property">distcode</span>=a.<span class="hljs-property">distdyn</span>),(E=&#123;<span class="hljs-attr">bits</span>:a.<span class="hljs-property">distbits</span>&#125;),(x=<span class="hljs-title function_">me</span>(<span class="hljs-number">2</span>,a.<span class="hljs-property">lens</span>,a.<span class="hljs-property">nlen</span>,a.<span class="hljs-property">ndist</span>,a.<span class="hljs-property">distcode</span>,<span class="hljs-number">0</span>,a.<span class="hljs-property">work</span>,E)),(a.<span class="hljs-property">distbits</span>=E.<span class="hljs-property">bits</span>),x))&#123;(t.<span class="hljs-property">msg</span>=<span class="hljs-string">&#x27;invalid distances set&#x27;</span>),(a.<span class="hljs-property">mode</span>=<span class="hljs-title class_">Le</span>);<span class="hljs-keyword">break</span>&#125;<span class="hljs-keyword">if</span>(((a.<span class="hljs-property">mode</span>=<span class="hljs-title class_">Oe</span>),e===pe))<span class="hljs-keyword">break</span> t;<span class="hljs-keyword">case</span> <span class="hljs-title class_">Oe</span>:a.<span class="hljs-property">mode</span>=<span class="hljs-title class_">Ie</span>;<span class="hljs-keyword">case</span> <span class="hljs-title class_">Ie</span>:<span class="hljs-keyword">if</span>(o&gt;=<span class="hljs-number">6</span>&amp;&amp;l&gt;=<span class="hljs-number">258</span>)&#123;(t.<span class="hljs-property">next_out</span>=r),(t.<span class="hljs-property">avail_out</span>=l),(t.<span class="hljs-property">next_in</span>=s),(t.<span class="hljs-property">avail_in</span>=o),(a.<span class="hljs-property">hold</span>=h),(a.<span class="hljs-property">bits</span>=d),<span class="hljs-title function_">de</span>(t,f),(r=t.<span class="hljs-property">next_out</span>),(n=t.<span class="hljs-property">output</span>),(l=t.<span class="hljs-property">avail_out</span>),(s=t.<span class="hljs-property">next_in</span>),(i=t.<span class="hljs-property">input</span>),(o=t.<span class="hljs-property">avail_in</span>),(h=a.<span class="hljs-property">hold</span>),(d=a.<span class="hljs-property">bits</span>),a.<span class="hljs-property">mode</span>===<span class="hljs-title class_">Se</span>&amp;&amp;(a.<span class="hljs-property">back</span>=-<span class="hljs-number">1</span>);<span class="hljs-keyword">break</span>&#125;<span class="hljs-keyword">for</span>(a.<span class="hljs-property">back</span>=<span class="hljs-number">0</span>;(z=a.<span class="hljs-property">lencode</span>[h&amp;((<span class="hljs-number">1</span>&lt;&lt;a.<span class="hljs-property">lenbits</span>)-<span class="hljs-number">1</span>)]),(m=z&gt;&gt;&gt;<span class="hljs-number">24</span>),(b=(z&gt;&gt;&gt;<span class="hljs-number">16</span>)&amp;<span class="hljs-number">255</span>),(g=<span class="hljs-number">65535</span>&amp;z),!(m&lt;=d);)&#123;<span class="hljs-keyword">if</span>(<span class="hljs-number">0</span>===o)<span class="hljs-keyword">break</span> t;o--,(h+=i[s++]&lt;&lt;d),(d+=<span class="hljs-number">8</span>)&#125;<span class="hljs-keyword">if</span>(b&amp;&amp;<span class="hljs-number">0</span>==(<span class="hljs-number">240</span>&amp;b))&#123;<span class="hljs-keyword">for</span>(p=m,k=b,v=g;(z=a.<span class="hljs-property">lencode</span>[v+((h&amp;((<span class="hljs-number">1</span>&lt;&lt;(p+k))-<span class="hljs-number">1</span>))&gt;&gt;p)]),(m=z&gt;&gt;&gt;<span class="hljs-number">24</span>),(b=(z&gt;&gt;&gt;<span class="hljs-number">16</span>)&amp;<span class="hljs-number">255</span>),(g=<span class="hljs-number">65535</span>&amp;z),!(p+m&lt;=d);)&#123;<span class="hljs-keyword">if</span>(<span class="hljs-number">0</span>===o)<span class="hljs-keyword">break</span> t;o--,(h+=i[s++]&lt;&lt;d),(d+=<span class="hljs-number">8</span>)&#125;(h&gt;&gt;&gt;=p),(d-=p),(a.<span class="hljs-property">back</span>+=p)&#125;<span class="hljs-keyword">if</span>(((h&gt;&gt;&gt;=m),(d-=m),(a.<span class="hljs-property">back</span>+=m),(a.<span class="hljs-property">length</span>=g),<span class="hljs-number">0</span>===b))&#123;a.<span class="hljs-property">mode</span>=<span class="hljs-number">16205</span>;<span class="hljs-keyword">break</span>&#125;<span class="hljs-keyword">if</span>(<span class="hljs-number">32</span>&amp;b)&#123;(a.<span class="hljs-property">back</span>=-<span class="hljs-number">1</span>),(a.<span class="hljs-property">mode</span>=<span class="hljs-title class_">Se</span>);<span class="hljs-keyword">break</span>&#125;<span class="hljs-keyword">if</span>(<span class="hljs-number">64</span>&amp;b)&#123;(t.<span class="hljs-property">msg</span>=<span class="hljs-string">&#x27;invalid literal/length code&#x27;</span>),(a.<span class="hljs-property">mode</span>=<span class="hljs-title class_">Le</span>);<span class="hljs-keyword">break</span>&#125;(a.<span class="hljs-property">extra</span>=<span class="hljs-number">15</span>&amp;b),(a.<span class="hljs-property">mode</span>=<span class="hljs-number">16201</span>);<span class="hljs-keyword">case</span> <span class="hljs-number">16201</span>:<span class="hljs-keyword">if</span>(a.<span class="hljs-property">extra</span>)&#123;<span class="hljs-keyword">for</span>(R=a.<span class="hljs-property">extra</span>;d&lt;R;)&#123;<span class="hljs-keyword">if</span>(<span class="hljs-number">0</span>===o)<span class="hljs-keyword">break</span> t;o--,(h+=i[s++]&lt;&lt;d),(d+=<span class="hljs-number">8</span>)&#125;(a.<span class="hljs-property">length</span>+=h&amp;((<span class="hljs-number">1</span>&lt;&lt;a.<span class="hljs-property">extra</span>)-<span class="hljs-number">1</span>)),(h&gt;&gt;&gt;=a.<span class="hljs-property">extra</span>),(d-=a.<span class="hljs-property">extra</span>),(a.<span class="hljs-property">back</span>+=a.<span class="hljs-property">extra</span>)&#125;(a.<span class="hljs-property">was</span>=a.<span class="hljs-property">length</span>),(a.<span class="hljs-property">mode</span>=<span class="hljs-number">16202</span>);<span class="hljs-keyword">case</span> <span class="hljs-number">16202</span>:<span class="hljs-keyword">for</span>(;(z=a.<span class="hljs-property">distcode</span>[h&amp;((<span class="hljs-number">1</span>&lt;&lt;a.<span class="hljs-property">distbits</span>)-<span class="hljs-number">1</span>)]),(m=z&gt;&gt;&gt;<span class="hljs-number">24</span>),(b=(z&gt;&gt;&gt;<span class="hljs-number">16</span>)&amp;<span class="hljs-number">255</span>),(g=<span class="hljs-number">65535</span>&amp;z),!(m&lt;=d);)&#123;<span class="hljs-keyword">if</span>(<span class="hljs-number">0</span>===o)<span class="hljs-keyword">break</span> t;o--,(h+=i[s++]&lt;&lt;d),(d+=<span class="hljs-number">8</span>)&#125;<span class="hljs-keyword">if</span>(<span class="hljs-number">0</span>==(<span class="hljs-number">240</span>&amp;b))&#123;<span class="hljs-keyword">for</span>(p=m,k=b,v=g;(z=a.<span class="hljs-property">distcode</span>[v+((h&amp;((<span class="hljs-number">1</span>&lt;&lt;(p+k))-<span class="hljs-number">1</span>))&gt;&gt;p)]),(m=z&gt;&gt;&gt;<span class="hljs-number">24</span>),(b=(z&gt;&gt;&gt;<span class="hljs-number">16</span>)&amp;<span class="hljs-number">255</span>),(g=<span class="hljs-number">65535</span>&amp;z),!(p+m&lt;=d);)&#123;<span class="hljs-keyword">if</span>(<span class="hljs-number">0</span>===o)<span class="hljs-keyword">break</span> t;o--,(h+=i[s++]&lt;&lt;d),(d+=<span class="hljs-number">8</span>)&#125;(h&gt;&gt;&gt;=p),(d-=p),(a.<span class="hljs-property">back</span>+=p)&#125;<span class="hljs-keyword">if</span>(((h&gt;&gt;&gt;=m),(d-=m),(a.<span class="hljs-property">back</span>+=m),<span class="hljs-number">64</span>&amp;b))&#123;(t.<span class="hljs-property">msg</span>=<span class="hljs-string">&#x27;invalid distance code&#x27;</span>),(a.<span class="hljs-property">mode</span>=<span class="hljs-title class_">Le</span>);<span class="hljs-keyword">break</span>&#125;(a.<span class="hljs-property">offset</span>=g),(a.<span class="hljs-property">extra</span>=<span class="hljs-number">15</span>&amp;b),(a.<span class="hljs-property">mode</span>=<span class="hljs-number">16203</span>);<span class="hljs-keyword">case</span> <span class="hljs-number">16203</span>:<span class="hljs-keyword">if</span>(a.<span class="hljs-property">extra</span>)&#123;<span class="hljs-keyword">for</span>(R=a.<span class="hljs-property">extra</span>;d&lt;R;)&#123;<span class="hljs-keyword">if</span>(<span class="hljs-number">0</span>===o)<span class="hljs-keyword">break</span> t;o--,(h+=i[s++]&lt;&lt;d),(d+=<span class="hljs-number">8</span>)&#125;(a.<span class="hljs-property">offset</span>+=h&amp;((<span class="hljs-number">1</span>&lt;&lt;a.<span class="hljs-property">extra</span>)-<span class="hljs-number">1</span>)),(h&gt;&gt;&gt;=a.<span class="hljs-property">extra</span>),(d-=a.<span class="hljs-property">extra</span>),(a.<span class="hljs-property">back</span>+=a.<span class="hljs-property">extra</span>)&#125;<span class="hljs-keyword">if</span>(a.<span class="hljs-property">offset</span>&gt;a.<span class="hljs-property">dmax</span>)&#123;(t.<span class="hljs-property">msg</span>=<span class="hljs-string">&#x27;invalid distance too far back&#x27;</span>),(a.<span class="hljs-property">mode</span>=<span class="hljs-title class_">Le</span>);<span class="hljs-keyword">break</span>&#125;a.<span class="hljs-property">mode</span>=<span class="hljs-number">16204</span>;<span class="hljs-keyword">case</span> <span class="hljs-number">16204</span>:<span class="hljs-keyword">if</span>(<span class="hljs-number">0</span>===l)<span class="hljs-keyword">break</span> t;<span class="hljs-keyword">if</span>(((c=f-l),a.<span class="hljs-property">offset</span>&gt;c))&#123;<span class="hljs-keyword">if</span>(((c=a.<span class="hljs-property">offset</span>-c),c&gt;a.<span class="hljs-property">whave</span>&amp;&amp;a.<span class="hljs-property">sane</span>))&#123;(t.<span class="hljs-property">msg</span>=<span class="hljs-string">&#x27;invalid distance too far back&#x27;</span>),(a.<span class="hljs-property">mode</span>=<span class="hljs-title class_">Le</span>);<span class="hljs-keyword">break</span>&#125;c&gt;a.<span class="hljs-property">wnext</span>?((c-=a.<span class="hljs-property">wnext</span>),(u=a.<span class="hljs-property">wsize</span>-c)):(u=a.<span class="hljs-property">wnext</span>-c),c&gt;a.<span class="hljs-property">length</span>&amp;&amp;(c=a.<span class="hljs-property">length</span>),(w=a.<span class="hljs-property">window</span>)&#125;<span class="hljs-title function_">else</span>(w=n),(u=r-a.<span class="hljs-property">offset</span>),(c=a.<span class="hljs-property">length</span>);c&gt;l&amp;&amp;(c=l),(l-=c),(a.<span class="hljs-property">length</span>-=c);<span class="hljs-keyword">do</span>&#123;n[r++]=w[u++]&#125;<span class="hljs-keyword">while</span>(--c);<span class="hljs-number">0</span>===a.<span class="hljs-property">length</span>&amp;&amp;(a.<span class="hljs-property">mode</span>=<span class="hljs-title class_">Ie</span>);<span class="hljs-keyword">break</span>;<span class="hljs-keyword">case</span> <span class="hljs-number">16205</span>:<span class="hljs-keyword">if</span>(<span class="hljs-number">0</span>===l)<span class="hljs-keyword">break</span> t;(n[r++]=a.<span class="hljs-property">length</span>),l--,(a.<span class="hljs-property">mode</span>=<span class="hljs-title class_">Ie</span>);<span class="hljs-keyword">break</span>;<span class="hljs-keyword">case</span> <span class="hljs-title class_">Fe</span>:<span class="hljs-keyword">if</span>(a.<span class="hljs-property">wrap</span>)&#123;<span class="hljs-keyword">for</span>(;d&lt;<span class="hljs-number">32</span>;)&#123;<span class="hljs-keyword">if</span>(<span class="hljs-number">0</span>===o)<span class="hljs-keyword">break</span> t;o--,(h|=i[s++]&lt;&lt;d),(d+=<span class="hljs-number">8</span>)&#125;<span class="hljs-keyword">if</span>(((f-=l),(t.<span class="hljs-property">total_out</span>+=f),(a.<span class="hljs-property">total</span>+=f),<span class="hljs-number">4</span>&amp;a.<span class="hljs-property">wrap</span>&amp;&amp;f&amp;&amp;(t.<span class="hljs-property">adler</span>=a.<span class="hljs-property">check</span>=a.<span class="hljs-property">flags</span>?<span class="hljs-title function_">H</span>(a.<span class="hljs-property">check</span>,n,f,r-f):<span class="hljs-title function_">C</span>(a.<span class="hljs-property">check</span>,n,f,r-f)),(f=l),<span class="hljs-number">4</span>&amp;a.<span class="hljs-property">wrap</span>&amp;&amp;(a.<span class="hljs-property">flags</span>?<span class="hljs-attr">h</span>:<span class="hljs-title class_">Ne</span>(h))!==a.<span class="hljs-property">check</span>))&#123;(t.<span class="hljs-property">msg</span>=<span class="hljs-string">&#x27;incorrect data check&#x27;</span>),(a.<span class="hljs-property">mode</span>=<span class="hljs-title class_">Le</span>);<span class="hljs-keyword">break</span>&#125;(h=<span class="hljs-number">0</span>),(d=<span class="hljs-number">0</span>)&#125;a.<span class="hljs-property">mode</span>=<span class="hljs-number">16207</span>;<span class="hljs-keyword">case</span> <span class="hljs-number">16207</span>:<span class="hljs-keyword">if</span>(a.<span class="hljs-property">wrap</span>&amp;&amp;a.<span class="hljs-property">flags</span>)&#123;<span class="hljs-keyword">for</span>(;d&lt;<span class="hljs-number">32</span>;)&#123;<span class="hljs-keyword">if</span>(<span class="hljs-number">0</span>===o)<span class="hljs-keyword">break</span> t;o--,(h+=i[s++]&lt;&lt;d),(d+=<span class="hljs-number">8</span>)&#125;<span class="hljs-keyword">if</span>(<span class="hljs-number">4</span>&amp;a.<span class="hljs-property">wrap</span>&amp;&amp;h!==(<span class="hljs-number">4294967295</span>&amp;a.<span class="hljs-property">total</span>))&#123;(t.<span class="hljs-property">msg</span>=<span class="hljs-string">&#x27;incorrect length check&#x27;</span>),(a.<span class="hljs-property">mode</span>=<span class="hljs-title class_">Le</span>);<span class="hljs-keyword">break</span>&#125;(h=<span class="hljs-number">0</span>),(d=<span class="hljs-number">0</span>)&#125;a.<span class="hljs-property">mode</span>=<span class="hljs-number">16208</span>;<span class="hljs-keyword">case</span> <span class="hljs-number">16208</span>:x=ve;<span class="hljs-keyword">break</span> t;<span class="hljs-keyword">case</span> <span class="hljs-title class_">Le</span>:x=ze;<span class="hljs-keyword">break</span> t;<span class="hljs-keyword">case</span> <span class="hljs-number">16210</span>:<span class="hljs-keyword">return</span> <span class="hljs-title class_">Ae</span>;<span class="hljs-attr">default</span>:<span class="hljs-keyword">return</span> xe&#125;<span class="hljs-keyword">return</span>((t.<span class="hljs-property">next_out</span>=r),(t.<span class="hljs-property">avail_out</span>=l),(t.<span class="hljs-property">next_in</span>=s),(t.<span class="hljs-property">avail_in</span>=o),(a.<span class="hljs-property">hold</span>=h),(a.<span class="hljs-property">bits</span>=d),(a.<span class="hljs-property">wsize</span>||(f!==t.<span class="hljs-property">avail_out</span>&amp;&amp;a.<span class="hljs-property">mode</span>&lt;<span class="hljs-title class_">Le</span>&amp;&amp;(a.<span class="hljs-property">mode</span>&lt;<span class="hljs-title class_">Fe</span>||e!==be)))&amp;&amp;<span class="hljs-title class_">We</span>(t,t.<span class="hljs-property">output</span>,t.<span class="hljs-property">next_out</span>,f-t.<span class="hljs-property">avail_out</span>),(_-=t.<span class="hljs-property">avail_in</span>),(f-=t.<span class="hljs-property">avail_out</span>),(t.<span class="hljs-property">total_in</span>+=_),(t.<span class="hljs-property">total_out</span>+=f),(a.<span class="hljs-property">total</span>+=f),<span class="hljs-number">4</span>&amp;a.<span class="hljs-property">wrap</span>&amp;&amp;f&amp;&amp;(t.<span class="hljs-property">adler</span>=a.<span class="hljs-property">check</span>=a.<span class="hljs-property">flags</span>?<span class="hljs-title function_">H</span>(a.<span class="hljs-property">check</span>,n,f,t.<span class="hljs-property">next_out</span>-f):<span class="hljs-title function_">C</span>(a.<span class="hljs-property">check</span>,n,f,t.<span class="hljs-property">next_out</span>-f)),(t.<span class="hljs-property">data_type</span>=a.<span class="hljs-property">bits</span>+(a.<span class="hljs-property">last</span>?<span class="hljs-number">64</span>:<span class="hljs-number">0</span>)+(a.<span class="hljs-property">mode</span>===<span class="hljs-title class_">Se</span>?<span class="hljs-number">128</span>:<span class="hljs-number">0</span>)+(a.<span class="hljs-property">mode</span>===<span class="hljs-title class_">Oe</span>||a.<span class="hljs-property">mode</span>===<span class="hljs-title class_">Te</span>?<span class="hljs-number">256</span>:<span class="hljs-number">0</span>)),((<span class="hljs-number">0</span>===_&amp;&amp;<span class="hljs-number">0</span>===f)||e===be)&amp;&amp;x===ke&amp;&amp;(x=<span class="hljs-title class_">Ee</span>),x)&#125;,<span class="hljs-attr">inflateEnd</span>:<span class="hljs-function">(<span class="hljs-params">t</span>)=&gt;</span>&#123;<span class="hljs-keyword">if</span>(<span class="hljs-title class_">Ce</span>(t))<span class="hljs-keyword">return</span> xe;<span class="hljs-keyword">let</span> e=t.<span class="hljs-property">state</span>;<span class="hljs-keyword">return</span> e.<span class="hljs-property">window</span>&amp;&amp;(e.<span class="hljs-property">window</span>=<span class="hljs-literal">null</span>),(t.<span class="hljs-property">state</span>=<span class="hljs-literal">null</span>),ke&#125;,<span class="hljs-attr">inflateGetHeader</span>:<span class="hljs-function">(<span class="hljs-params">t,e</span>)=&gt;</span>&#123;<span class="hljs-keyword">if</span>(<span class="hljs-title class_">Ce</span>(t))<span class="hljs-keyword">return</span> xe;<span class="hljs-keyword">const</span> a=t.<span class="hljs-property">state</span>;<span class="hljs-keyword">return</span> <span class="hljs-number">0</span>==(<span class="hljs-number">2</span>&amp;a.<span class="hljs-property">wrap</span>)?<span class="hljs-attr">xe</span>:((a.<span class="hljs-property">head</span>=e),(e.<span class="hljs-property">done</span>=!<span class="hljs-number">1</span>),ke)&#125;,<span class="hljs-attr">inflateSetDictionary</span>:<span class="hljs-function">(<span class="hljs-params">t,e</span>)=&gt;</span>&#123;<span class="hljs-keyword">const</span> a=e.<span class="hljs-property">length</span>;<span class="hljs-keyword">let</span> i,n,s;<span class="hljs-keyword">return</span> <span class="hljs-title class_">Ce</span>(t)?<span class="hljs-attr">xe</span>:((i=t.<span class="hljs-property">state</span>),<span class="hljs-number">0</span>!==i.<span class="hljs-property">wrap</span>&amp;&amp;i.<span class="hljs-property">mode</span>!==<span class="hljs-title class_">Ue</span>?<span class="hljs-attr">xe</span>:i.<span class="hljs-property">mode</span>===<span class="hljs-title class_">Ue</span>&amp;&amp;((n=<span class="hljs-number">1</span>),(n=<span class="hljs-title function_">C</span>(n,e,a,<span class="hljs-number">0</span>)),n!==i.<span class="hljs-property">check</span>)?<span class="hljs-attr">ze</span>:((s=<span class="hljs-title class_">We</span>(t,e,a,a)),s?((i.<span class="hljs-property">mode</span>=<span class="hljs-number">16210</span>),<span class="hljs-title class_">Ae</span>):((i.<span class="hljs-property">havedict</span>=<span class="hljs-number">1</span>),ke)))&#125;,<span class="hljs-attr">inflateInfo</span>:<span class="hljs-string">&#x27;pako inflate (from Nodeca project)&#x27;</span>&#125;;<span class="hljs-keyword">var</span> <span class="hljs-title class_">Je</span>=<span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)&#123;(<span class="hljs-variable language_">this</span>.<span class="hljs-property">text</span>=<span class="hljs-number">0</span>),(<span class="hljs-variable language_">this</span>.<span class="hljs-property">time</span>=<span class="hljs-number">0</span>),(<span class="hljs-variable language_">this</span>.<span class="hljs-property">xflags</span>=<span class="hljs-number">0</span>),(<span class="hljs-variable language_">this</span>.<span class="hljs-property">os</span>=<span class="hljs-number">0</span>),(<span class="hljs-variable language_">this</span>.<span class="hljs-property">extra</span>=<span class="hljs-literal">null</span>),(<span class="hljs-variable language_">this</span>.<span class="hljs-property">extra_len</span>=<span class="hljs-number">0</span>),(<span class="hljs-variable language_">this</span>.<span class="hljs-property">name</span>=<span class="hljs-string">&#x27;&#x27;</span>),(<span class="hljs-variable language_">this</span>.<span class="hljs-property">comment</span>=<span class="hljs-string">&#x27;&#x27;</span>),(<span class="hljs-variable language_">this</span>.<span class="hljs-property">hcrc</span>=<span class="hljs-number">0</span>),(<span class="hljs-variable language_">this</span>.<span class="hljs-property">done</span>=!<span class="hljs-number">1</span>)&#125;;<span class="hljs-keyword">const</span> <span class="hljs-title class_">Qe</span>=<span class="hljs-title class_">Object</span>.<span class="hljs-property"><span class="hljs-keyword">prototype</span></span>.<span class="hljs-property">toString</span>,&#123;<span class="hljs-attr">Z_NO_FLUSH</span>:<span class="hljs-title class_">Ve</span>,<span class="hljs-attr">Z_FINISH</span>:$e,<span class="hljs-attr">Z_OK</span>:ta,<span class="hljs-attr">Z_STREAM_END</span>:ea,<span class="hljs-attr">Z_NEED_DICT</span>:aa,<span class="hljs-attr">Z_STREAM_ERROR</span>:ia,<span class="hljs-attr">Z_DATA_ERROR</span>:na,<span class="hljs-attr">Z_MEM_ERROR</span>:sa&#125;=K;<span class="hljs-keyword">function</span> <span class="hljs-title function_">ra</span>(<span class="hljs-params">t</span>)&#123;<span class="hljs-variable language_">this</span>.<span class="hljs-property">options</span>=<span class="hljs-title function_">jt</span>(&#123;<span class="hljs-attr">chunkSize</span>:<span class="hljs-number">65536</span>,<span class="hljs-attr">windowBits</span>:<span class="hljs-number">15</span>,<span class="hljs-attr">to</span>:<span class="hljs-string">&#x27;&#x27;</span>&#125;,t||&#123;&#125;);<span class="hljs-keyword">const</span> e=<span class="hljs-variable language_">this</span>.<span class="hljs-property">options</span>;e.<span class="hljs-property">raw</span>&amp;&amp;e.<span class="hljs-property">windowBits</span>&gt;=<span class="hljs-number">0</span>&amp;&amp;e.<span class="hljs-property">windowBits</span>&lt;<span class="hljs-number">16</span>&amp;&amp;((e.<span class="hljs-property">windowBits</span>=-e.<span class="hljs-property">windowBits</span>),<span class="hljs-number">0</span>===e.<span class="hljs-property">windowBits</span>&amp;&amp;(e.<span class="hljs-property">windowBits</span>=-<span class="hljs-number">15</span>)),!(e.<span class="hljs-property">windowBits</span>&gt;=<span class="hljs-number">0</span>&amp;&amp;e.<span class="hljs-property">windowBits</span>&lt;<span class="hljs-number">16</span>)||(t&amp;&amp;t.<span class="hljs-property">windowBits</span>)||(e.<span class="hljs-property">windowBits</span>+=<span class="hljs-number">32</span>),e.<span class="hljs-property">windowBits</span>&gt;<span class="hljs-number">15</span>&amp;&amp;e.<span class="hljs-property">windowBits</span>&lt;<span class="hljs-number">48</span>&amp;&amp;<span class="hljs-number">0</span>==(<span class="hljs-number">15</span>&amp;e.<span class="hljs-property">windowBits</span>)&amp;&amp;(e.<span class="hljs-property">windowBits</span>|=<span class="hljs-number">15</span>),(<span class="hljs-variable language_">this</span>.<span class="hljs-property">err</span>=<span class="hljs-number">0</span>),(<span class="hljs-variable language_">this</span>.<span class="hljs-property">msg</span>=<span class="hljs-string">&#x27;&#x27;</span>),(<span class="hljs-variable language_">this</span>.<span class="hljs-property">ended</span>=!<span class="hljs-number">1</span>),(<span class="hljs-variable language_">this</span>.<span class="hljs-property">chunks</span>=[]),(<span class="hljs-variable language_">this</span>.<span class="hljs-property">strm</span>=<span class="hljs-keyword">new</span> <span class="hljs-title function_">qt</span>()),(<span class="hljs-variable language_">this</span>.<span class="hljs-property">strm</span>.<span class="hljs-property">avail_out</span>=<span class="hljs-number">0</span>);<span class="hljs-keyword">let</span> a=qe.<span class="hljs-title function_">inflateInit2</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">strm</span>,e.<span class="hljs-property">windowBits</span>);<span class="hljs-keyword">if</span>(a!==ta)<span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Error</span>(j[a]);<span class="hljs-keyword">if</span>(((<span class="hljs-variable language_">this</span>.<span class="hljs-property">header</span>=<span class="hljs-keyword">new</span> <span class="hljs-title class_">Je</span>()),qe.<span class="hljs-title function_">inflateGetHeader</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">strm</span>,<span class="hljs-variable language_">this</span>.<span class="hljs-property">header</span>),e.<span class="hljs-property">dictionary</span>&amp;&amp;(<span class="hljs-string">&#x27;string&#x27;</span>==<span class="hljs-keyword">typeof</span> e.<span class="hljs-property">dictionary</span>?(e.<span class="hljs-property">dictionary</span>=<span class="hljs-title class_">Gt</span>(e.<span class="hljs-property">dictionary</span>)):<span class="hljs-string">&#x27;[object ArrayBuffer]&#x27;</span>===<span class="hljs-title class_">Qe</span>.<span class="hljs-title function_">call</span>(e.<span class="hljs-property">dictionary</span>)&amp;&amp;(e.<span class="hljs-property">dictionary</span>=<span class="hljs-keyword">new</span> <span class="hljs-title class_">Uint8Array</span>(e.<span class="hljs-property">dictionary</span>)),e.<span class="hljs-property">raw</span>&amp;&amp;((a=qe.<span class="hljs-title function_">inflateSetDictionary</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">strm</span>,e.<span class="hljs-property">dictionary</span>)),a!==ta))))<span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Error</span>(j[a]);&#125;<span class="hljs-keyword">function</span> <span class="hljs-title function_">oa</span>(<span class="hljs-params">t,e</span>)&#123;<span class="hljs-keyword">const</span> a=<span class="hljs-keyword">new</span> <span class="hljs-title function_">ra</span>(e);<span class="hljs-keyword">if</span>((a.<span class="hljs-title function_">push</span>(t),a.<span class="hljs-property">err</span>))<span class="hljs-keyword">throw</span> a.<span class="hljs-property">msg</span>||j[a.<span class="hljs-property">err</span>];<span class="hljs-keyword">return</span> a.<span class="hljs-property">result</span>&#125;(ra.<span class="hljs-property"><span class="hljs-keyword">prototype</span></span>.<span class="hljs-property">push</span>=<span class="hljs-keyword">function</span>(<span class="hljs-params">t,e</span>)&#123;<span class="hljs-keyword">const</span> a=<span class="hljs-variable language_">this</span>.<span class="hljs-property">strm</span>,i=<span class="hljs-variable language_">this</span>.<span class="hljs-property">options</span>.<span class="hljs-property">chunkSize</span>,n=<span class="hljs-variable language_">this</span>.<span class="hljs-property">options</span>.<span class="hljs-property">dictionary</span>;<span class="hljs-keyword">let</span> s,r,o;<span class="hljs-keyword">if</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">ended</span>)<span class="hljs-keyword">return</span>!<span class="hljs-number">1</span>;<span class="hljs-keyword">for</span>(r=e===~~e?<span class="hljs-attr">e</span>:!<span class="hljs-number">0</span>===e?<span class="hljs-attr">$e</span>:<span class="hljs-title class_">Ve</span>,<span class="hljs-string">&#x27;[object ArrayBuffer]&#x27;</span>===<span class="hljs-title class_">Qe</span>.<span class="hljs-title function_">call</span>(t)?(a.<span class="hljs-property">input</span>=<span class="hljs-keyword">new</span> <span class="hljs-title class_">Uint8Array</span>(t)):(a.<span class="hljs-property">input</span>=t),a.<span class="hljs-property">next_in</span>=<span class="hljs-number">0</span>,a.<span class="hljs-property">avail_in</span>=a.<span class="hljs-property">input</span>.<span class="hljs-property">length</span>;)&#123;<span class="hljs-keyword">for</span>(<span class="hljs-number">0</span>===a.<span class="hljs-property">avail_out</span>&amp;&amp;((a.<span class="hljs-property">output</span>=<span class="hljs-keyword">new</span> <span class="hljs-title class_">Uint8Array</span>(i)),(a.<span class="hljs-property">next_out</span>=<span class="hljs-number">0</span>),(a.<span class="hljs-property">avail_out</span>=i)),s=qe.<span class="hljs-title function_">inflate</span>(a,r),s===aa&amp;&amp;n&amp;&amp;((s=qe.<span class="hljs-title function_">inflateSetDictionary</span>(a,n)),s===ta?(s=qe.<span class="hljs-title function_">inflate</span>(a,r)):s===na&amp;&amp;(s=aa));a.<span class="hljs-property">avail_in</span>&gt;<span class="hljs-number">0</span>&amp;&amp;s===ea&amp;&amp;a.<span class="hljs-property">state</span>.<span class="hljs-property">wrap</span>&gt;<span class="hljs-number">0</span>&amp;&amp;<span class="hljs-number">0</span>!==t[a.<span class="hljs-property">next_in</span>];)qe.<span class="hljs-title function_">inflateReset</span>(a),(s=qe.<span class="hljs-title function_">inflate</span>(a,r));<span class="hljs-keyword">switch</span>(s)&#123;<span class="hljs-keyword">case</span> <span class="hljs-attr">ia</span>:<span class="hljs-keyword">case</span> <span class="hljs-attr">na</span>:<span class="hljs-keyword">case</span> <span class="hljs-attr">aa</span>:<span class="hljs-keyword">case</span> <span class="hljs-attr">sa</span>:<span class="hljs-keyword">return</span> <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">onEnd</span>(s),(<span class="hljs-variable language_">this</span>.<span class="hljs-property">ended</span>=!<span class="hljs-number">0</span>),!<span class="hljs-number">1</span>&#125;<span class="hljs-keyword">if</span>(((o=a.<span class="hljs-property">avail_out</span>),a.<span class="hljs-property">next_out</span>&amp;&amp;(<span class="hljs-number">0</span>===a.<span class="hljs-property">avail_out</span>||s===ea)))<span class="hljs-keyword">if</span>(<span class="hljs-string">&#x27;string&#x27;</span>===<span class="hljs-variable language_">this</span>.<span class="hljs-property">options</span>.<span class="hljs-property">to</span>)&#123;<span class="hljs-keyword">let</span> t=<span class="hljs-title class_">Wt</span>(a.<span class="hljs-property">output</span>,a.<span class="hljs-property">next_out</span>),e=a.<span class="hljs-property">next_out</span>-t,n=<span class="hljs-title class_">Xt</span>(a.<span class="hljs-property">output</span>,t);(a.<span class="hljs-property">next_out</span>=e),(a.<span class="hljs-property">avail_out</span>=i-e),e&amp;&amp;a.<span class="hljs-property">output</span>.<span class="hljs-title function_">set</span>(a.<span class="hljs-property">output</span>.<span class="hljs-title function_">subarray</span>(t,t+e),<span class="hljs-number">0</span>),<span class="hljs-variable language_">this</span>.<span class="hljs-title function_">onData</span>(n)&#125;<span class="hljs-keyword">else</span> <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">onData</span>(a.<span class="hljs-property">output</span>.<span class="hljs-property">length</span>===a.<span class="hljs-property">next_out</span>?a.<span class="hljs-property">output</span>:a.<span class="hljs-property">output</span>.<span class="hljs-title function_">subarray</span>(<span class="hljs-number">0</span>,a.<span class="hljs-property">next_out</span>));<span class="hljs-keyword">if</span>(s!==ta||<span class="hljs-number">0</span>!==o)&#123;<span class="hljs-keyword">if</span>(s===ea)<span class="hljs-keyword">return</span>((s=qe.<span class="hljs-title function_">inflateEnd</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">strm</span>)),<span class="hljs-variable language_">this</span>.<span class="hljs-title function_">onEnd</span>(s),(<span class="hljs-variable language_">this</span>.<span class="hljs-property">ended</span>=!<span class="hljs-number">0</span>),!<span class="hljs-number">0</span>);<span class="hljs-keyword">if</span>(<span class="hljs-number">0</span>===a.<span class="hljs-property">avail_in</span>)<span class="hljs-keyword">break</span>&#125;&#125;<span class="hljs-keyword">return</span>!<span class="hljs-number">0</span>&#125;),(ra.<span class="hljs-property"><span class="hljs-keyword">prototype</span></span>.<span class="hljs-property">onData</span>=<span class="hljs-keyword">function</span>(<span class="hljs-params">t</span>)&#123;<span class="hljs-variable language_">this</span>.<span class="hljs-property">chunks</span>.<span class="hljs-title function_">push</span>(t)&#125;),(ra.<span class="hljs-property"><span class="hljs-keyword">prototype</span></span>.<span class="hljs-property">onEnd</span>=<span class="hljs-keyword">function</span>(<span class="hljs-params">t</span>)&#123;t===ta&amp;&amp;(<span class="hljs-string">&#x27;string&#x27;</span>===<span class="hljs-variable language_">this</span>.<span class="hljs-property">options</span>.<span class="hljs-property">to</span>?(<span class="hljs-variable language_">this</span>.<span class="hljs-property">result</span>=<span class="hljs-variable language_">this</span>.<span class="hljs-property">chunks</span>.<span class="hljs-title function_">join</span>(<span class="hljs-string">&#x27;&#x27;</span>)):(<span class="hljs-variable language_">this</span>.<span class="hljs-property">result</span>=<span class="hljs-title class_">Kt</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">chunks</span>))),(<span class="hljs-variable language_">this</span>.<span class="hljs-property">chunks</span>=[]),(<span class="hljs-variable language_">this</span>.<span class="hljs-property">err</span>=t),(<span class="hljs-variable language_">this</span>.<span class="hljs-property">msg</span>=<span class="hljs-variable language_">this</span>.<span class="hljs-property">strm</span>.<span class="hljs-property">msg</span>)&#125;);<span class="hljs-keyword">var</span> la=&#123;<span class="hljs-title class_">Inflate</span>:ra,<span class="hljs-attr">inflate</span>:oa,<span class="hljs-attr">inflateRaw</span>:<span class="hljs-keyword">function</span>(<span class="hljs-params">t,e</span>)&#123;<span class="hljs-keyword">return</span>((e=e||&#123;&#125;).<span class="hljs-property">raw</span>=!<span class="hljs-number">0</span>),<span class="hljs-title function_">oa</span>(t,e)&#125;,<span class="hljs-attr">ungzip</span>:oa,<span class="hljs-attr">constants</span>:K&#125;;<span class="hljs-keyword">const</span>&#123;<span class="hljs-title class_">Deflate</span>:ha,<span class="hljs-attr">deflate</span>:da,<span class="hljs-attr">deflateRaw</span>:_a,<span class="hljs-attr">gzip</span>:fa&#125;=le,&#123;<span class="hljs-title class_">Inflate</span>:ca,<span class="hljs-attr">inflate</span>:ua,<span class="hljs-attr">inflateRaw</span>:wa,<span class="hljs-attr">ungzip</span>:ma&#125;=la;<span class="hljs-keyword">var</span> ba=ha,ga=da,pa=_a,ka=fa,va=ca,ya=ua,xa=wa,za=ma,<span class="hljs-title class_">Aa</span>=K,<span class="hljs-title class_">Ea</span>=&#123;<span class="hljs-title class_">Deflate</span>:ba,<span class="hljs-attr">deflate</span>:ga,<span class="hljs-attr">deflateRaw</span>:pa,<span class="hljs-attr">gzip</span>:ka,<span class="hljs-title class_">Inflate</span>:va,<span class="hljs-attr">inflate</span>:ya,<span class="hljs-attr">inflateRaw</span>:xa,<span class="hljs-attr">ungzip</span>:za,<span class="hljs-attr">constants</span>:<span class="hljs-title class_">Aa</span>&#125;;(t.<span class="hljs-property">Deflate</span>=ba),(t.<span class="hljs-property">Inflate</span>=va),(t.<span class="hljs-property">constants</span>=<span class="hljs-title class_">Aa</span>),(t.<span class="hljs-property">default</span>=<span class="hljs-title class_">Ea</span>),(t.<span class="hljs-property">deflate</span>=ga),(t.<span class="hljs-property">deflateRaw</span>=pa),(t.<span class="hljs-property">gzip</span>=ka),(t.<span class="hljs-property">inflate</span>=ya),(t.<span class="hljs-property">inflateRaw</span>=xa),(t.<span class="hljs-property">ungzip</span>=za),<span class="hljs-title class_">Object</span>.<span class="hljs-title function_">defineProperty</span>(t,<span class="hljs-string">&#x27;__esModule&#x27;</span>,&#123;<span class="hljs-attr">value</span>:!<span class="hljs-number">0</span>&#125;)&#125;);<span class="hljs-keyword">var</span> <span class="hljs-variable constant_">UPNG</span>=(<span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)&#123;<span class="hljs-keyword">var</span> _bin=&#123;<span class="hljs-attr">nextZero</span>:<span class="hljs-keyword">function</span>(<span class="hljs-params">data,p</span>)&#123;<span class="hljs-keyword">while</span>(data[p]!=<span class="hljs-number">0</span>)p++;<span class="hljs-keyword">return</span> p&#125;,<span class="hljs-attr">readUshort</span>:<span class="hljs-keyword">function</span>(<span class="hljs-params">buff,p</span>)&#123;<span class="hljs-keyword">return</span>(buff[p]&lt;&lt;<span class="hljs-number">8</span>)|buff[p+<span class="hljs-number">1</span>]&#125;,<span class="hljs-attr">writeUshort</span>:<span class="hljs-keyword">function</span>(<span class="hljs-params">buff,p,n</span>)&#123;buff[p]=(n&gt;&gt;<span class="hljs-number">8</span>)&amp;<span class="hljs-number">255</span>;buff[p+<span class="hljs-number">1</span>]=n&amp;<span class="hljs-number">255</span>&#125;,<span class="hljs-attr">readUint</span>:<span class="hljs-keyword">function</span>(<span class="hljs-params">buff,p</span>)&#123;<span class="hljs-keyword">return</span>(buff[p]*(<span class="hljs-number">256</span>*<span class="hljs-number">256</span>*<span class="hljs-number">256</span>)+((buff[p+<span class="hljs-number">1</span>]&lt;&lt;<span class="hljs-number">16</span>)|(buff[p+<span class="hljs-number">2</span>]&lt;&lt;<span class="hljs-number">8</span>)|buff[p+<span class="hljs-number">3</span>]))&#125;,<span class="hljs-attr">writeUint</span>:<span class="hljs-keyword">function</span>(<span class="hljs-params">buff,p,n</span>)&#123;buff[p]=(n&gt;&gt;<span class="hljs-number">24</span>)&amp;<span class="hljs-number">255</span>;buff[p+<span class="hljs-number">1</span>]=(n&gt;&gt;<span class="hljs-number">16</span>)&amp;<span class="hljs-number">255</span>;buff[p+<span class="hljs-number">2</span>]=(n&gt;&gt;<span class="hljs-number">8</span>)&amp;<span class="hljs-number">255</span>;buff[p+<span class="hljs-number">3</span>]=n&amp;<span class="hljs-number">255</span>&#125;,<span class="hljs-attr">readASCII</span>:<span class="hljs-keyword">function</span>(<span class="hljs-params">buff,p,l</span>)&#123;<span class="hljs-keyword">var</span> s=<span class="hljs-string">&#x27;&#x27;</span>;<span class="hljs-keyword">for</span>(<span class="hljs-keyword">var</span> i=<span class="hljs-number">0</span>;i&lt;l;i++)s+=<span class="hljs-title class_">String</span>.<span class="hljs-title function_">fromCharCode</span>(buff[p+i]);<span class="hljs-keyword">return</span> s&#125;,<span class="hljs-attr">writeASCII</span>:<span class="hljs-keyword">function</span>(<span class="hljs-params">data,p,s</span>)&#123;<span class="hljs-keyword">for</span>(<span class="hljs-keyword">var</span> i=<span class="hljs-number">0</span>;i&lt;s.<span class="hljs-property">length</span>;i++)data[p+i]=s.<span class="hljs-title function_">charCodeAt</span>(i)&#125;,<span class="hljs-attr">readBytes</span>:<span class="hljs-keyword">function</span>(<span class="hljs-params">buff,p,l</span>)&#123;<span class="hljs-keyword">var</span> arr=[];<span class="hljs-keyword">for</span>(<span class="hljs-keyword">var</span> i=<span class="hljs-number">0</span>;i&lt;l;i++)arr.<span class="hljs-title function_">push</span>(buff[p+i]);<span class="hljs-keyword">return</span> arr&#125;,<span class="hljs-attr">pad</span>:<span class="hljs-keyword">function</span>(<span class="hljs-params">n</span>)&#123;<span class="hljs-keyword">return</span> n.<span class="hljs-property">length</span>&lt;<span class="hljs-number">2</span>?<span class="hljs-string">&#x27;0&#x27;</span>+<span class="hljs-attr">n</span>:n&#125;,<span class="hljs-attr">readUTF8</span>:<span class="hljs-keyword">function</span>(<span class="hljs-params">buff,p,l</span>)&#123;<span class="hljs-keyword">var</span> s=<span class="hljs-string">&#x27;&#x27;</span>,ns;<span class="hljs-keyword">for</span>(<span class="hljs-keyword">var</span> i=<span class="hljs-number">0</span>;i&lt;l;i++)s+=<span class="hljs-string">&#x27;%&#x27;</span>+_bin.<span class="hljs-title function_">pad</span>(buff[p+i].<span class="hljs-title function_">toString</span>(<span class="hljs-number">16</span>));<span class="hljs-keyword">try</span>&#123;ns=<span class="hljs-built_in">decodeURIComponent</span>(s)&#125;<span class="hljs-keyword">catch</span>(e)&#123;<span class="hljs-keyword">return</span> _bin.<span class="hljs-title function_">readASCII</span>(buff,p,l)&#125;<span class="hljs-keyword">return</span> ns&#125;&#125;;<span class="hljs-keyword">function</span> <span class="hljs-title function_">toRGBA8</span>(<span class="hljs-params">out</span>)&#123;<span class="hljs-keyword">var</span> w=out.<span class="hljs-property">width</span>,h=out.<span class="hljs-property">height</span>;<span class="hljs-keyword">if</span>(out.<span class="hljs-property">tabs</span>.<span class="hljs-property">acTL</span>==<span class="hljs-literal">null</span>)<span class="hljs-keyword">return</span>[<span class="hljs-title function_">decodeImage</span>(out.<span class="hljs-property">data</span>,w,h,out).<span class="hljs-property">buffer</span>];<span class="hljs-keyword">var</span> frms=[];<span class="hljs-keyword">if</span>(out.<span class="hljs-property">frames</span>[<span class="hljs-number">0</span>].<span class="hljs-property">data</span>==<span class="hljs-literal">null</span>)out.<span class="hljs-property">frames</span>[<span class="hljs-number">0</span>].<span class="hljs-property">data</span>=out.<span class="hljs-property">data</span>;<span class="hljs-keyword">var</span> len=w*h*<span class="hljs-number">4</span>,img=<span class="hljs-keyword">new</span> <span class="hljs-title class_">Uint8Array</span>(len),empty=<span class="hljs-keyword">new</span> <span class="hljs-title class_">Uint8Array</span>(len),prev=<span class="hljs-keyword">new</span> <span class="hljs-title class_">Uint8Array</span>(len);<span class="hljs-keyword">for</span>(<span class="hljs-keyword">var</span> i=<span class="hljs-number">0</span>;i&lt;out.<span class="hljs-property">frames</span>.<span class="hljs-property">length</span>;i++)&#123;<span class="hljs-keyword">var</span> frm=out.<span class="hljs-property">frames</span>[i];<span class="hljs-keyword">var</span> fx=frm.<span class="hljs-property">rect</span>.<span class="hljs-property">x</span>,fy=frm.<span class="hljs-property">rect</span>.<span class="hljs-property">y</span>,fw=frm.<span class="hljs-property">rect</span>.<span class="hljs-property">width</span>,fh=frm.<span class="hljs-property">rect</span>.<span class="hljs-property">height</span>;<span class="hljs-keyword">var</span> fdata=<span class="hljs-title function_">decodeImage</span>(frm.<span class="hljs-property">data</span>,fw,fh,out);<span class="hljs-keyword">if</span>(i!=<span class="hljs-number">0</span>)<span class="hljs-keyword">for</span>(<span class="hljs-keyword">var</span> j=<span class="hljs-number">0</span>;j&lt;len;j++)prev[j]=img[j];<span class="hljs-keyword">if</span>(frm.<span class="hljs-property">blend</span>==<span class="hljs-number">0</span>)<span class="hljs-title function_">_copyTile</span>(fdata,fw,fh,img,w,h,fx,fy,<span class="hljs-number">0</span>);<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(frm.<span class="hljs-property">blend</span>==<span class="hljs-number">1</span>)<span class="hljs-title function_">_copyTile</span>(fdata,fw,fh,img,w,h,fx,fy,<span class="hljs-number">1</span>);frms.<span class="hljs-title function_">push</span>(img.<span class="hljs-property">buffer</span>.<span class="hljs-title function_">slice</span>(<span class="hljs-number">0</span>));<span class="hljs-keyword">if</span>(frm.<span class="hljs-property">dispose</span>==<span class="hljs-number">0</span>)&#123;&#125;<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(frm.<span class="hljs-property">dispose</span>==<span class="hljs-number">1</span>)<span class="hljs-title function_">_copyTile</span>(empty,fw,fh,img,w,h,fx,fy,<span class="hljs-number">0</span>);<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(frm.<span class="hljs-property">dispose</span>==<span class="hljs-number">2</span>)<span class="hljs-keyword">for</span>(<span class="hljs-keyword">var</span> j=<span class="hljs-number">0</span>;j&lt;len;j++)img[j]=prev[j]&#125;<span class="hljs-keyword">return</span> frms&#125;<span class="hljs-keyword">function</span> <span class="hljs-title function_">decodeImage</span>(<span class="hljs-params">data,w,h,out</span>)&#123;<span class="hljs-keyword">var</span> area=w*h,bpp=<span class="hljs-title function_">_getBPP</span>(out);<span class="hljs-keyword">var</span> bpl=<span class="hljs-title class_">Math</span>.<span class="hljs-title function_">ceil</span>((w*bpp)/<span class="hljs-number">8</span>);<span class="hljs-keyword">var</span> bf=<span class="hljs-keyword">new</span> <span class="hljs-title class_">Uint8Array</span>(area*<span class="hljs-number">4</span>),bf32=<span class="hljs-keyword">new</span> <span class="hljs-title class_">Uint32Array</span>(bf.<span class="hljs-property">buffer</span>);<span class="hljs-keyword">var</span> ctype=out.<span class="hljs-property">ctype</span>,depth=out.<span class="hljs-property">depth</span>;<span class="hljs-keyword">var</span> rs=_bin.<span class="hljs-property">readUshort</span>;<span class="hljs-keyword">var</span> time=<span class="hljs-title class_">Date</span>.<span class="hljs-title function_">now</span>();<span class="hljs-keyword">if</span>(ctype==<span class="hljs-number">6</span>)&#123;<span class="hljs-keyword">var</span> qarea=area&lt;&lt;<span class="hljs-number">2</span>;<span class="hljs-keyword">if</span>(depth==<span class="hljs-number">8</span>)<span class="hljs-keyword">for</span>(<span class="hljs-keyword">var</span> i=<span class="hljs-number">0</span>;i&lt;qarea;i+=<span class="hljs-number">4</span>)&#123;bf[i]=data[i];bf[i+<span class="hljs-number">1</span>]=data[i+<span class="hljs-number">1</span>];bf[i+<span class="hljs-number">2</span>]=data[i+<span class="hljs-number">2</span>];bf[i+<span class="hljs-number">3</span>]=data[i+<span class="hljs-number">3</span>]&#125;<span class="hljs-keyword">if</span>(depth==<span class="hljs-number">16</span>)<span class="hljs-keyword">for</span>(<span class="hljs-keyword">var</span> i=<span class="hljs-number">0</span>;i&lt;qarea;i++)&#123;bf[i]=data[i&lt;&lt;<span class="hljs-number">1</span>]&#125;&#125;<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(ctype==<span class="hljs-number">2</span>)&#123;<span class="hljs-keyword">var</span> ts=out.<span class="hljs-property">tabs</span>[<span class="hljs-string">&#x27;tRNS&#x27;</span>];<span class="hljs-keyword">if</span>(ts==<span class="hljs-literal">null</span>)&#123;<span class="hljs-keyword">if</span>(depth==<span class="hljs-number">8</span>)<span class="hljs-keyword">for</span>(<span class="hljs-keyword">var</span> i=<span class="hljs-number">0</span>;i&lt;area;i++)&#123;<span class="hljs-keyword">var</span> ti=i*<span class="hljs-number">3</span>;bf32[i]=(<span class="hljs-number">255</span>&lt;&lt;<span class="hljs-number">24</span>)|(data[ti+<span class="hljs-number">2</span>]&lt;&lt;<span class="hljs-number">16</span>)|(data[ti+<span class="hljs-number">1</span>]&lt;&lt;<span class="hljs-number">8</span>)|data[ti]&#125;<span class="hljs-keyword">if</span>(depth==<span class="hljs-number">16</span>)<span class="hljs-keyword">for</span>(<span class="hljs-keyword">var</span> i=<span class="hljs-number">0</span>;i&lt;area;i++)&#123;<span class="hljs-keyword">var</span> ti=i*<span class="hljs-number">6</span>;bf32[i]=(<span class="hljs-number">255</span>&lt;&lt;<span class="hljs-number">24</span>)|(data[ti+<span class="hljs-number">4</span>]&lt;&lt;<span class="hljs-number">16</span>)|(data[ti+<span class="hljs-number">2</span>]&lt;&lt;<span class="hljs-number">8</span>)|data[ti]&#125;&#125;<span class="hljs-keyword">else</span>&#123;<span class="hljs-keyword">var</span> tr=ts[<span class="hljs-number">0</span>],tg=ts[<span class="hljs-number">1</span>],tb=ts[<span class="hljs-number">2</span>];<span class="hljs-keyword">if</span>(depth==<span class="hljs-number">8</span>)<span class="hljs-keyword">for</span>(<span class="hljs-keyword">var</span> i=<span class="hljs-number">0</span>;i&lt;area;i++)&#123;<span class="hljs-keyword">var</span> qi=i&lt;&lt;<span class="hljs-number">2</span>,ti=i*<span class="hljs-number">3</span>;bf32[i]=(<span class="hljs-number">255</span>&lt;&lt;<span class="hljs-number">24</span>)|(data[ti+<span class="hljs-number">2</span>]&lt;&lt;<span class="hljs-number">16</span>)|(data[ti+<span class="hljs-number">1</span>]&lt;&lt;<span class="hljs-number">8</span>)|data[ti];<span class="hljs-keyword">if</span>(data[ti]==tr&amp;&amp;data[ti+<span class="hljs-number">1</span>]==tg&amp;&amp;data[ti+<span class="hljs-number">2</span>]==tb)bf[qi+<span class="hljs-number">3</span>]=<span class="hljs-number">0</span>&#125;<span class="hljs-keyword">if</span>(depth==<span class="hljs-number">16</span>)<span class="hljs-keyword">for</span>(<span class="hljs-keyword">var</span> i=<span class="hljs-number">0</span>;i&lt;area;i++)&#123;<span class="hljs-keyword">var</span> qi=i&lt;&lt;<span class="hljs-number">2</span>,ti=i*<span class="hljs-number">6</span>;bf32[i]=(<span class="hljs-number">255</span>&lt;&lt;<span class="hljs-number">24</span>)|(data[ti+<span class="hljs-number">4</span>]&lt;&lt;<span class="hljs-number">16</span>)|(data[ti+<span class="hljs-number">2</span>]&lt;&lt;<span class="hljs-number">8</span>)|data[ti];<span class="hljs-keyword">if</span>(<span class="hljs-title function_">rs</span>(data,ti)==tr&amp;&amp;<span class="hljs-title function_">rs</span>(data,ti+<span class="hljs-number">2</span>)==tg&amp;&amp;<span class="hljs-title function_">rs</span>(data,ti+<span class="hljs-number">4</span>)==tb)bf[qi+<span class="hljs-number">3</span>]=<span class="hljs-number">0</span>&#125;&#125;&#125;<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(ctype==<span class="hljs-number">3</span>)&#123;<span class="hljs-keyword">var</span> p=out.<span class="hljs-property">tabs</span>[<span class="hljs-string">&#x27;PLTE&#x27;</span>],ap=out.<span class="hljs-property">tabs</span>[<span class="hljs-string">&#x27;tRNS&#x27;</span>],tl=ap?ap.<span class="hljs-property">length</span>:<span class="hljs-number">0</span>;<span class="hljs-keyword">if</span>(depth==<span class="hljs-number">1</span>)<span class="hljs-keyword">for</span>(<span class="hljs-keyword">var</span> y=<span class="hljs-number">0</span>;y&lt;h;y++)&#123;<span class="hljs-keyword">var</span> s0=y*bpl,t0=y*w;<span class="hljs-keyword">for</span>(<span class="hljs-keyword">var</span> i=<span class="hljs-number">0</span>;i&lt;w;i++)&#123;<span class="hljs-keyword">var</span> qi=(t0+i)&lt;&lt;<span class="hljs-number">2</span>,j=(data[s0+(i&gt;&gt;<span class="hljs-number">3</span>)]&gt;&gt;(<span class="hljs-number">7</span>-((i&amp;<span class="hljs-number">7</span>)&lt;&lt;<span class="hljs-number">0</span>)))&amp;<span class="hljs-number">1</span>,cj=<span class="hljs-number">3</span>*j;bf[qi]=p[cj];bf[qi+<span class="hljs-number">1</span>]=p[cj+<span class="hljs-number">1</span>];bf[qi+<span class="hljs-number">2</span>]=p[cj+<span class="hljs-number">2</span>];bf[qi+<span class="hljs-number">3</span>]=j&lt;tl?ap[j]:<span class="hljs-number">255</span>&#125;&#125;<span class="hljs-keyword">if</span>(depth==<span class="hljs-number">2</span>)<span class="hljs-keyword">for</span>(<span class="hljs-keyword">var</span> y=<span class="hljs-number">0</span>;y&lt;h;y++)&#123;<span class="hljs-keyword">var</span> s0=y*bpl,t0=y*w;<span class="hljs-keyword">for</span>(<span class="hljs-keyword">var</span> i=<span class="hljs-number">0</span>;i&lt;w;i++)&#123;<span class="hljs-keyword">var</span> qi=(t0+i)&lt;&lt;<span class="hljs-number">2</span>,j=(data[s0+(i&gt;&gt;<span class="hljs-number">2</span>)]&gt;&gt;(<span class="hljs-number">6</span>-((i&amp;<span class="hljs-number">3</span>)&lt;&lt;<span class="hljs-number">1</span>)))&amp;<span class="hljs-number">3</span>,cj=<span class="hljs-number">3</span>*j;bf[qi]=p[cj];bf[qi+<span class="hljs-number">1</span>]=p[cj+<span class="hljs-number">1</span>];bf[qi+<span class="hljs-number">2</span>]=p[cj+<span class="hljs-number">2</span>];bf[qi+<span class="hljs-number">3</span>]=j&lt;tl?ap[j]:<span class="hljs-number">255</span>&#125;&#125;<span class="hljs-keyword">if</span>(depth==<span class="hljs-number">4</span>)<span class="hljs-keyword">for</span>(<span class="hljs-keyword">var</span> y=<span class="hljs-number">0</span>;y&lt;h;y++)&#123;<span class="hljs-keyword">var</span> s0=y*bpl,t0=y*w;<span class="hljs-keyword">for</span>(<span class="hljs-keyword">var</span> i=<span class="hljs-number">0</span>;i&lt;w;i++)&#123;<span class="hljs-keyword">var</span> qi=(t0+i)&lt;&lt;<span class="hljs-number">2</span>,j=(data[s0+(i&gt;&gt;<span class="hljs-number">1</span>)]&gt;&gt;(<span class="hljs-number">4</span>-((i&amp;<span class="hljs-number">1</span>)&lt;&lt;<span class="hljs-number">2</span>)))&amp;<span class="hljs-number">15</span>,cj=<span class="hljs-number">3</span>*j;bf[qi]=p[cj];bf[qi+<span class="hljs-number">1</span>]=p[cj+<span class="hljs-number">1</span>];bf[qi+<span class="hljs-number">2</span>]=p[cj+<span class="hljs-number">2</span>];bf[qi+<span class="hljs-number">3</span>]=j&lt;tl?ap[j]:<span class="hljs-number">255</span>&#125;&#125;<span class="hljs-keyword">if</span>(depth==<span class="hljs-number">8</span>)<span class="hljs-keyword">for</span>(<span class="hljs-keyword">var</span> i=<span class="hljs-number">0</span>;i&lt;area;i++)&#123;<span class="hljs-keyword">var</span> qi=i&lt;&lt;<span class="hljs-number">2</span>,j=data[i],cj=<span class="hljs-number">3</span>*j;bf[qi]=p[cj];bf[qi+<span class="hljs-number">1</span>]=p[cj+<span class="hljs-number">1</span>];bf[qi+<span class="hljs-number">2</span>]=p[cj+<span class="hljs-number">2</span>];bf[qi+<span class="hljs-number">3</span>]=j&lt;tl?ap[j]:<span class="hljs-number">255</span>&#125;&#125;<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(ctype==<span class="hljs-number">4</span>)&#123;<span class="hljs-keyword">if</span>(depth==<span class="hljs-number">8</span>)<span class="hljs-keyword">for</span>(<span class="hljs-keyword">var</span> i=<span class="hljs-number">0</span>;i&lt;area;i++)&#123;<span class="hljs-keyword">var</span> qi=i&lt;&lt;<span class="hljs-number">2</span>,di=i&lt;&lt;<span class="hljs-number">1</span>,gr=data[di];bf[qi]=gr;bf[qi+<span class="hljs-number">1</span>]=gr;bf[qi+<span class="hljs-number">2</span>]=gr;bf[qi+<span class="hljs-number">3</span>]=data[di+<span class="hljs-number">1</span>]&#125;<span class="hljs-keyword">if</span>(depth==<span class="hljs-number">16</span>)<span class="hljs-keyword">for</span>(<span class="hljs-keyword">var</span> i=<span class="hljs-number">0</span>;i&lt;area;i++)&#123;<span class="hljs-keyword">var</span> qi=i&lt;&lt;<span class="hljs-number">2</span>,di=i&lt;&lt;<span class="hljs-number">2</span>,gr=data[di];bf[qi]=gr;bf[qi+<span class="hljs-number">1</span>]=gr;bf[qi+<span class="hljs-number">2</span>]=gr;bf[qi+<span class="hljs-number">3</span>]=data[di+<span class="hljs-number">2</span>]&#125;&#125;<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(ctype==<span class="hljs-number">0</span>)&#123;<span class="hljs-keyword">var</span> tr=out.<span class="hljs-property">tabs</span>[<span class="hljs-string">&#x27;tRNS&#x27;</span>]?out.<span class="hljs-property">tabs</span>[<span class="hljs-string">&#x27;tRNS&#x27;</span>]:-<span class="hljs-number">1</span>;<span class="hljs-keyword">for</span>(<span class="hljs-keyword">var</span> y=<span class="hljs-number">0</span>;y&lt;h;y++)&#123;<span class="hljs-keyword">var</span> off=y*bpl,to=y*w;<span class="hljs-keyword">if</span>(depth==<span class="hljs-number">1</span>)<span class="hljs-keyword">for</span>(<span class="hljs-keyword">var</span> x=<span class="hljs-number">0</span>;x&lt;w;x++)&#123;<span class="hljs-keyword">var</span> gr=<span class="hljs-number">255</span>*((data[off+(x&gt;&gt;&gt;<span class="hljs-number">3</span>)]&gt;&gt;&gt;(<span class="hljs-number">7</span>-(x&amp;<span class="hljs-number">7</span>)))&amp;<span class="hljs-number">1</span>),al=gr==tr*<span class="hljs-number">255</span>?<span class="hljs-number">0</span>:<span class="hljs-number">255</span>;bf32[to+x]=(al&lt;&lt;<span class="hljs-number">24</span>)|(gr&lt;&lt;<span class="hljs-number">16</span>)|(gr&lt;&lt;<span class="hljs-number">8</span>)|gr&#125;<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(depth==<span class="hljs-number">2</span>)<span class="hljs-keyword">for</span>(<span class="hljs-keyword">var</span> x=<span class="hljs-number">0</span>;x&lt;w;x++)&#123;<span class="hljs-keyword">var</span> gr=<span class="hljs-number">85</span>*((data[off+(x&gt;&gt;&gt;<span class="hljs-number">2</span>)]&gt;&gt;&gt;(<span class="hljs-number">6</span>-((x&amp;<span class="hljs-number">3</span>)&lt;&lt;<span class="hljs-number">1</span>)))&amp;<span class="hljs-number">3</span>),al=gr==tr*<span class="hljs-number">85</span>?<span class="hljs-number">0</span>:<span class="hljs-number">255</span>;bf32[to+x]=(al&lt;&lt;<span class="hljs-number">24</span>)|(gr&lt;&lt;<span class="hljs-number">16</span>)|(gr&lt;&lt;<span class="hljs-number">8</span>)|gr&#125;<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(depth==<span class="hljs-number">4</span>)<span class="hljs-keyword">for</span>(<span class="hljs-keyword">var</span> x=<span class="hljs-number">0</span>;x&lt;w;x++)&#123;<span class="hljs-keyword">var</span> gr=<span class="hljs-number">17</span>*((data[off+(x&gt;&gt;&gt;<span class="hljs-number">1</span>)]&gt;&gt;&gt;(<span class="hljs-number">4</span>-((x&amp;<span class="hljs-number">1</span>)&lt;&lt;<span class="hljs-number">2</span>)))&amp;<span class="hljs-number">15</span>),al=gr==tr*<span class="hljs-number">17</span>?<span class="hljs-number">0</span>:<span class="hljs-number">255</span>;bf32[to+x]=(al&lt;&lt;<span class="hljs-number">24</span>)|(gr&lt;&lt;<span class="hljs-number">16</span>)|(gr&lt;&lt;<span class="hljs-number">8</span>)|gr&#125;<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(depth==<span class="hljs-number">8</span>)<span class="hljs-keyword">for</span>(<span class="hljs-keyword">var</span> x=<span class="hljs-number">0</span>;x&lt;w;x++)&#123;<span class="hljs-keyword">var</span> gr=data[off+x],al=gr==tr?<span class="hljs-number">0</span>:<span class="hljs-number">255</span>;bf32[to+x]=(al&lt;&lt;<span class="hljs-number">24</span>)|(gr&lt;&lt;<span class="hljs-number">16</span>)|(gr&lt;&lt;<span class="hljs-number">8</span>)|gr&#125;<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(depth==<span class="hljs-number">16</span>)<span class="hljs-keyword">for</span>(<span class="hljs-keyword">var</span> x=<span class="hljs-number">0</span>;x&lt;w;x++)&#123;<span class="hljs-keyword">var</span> gr=data[off+(x&lt;&lt;<span class="hljs-number">1</span>)],al=<span class="hljs-title function_">rs</span>(data,off+(x&lt;&lt;<span class="hljs-number">1</span>))==tr?<span class="hljs-number">0</span>:<span class="hljs-number">255</span>;bf32[to+x]=(al&lt;&lt;<span class="hljs-number">24</span>)|(gr&lt;&lt;<span class="hljs-number">16</span>)|(gr&lt;&lt;<span class="hljs-number">8</span>)|gr&#125;&#125;&#125;<span class="hljs-keyword">return</span> bf&#125;<span class="hljs-keyword">function</span> <span class="hljs-title function_">decode</span>(<span class="hljs-params">buff</span>)&#123;<span class="hljs-keyword">var</span> data=<span class="hljs-keyword">new</span> <span class="hljs-title class_">Uint8Array</span>(buff),offset=<span class="hljs-number">8</span>,bin=_bin,rUs=bin.<span class="hljs-property">readUshort</span>,rUi=bin.<span class="hljs-property">readUint</span>;<span class="hljs-keyword">var</span> out=&#123;<span class="hljs-attr">tabs</span>:&#123;&#125;,<span class="hljs-attr">frames</span>:[]&#125;;<span class="hljs-keyword">var</span> dd=<span class="hljs-keyword">new</span> <span class="hljs-title class_">Uint8Array</span>(data.<span class="hljs-property">length</span>),doff=<span class="hljs-number">0</span>;<span class="hljs-keyword">var</span> fd,foff=<span class="hljs-number">0</span>;<span class="hljs-keyword">var</span> mgck=[<span class="hljs-number">0x89</span>,<span class="hljs-number">0x50</span>,<span class="hljs-number">0x4e</span>,<span class="hljs-number">0x47</span>,<span class="hljs-number">0x0d</span>,<span class="hljs-number">0x0a</span>,<span class="hljs-number">0x1a</span>,<span class="hljs-number">0x0a</span>];<span class="hljs-keyword">for</span>(<span class="hljs-keyword">var</span> i=<span class="hljs-number">0</span>;i&lt;<span class="hljs-number">8</span>;i++)<span class="hljs-keyword">if</span>(data[i]!=mgck[i])<span class="hljs-keyword">throw</span><span class="hljs-string">&#x27;The input is not a PNG file!&#x27;</span>;<span class="hljs-keyword">while</span>(offset&lt;data.<span class="hljs-property">length</span>)&#123;<span class="hljs-keyword">var</span> len=bin.<span class="hljs-title function_">readUint</span>(data,offset);offset+=<span class="hljs-number">4</span>;<span class="hljs-keyword">var</span> type=bin.<span class="hljs-title function_">readASCII</span>(data,offset,<span class="hljs-number">4</span>);offset+=<span class="hljs-number">4</span>;<span class="hljs-keyword">if</span>(type==<span class="hljs-string">&#x27;IHDR&#x27;</span>)&#123;<span class="hljs-title function_">_IHDR</span>(data,offset,out)&#125;<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(type==<span class="hljs-string">&#x27;iCCP&#x27;</span>)&#123;<span class="hljs-keyword">var</span> off=offset;<span class="hljs-keyword">while</span>(data[off]!=<span class="hljs-number">0</span>)off++;<span class="hljs-keyword">var</span> nam=bin.<span class="hljs-title function_">readASCII</span>(data,offset,off-offset);<span class="hljs-keyword">var</span> cpr=data[off+<span class="hljs-number">1</span>];<span class="hljs-keyword">var</span> fil=data.<span class="hljs-title function_">slice</span>(off+<span class="hljs-number">2</span>,offset+len);<span class="hljs-keyword">var</span> res=<span class="hljs-literal">null</span>;<span class="hljs-keyword">try</span>&#123;res=<span class="hljs-title function_">_inflate</span>(fil)&#125;<span class="hljs-keyword">catch</span>(e)&#123;res=<span class="hljs-title function_">inflateRaw</span>(fil)&#125;out.<span class="hljs-property">tabs</span>[type]=res&#125;<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(type==<span class="hljs-string">&#x27;CgBI&#x27;</span>)&#123;out.<span class="hljs-property">tabs</span>[type]=data.<span class="hljs-title function_">slice</span>(offset,offset+<span class="hljs-number">4</span>)&#125;<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(type==<span class="hljs-string">&#x27;IDAT&#x27;</span>)&#123;<span class="hljs-keyword">for</span>(<span class="hljs-keyword">var</span> i=<span class="hljs-number">0</span>;i&lt;len;i++)dd[doff+i]=data[offset+i];doff+=len&#125;<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(type==<span class="hljs-string">&#x27;acTL&#x27;</span>)&#123;out.<span class="hljs-property">tabs</span>[type]=&#123;<span class="hljs-attr">num_frames</span>:<span class="hljs-title function_">rUi</span>(data,offset),<span class="hljs-attr">num_plays</span>:<span class="hljs-title function_">rUi</span>(data,offset+<span class="hljs-number">4</span>)&#125;;fd=<span class="hljs-keyword">new</span> <span class="hljs-title class_">Uint8Array</span>(data.<span class="hljs-property">length</span>)&#125;<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(type==<span class="hljs-string">&#x27;fcTL&#x27;</span>)&#123;<span class="hljs-keyword">if</span>(foff!=<span class="hljs-number">0</span>)&#123;<span class="hljs-keyword">var</span> fr=out.<span class="hljs-property">frames</span>[out.<span class="hljs-property">frames</span>.<span class="hljs-property">length</span>-<span class="hljs-number">1</span>];fr.<span class="hljs-property">data</span>=<span class="hljs-title function_">_decompress</span>(out,fd.<span class="hljs-title function_">slice</span>(<span class="hljs-number">0</span>,foff),fr.<span class="hljs-property">rect</span>.<span class="hljs-property">width</span>,fr.<span class="hljs-property">rect</span>.<span class="hljs-property">height</span>);foff=<span class="hljs-number">0</span>&#125;<span class="hljs-keyword">var</span> rct=&#123;<span class="hljs-attr">x</span>:<span class="hljs-title function_">rUi</span>(data,offset+<span class="hljs-number">12</span>),<span class="hljs-attr">y</span>:<span class="hljs-title function_">rUi</span>(data,offset+<span class="hljs-number">16</span>),<span class="hljs-attr">width</span>:<span class="hljs-title function_">rUi</span>(data,offset+<span class="hljs-number">4</span>),<span class="hljs-attr">height</span>:<span class="hljs-title function_">rUi</span>(data,offset+<span class="hljs-number">8</span>)&#125;;<span class="hljs-keyword">var</span> del=<span class="hljs-title function_">rUs</span>(data,offset+<span class="hljs-number">22</span>);del=<span class="hljs-title function_">rUs</span>(data,offset+<span class="hljs-number">20</span>)/(del==<span class="hljs-number">0</span>?<span class="hljs-number">100</span>:del);<span class="hljs-keyword">var</span> frm=&#123;<span class="hljs-attr">rect</span>:rct,<span class="hljs-attr">delay</span>:<span class="hljs-title class_">Math</span>.<span class="hljs-title function_">round</span>(del*<span class="hljs-number">1000</span>),<span class="hljs-attr">dispose</span>:data[offset+<span class="hljs-number">24</span>],<span class="hljs-attr">blend</span>:data[offset+<span class="hljs-number">25</span>]&#125;;out.<span class="hljs-property">frames</span>.<span class="hljs-title function_">push</span>(frm)&#125;<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(type==<span class="hljs-string">&#x27;fdAT&#x27;</span>)&#123;<span class="hljs-keyword">for</span>(<span class="hljs-keyword">var</span> i=<span class="hljs-number">0</span>;i&lt;len-<span class="hljs-number">4</span>;i++)fd[foff+i]=data[offset+i+<span class="hljs-number">4</span>];foff+=len-<span class="hljs-number">4</span>&#125;<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(type==<span class="hljs-string">&#x27;pHYs&#x27;</span>)&#123;out.<span class="hljs-property">tabs</span>[type]=[bin.<span class="hljs-title function_">readUint</span>(data,offset),bin.<span class="hljs-title function_">readUint</span>(data,offset+<span class="hljs-number">4</span>),data[offset+<span class="hljs-number">8</span>]]&#125;<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(type==<span class="hljs-string">&#x27;cHRM&#x27;</span>)&#123;out.<span class="hljs-property">tabs</span>[type]=[];<span class="hljs-keyword">for</span>(<span class="hljs-keyword">var</span> i=<span class="hljs-number">0</span>;i&lt;<span class="hljs-number">8</span>;i++)out.<span class="hljs-property">tabs</span>[type].<span class="hljs-title function_">push</span>(bin.<span class="hljs-title function_">readUint</span>(data,offset+i*<span class="hljs-number">4</span>))&#125;<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(type==<span class="hljs-string">&#x27;tEXt&#x27;</span>||type==<span class="hljs-string">&#x27;zTXt&#x27;</span>)&#123;<span class="hljs-keyword">if</span>(out.<span class="hljs-property">tabs</span>[type]==<span class="hljs-literal">null</span>)out.<span class="hljs-property">tabs</span>[type]=&#123;&#125;;<span class="hljs-keyword">var</span> nz=bin.<span class="hljs-title function_">nextZero</span>(data,offset);<span class="hljs-keyword">var</span> keyw=bin.<span class="hljs-title function_">readASCII</span>(data,offset,nz-offset);<span class="hljs-keyword">var</span> text,tl=offset+len-nz-<span class="hljs-number">1</span>;<span class="hljs-keyword">if</span>(type==<span class="hljs-string">&#x27;tEXt&#x27;</span>)text=bin.<span class="hljs-title function_">readASCII</span>(data,nz+<span class="hljs-number">1</span>,tl);<span class="hljs-keyword">else</span>&#123;<span class="hljs-keyword">var</span> bfr=<span class="hljs-title function_">_inflate</span>(data.<span class="hljs-title function_">slice</span>(nz+<span class="hljs-number">2</span>,nz+<span class="hljs-number">2</span>+tl));text=bin.<span class="hljs-title function_">readUTF8</span>(bfr,<span class="hljs-number">0</span>,bfr.<span class="hljs-property">length</span>)&#125;out.<span class="hljs-property">tabs</span>[type][keyw]=text&#125;<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(type==<span class="hljs-string">&#x27;iTXt&#x27;</span>)&#123;<span class="hljs-keyword">if</span>(out.<span class="hljs-property">tabs</span>[type]==<span class="hljs-literal">null</span>)out.<span class="hljs-property">tabs</span>[type]=&#123;&#125;;<span class="hljs-keyword">var</span> nz=<span class="hljs-number">0</span>,off=offset;nz=bin.<span class="hljs-title function_">nextZero</span>(data,off);<span class="hljs-keyword">var</span> keyw=bin.<span class="hljs-title function_">readASCII</span>(data,off,nz-off);off=nz+<span class="hljs-number">1</span>;<span class="hljs-keyword">var</span> cflag=data[off],cmeth=data[off+<span class="hljs-number">1</span>];off+=<span class="hljs-number">2</span>;nz=bin.<span class="hljs-title function_">nextZero</span>(data,off);<span class="hljs-keyword">var</span> ltag=bin.<span class="hljs-title function_">readASCII</span>(data,off,nz-off);off=nz+<span class="hljs-number">1</span>;nz=bin.<span class="hljs-title function_">nextZero</span>(data,off);<span class="hljs-keyword">var</span> tkeyw=bin.<span class="hljs-title function_">readUTF8</span>(data,off,nz-off);off=nz+<span class="hljs-number">1</span>;<span class="hljs-keyword">var</span> text,tl=len-(off-offset);<span class="hljs-keyword">if</span>(cflag==<span class="hljs-number">0</span>)text=bin.<span class="hljs-title function_">readUTF8</span>(data,off,tl);<span class="hljs-keyword">else</span>&#123;<span class="hljs-keyword">var</span> bfr=<span class="hljs-title function_">_inflate</span>(data.<span class="hljs-title function_">slice</span>(off,off+tl));text=bin.<span class="hljs-title function_">readUTF8</span>(bfr,<span class="hljs-number">0</span>,bfr.<span class="hljs-property">length</span>)&#125;out.<span class="hljs-property">tabs</span>[type][keyw]=text&#125;<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(type==<span class="hljs-string">&#x27;PLTE&#x27;</span>)&#123;out.<span class="hljs-property">tabs</span>[type]=bin.<span class="hljs-title function_">readBytes</span>(data,offset,len)&#125;<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(type==<span class="hljs-string">&#x27;hIST&#x27;</span>)&#123;<span class="hljs-keyword">var</span> pl=out.<span class="hljs-property">tabs</span>[<span class="hljs-string">&#x27;PLTE&#x27;</span>].<span class="hljs-property">length</span>/<span class="hljs-number">3</span>;out.<span class="hljs-property">tabs</span>[type]=[];<span class="hljs-keyword">for</span>(<span class="hljs-keyword">var</span> i=<span class="hljs-number">0</span>;i&lt;pl;i++)out.<span class="hljs-property">tabs</span>[type].<span class="hljs-title function_">push</span>(<span class="hljs-title function_">rUs</span>(data,offset+i*<span class="hljs-number">2</span>))&#125;<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(type==<span class="hljs-string">&#x27;tRNS&#x27;</span>)&#123;<span class="hljs-keyword">if</span>(out.<span class="hljs-property">ctype</span>==<span class="hljs-number">3</span>)out.<span class="hljs-property">tabs</span>[type]=bin.<span class="hljs-title function_">readBytes</span>(data,offset,len);<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(out.<span class="hljs-property">ctype</span>==<span class="hljs-number">0</span>)out.<span class="hljs-property">tabs</span>[type]=<span class="hljs-title function_">rUs</span>(data,offset);<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(out.<span class="hljs-property">ctype</span>==<span class="hljs-number">2</span>)out.<span class="hljs-property">tabs</span>[type]=[<span class="hljs-title function_">rUs</span>(data,offset),<span class="hljs-title function_">rUs</span>(data,offset+<span class="hljs-number">2</span>),<span class="hljs-title function_">rUs</span>(data,offset+<span class="hljs-number">4</span>)]&#125;<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(type==<span class="hljs-string">&#x27;gAMA&#x27;</span>)out.<span class="hljs-property">tabs</span>[type]=bin.<span class="hljs-title function_">readUint</span>(data,offset)/<span class="hljs-number">100000</span>;<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(type==<span class="hljs-string">&#x27;sRGB&#x27;</span>)out.<span class="hljs-property">tabs</span>[type]=data[offset];<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(type==<span class="hljs-string">&#x27;bKGD&#x27;</span>)&#123;<span class="hljs-keyword">if</span>(out.<span class="hljs-property">ctype</span>==<span class="hljs-number">0</span>||out.<span class="hljs-property">ctype</span>==<span class="hljs-number">4</span>)out.<span class="hljs-property">tabs</span>[type]=[<span class="hljs-title function_">rUs</span>(data,offset)];<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(out.<span class="hljs-property">ctype</span>==<span class="hljs-number">2</span>||out.<span class="hljs-property">ctype</span>==<span class="hljs-number">6</span>)out.<span class="hljs-property">tabs</span>[type]=[<span class="hljs-title function_">rUs</span>(data,offset),<span class="hljs-title function_">rUs</span>(data,offset+<span class="hljs-number">2</span>),<span class="hljs-title function_">rUs</span>(data,offset+<span class="hljs-number">4</span>)];<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(out.<span class="hljs-property">ctype</span>==<span class="hljs-number">3</span>)out.<span class="hljs-property">tabs</span>[type]=data[offset]&#125;<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(type==<span class="hljs-string">&#x27;IEND&#x27;</span>)&#123;<span class="hljs-keyword">break</span>&#125;offset+=len;<span class="hljs-keyword">var</span> crc=bin.<span class="hljs-title function_">readUint</span>(data,offset);offset+=<span class="hljs-number">4</span>&#125;<span class="hljs-keyword">if</span>(foff!=<span class="hljs-number">0</span>)&#123;<span class="hljs-keyword">var</span> fr=out.<span class="hljs-property">frames</span>[out.<span class="hljs-property">frames</span>.<span class="hljs-property">length</span>-<span class="hljs-number">1</span>];fr.<span class="hljs-property">data</span>=<span class="hljs-title function_">_decompress</span>(out,fd.<span class="hljs-title function_">slice</span>(<span class="hljs-number">0</span>,foff),fr.<span class="hljs-property">rect</span>.<span class="hljs-property">width</span>,fr.<span class="hljs-property">rect</span>.<span class="hljs-property">height</span>)&#125;out.<span class="hljs-property">data</span>=<span class="hljs-title function_">_decompress</span>(out,dd,out.<span class="hljs-property">width</span>,out.<span class="hljs-property">height</span>);<span class="hljs-keyword">delete</span> out.<span class="hljs-property">compress</span>;<span class="hljs-keyword">delete</span> out.<span class="hljs-property">interlace</span>;<span class="hljs-keyword">delete</span> out.<span class="hljs-property">filter</span>;<span class="hljs-keyword">return</span> out&#125;<span class="hljs-keyword">function</span> <span class="hljs-title function_">_decompress</span>(<span class="hljs-params">out,dd,w,h</span>)&#123;<span class="hljs-keyword">var</span> time=<span class="hljs-title class_">Date</span>.<span class="hljs-title function_">now</span>();<span class="hljs-keyword">var</span> bpp=<span class="hljs-title function_">_getBPP</span>(out),bpl=<span class="hljs-title class_">Math</span>.<span class="hljs-title function_">ceil</span>((w*bpp)/<span class="hljs-number">8</span>),buff=<span class="hljs-keyword">new</span> <span class="hljs-title class_">Uint8Array</span>((bpl+<span class="hljs-number">1</span>+out.<span class="hljs-property">interlace</span>)*h);<span class="hljs-keyword">if</span>(out.<span class="hljs-property">tabs</span>[<span class="hljs-string">&#x27;CgBI&#x27;</span>])dd=<span class="hljs-title function_">inflateRaw</span>(dd,buff);<span class="hljs-keyword">else</span> dd=<span class="hljs-title function_">_inflate</span>(dd,buff);<span class="hljs-keyword">var</span> time=<span class="hljs-title class_">Date</span>.<span class="hljs-title function_">now</span>();<span class="hljs-keyword">if</span>(out.<span class="hljs-property">interlace</span>==<span class="hljs-number">0</span>)dd=<span class="hljs-title function_">_filterZero</span>(dd,out,<span class="hljs-number">0</span>,w,h);<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(out.<span class="hljs-property">interlace</span>==<span class="hljs-number">1</span>)dd=<span class="hljs-title function_">_readInterlace</span>(dd,out);<span class="hljs-keyword">return</span> dd&#125;<span class="hljs-keyword">function</span> <span class="hljs-title function_">_inflate</span>(<span class="hljs-params">data,buff</span>)&#123;<span class="hljs-keyword">var</span> out=<span class="hljs-title function_">inflateRaw</span>(<span class="hljs-keyword">new</span> <span class="hljs-title class_">Uint8Array</span>(data.<span class="hljs-property">buffer</span>,<span class="hljs-number">2</span>,data.<span class="hljs-property">length</span>-<span class="hljs-number">6</span>),buff);<span class="hljs-keyword">return</span> out&#125;<span class="hljs-keyword">var</span> inflateRaw=(<span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)&#123;<span class="hljs-keyword">var</span> D=(<span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)&#123;<span class="hljs-keyword">var</span> o=<span class="hljs-title class_">Uint16Array</span>,j=<span class="hljs-title class_">Uint32Array</span>;<span class="hljs-keyword">return</span>&#123;<span class="hljs-attr">m</span>:<span class="hljs-keyword">new</span> <span class="hljs-title function_">o</span>(<span class="hljs-number">16</span>),<span class="hljs-attr">v</span>:<span class="hljs-keyword">new</span> <span class="hljs-title function_">o</span>(<span class="hljs-number">16</span>),<span class="hljs-attr">d</span>:[<span class="hljs-number">16</span>,<span class="hljs-number">17</span>,<span class="hljs-number">18</span>,<span class="hljs-number">0</span>,<span class="hljs-number">8</span>,<span class="hljs-number">7</span>,<span class="hljs-number">9</span>,<span class="hljs-number">6</span>,<span class="hljs-number">10</span>,<span class="hljs-number">5</span>,<span class="hljs-number">11</span>,<span class="hljs-number">4</span>,<span class="hljs-number">12</span>,<span class="hljs-number">3</span>,<span class="hljs-number">13</span>,<span class="hljs-number">2</span>,<span class="hljs-number">14</span>,<span class="hljs-number">1</span>,<span class="hljs-number">15</span>],<span class="hljs-attr">o</span>:[<span class="hljs-number">3</span>,<span class="hljs-number">4</span>,<span class="hljs-number">5</span>,<span class="hljs-number">6</span>,<span class="hljs-number">7</span>,<span class="hljs-number">8</span>,<span class="hljs-number">9</span>,<span class="hljs-number">10</span>,<span class="hljs-number">11</span>,<span class="hljs-number">13</span>,<span class="hljs-number">15</span>,<span class="hljs-number">17</span>,<span class="hljs-number">19</span>,<span class="hljs-number">23</span>,<span class="hljs-number">27</span>,<span class="hljs-number">31</span>,<span class="hljs-number">35</span>,<span class="hljs-number">43</span>,<span class="hljs-number">51</span>,<span class="hljs-number">59</span>,<span class="hljs-number">67</span>,<span class="hljs-number">83</span>,<span class="hljs-number">99</span>,<span class="hljs-number">115</span>,<span class="hljs-number">131</span>,<span class="hljs-number">163</span>,<span class="hljs-number">195</span>,<span class="hljs-number">227</span>,<span class="hljs-number">258</span>,<span class="hljs-number">999</span>,<span class="hljs-number">999</span>,<span class="hljs-number">999</span>],<span class="hljs-attr">z</span>:[<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">2</span>,<span class="hljs-number">2</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span>,<span class="hljs-number">3</span>,<span class="hljs-number">3</span>,<span class="hljs-number">3</span>,<span class="hljs-number">4</span>,<span class="hljs-number">4</span>,<span class="hljs-number">4</span>,<span class="hljs-number">4</span>,<span class="hljs-number">5</span>,<span class="hljs-number">5</span>,<span class="hljs-number">5</span>,<span class="hljs-number">5</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>],<span class="hljs-attr">B</span>:<span class="hljs-keyword">new</span> <span class="hljs-title function_">o</span>(<span class="hljs-number">32</span>),<span class="hljs-attr">p</span>:[<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span>,<span class="hljs-number">4</span>,<span class="hljs-number">5</span>,<span class="hljs-number">7</span>,<span class="hljs-number">9</span>,<span class="hljs-number">13</span>,<span class="hljs-number">17</span>,<span class="hljs-number">25</span>,<span class="hljs-number">33</span>,<span class="hljs-number">49</span>,<span class="hljs-number">65</span>,<span class="hljs-number">97</span>,<span class="hljs-number">129</span>,<span class="hljs-number">193</span>,<span class="hljs-number">257</span>,<span class="hljs-number">385</span>,<span class="hljs-number">513</span>,<span class="hljs-number">769</span>,<span class="hljs-number">1025</span>,<span class="hljs-number">1537</span>,<span class="hljs-number">2049</span>,<span class="hljs-number">3073</span>,<span class="hljs-number">4097</span>,<span class="hljs-number">6145</span>,<span class="hljs-number">8193</span>,<span class="hljs-number">12289</span>,<span class="hljs-number">16385</span>,<span class="hljs-number">24577</span>,<span class="hljs-number">65535</span>,<span class="hljs-number">65535</span>],<span class="hljs-attr">w</span>:[<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span>,<span class="hljs-number">3</span>,<span class="hljs-number">4</span>,<span class="hljs-number">4</span>,<span class="hljs-number">5</span>,<span class="hljs-number">5</span>,<span class="hljs-number">6</span>,<span class="hljs-number">6</span>,<span class="hljs-number">7</span>,<span class="hljs-number">7</span>,<span class="hljs-number">8</span>,<span class="hljs-number">8</span>,<span class="hljs-number">9</span>,<span class="hljs-number">9</span>,<span class="hljs-number">10</span>,<span class="hljs-number">10</span>,<span class="hljs-number">11</span>,<span class="hljs-number">11</span>,<span class="hljs-number">12</span>,<span class="hljs-number">12</span>,<span class="hljs-number">13</span>,<span class="hljs-number">13</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>],<span class="hljs-attr">h</span>:<span class="hljs-keyword">new</span> <span class="hljs-title function_">j</span>(<span class="hljs-number">32</span>),<span class="hljs-attr">g</span>:<span class="hljs-keyword">new</span> <span class="hljs-title function_">o</span>(<span class="hljs-number">512</span>),<span class="hljs-attr">s</span>:[],<span class="hljs-attr">A</span>:<span class="hljs-keyword">new</span> <span class="hljs-title function_">o</span>(<span class="hljs-number">32</span>),<span class="hljs-attr">t</span>:[],<span class="hljs-attr">k</span>:<span class="hljs-keyword">new</span> <span class="hljs-title function_">o</span>(<span class="hljs-number">32768</span>),<span class="hljs-attr">c</span>:[],<span class="hljs-attr">a</span>:[],<span class="hljs-attr">n</span>:<span class="hljs-keyword">new</span> <span class="hljs-title function_">o</span>(<span class="hljs-number">32768</span>),<span class="hljs-attr">e</span>:[],<span class="hljs-attr">C</span>:<span class="hljs-keyword">new</span> <span class="hljs-title function_">o</span>(<span class="hljs-number">512</span>),<span class="hljs-attr">b</span>:[],<span class="hljs-attr">i</span>:<span class="hljs-keyword">new</span> <span class="hljs-title function_">o</span>(<span class="hljs-number">1</span>&lt;&lt;<span class="hljs-number">15</span>),<span class="hljs-attr">r</span>:<span class="hljs-keyword">new</span> <span class="hljs-title function_">j</span>(<span class="hljs-number">286</span>),<span class="hljs-attr">f</span>:<span class="hljs-keyword">new</span> <span class="hljs-title function_">j</span>(<span class="hljs-number">30</span>),<span class="hljs-attr">l</span>:<span class="hljs-keyword">new</span> <span class="hljs-title function_">j</span>(<span class="hljs-number">19</span>),<span class="hljs-attr">u</span>:<span class="hljs-keyword">new</span> <span class="hljs-title function_">j</span>(<span class="hljs-number">15e3</span>),<span class="hljs-attr">q</span>:<span class="hljs-keyword">new</span> <span class="hljs-title function_">o</span>(<span class="hljs-number">1</span>&lt;&lt;<span class="hljs-number">16</span>),<span class="hljs-attr">j</span>:<span class="hljs-keyword">new</span> <span class="hljs-title function_">o</span>(<span class="hljs-number">1</span>&lt;&lt;<span class="hljs-number">15</span>)&#125;&#125;)();<span class="hljs-keyword">function</span> <span class="hljs-title function_">C</span>(<span class="hljs-params">o,j</span>)&#123;<span class="hljs-keyword">var</span> I=o.<span class="hljs-property">length</span>,A,r,i,y,G,f=D.<span class="hljs-property">v</span>;<span class="hljs-keyword">for</span>(<span class="hljs-keyword">var</span> y=<span class="hljs-number">0</span>;y&lt;=j;y++)f[y]=<span class="hljs-number">0</span>;<span class="hljs-keyword">for</span>(y=<span class="hljs-number">1</span>;y&lt;I;y+=<span class="hljs-number">2</span>)f[o[y]]++;<span class="hljs-keyword">var</span> a=D.<span class="hljs-property">m</span>;A=<span class="hljs-number">0</span>;f[<span class="hljs-number">0</span>]=<span class="hljs-number">0</span>;<span class="hljs-keyword">for</span>(r=<span class="hljs-number">1</span>;r&lt;=j;r++)&#123;A=(A+f[r-<span class="hljs-number">1</span>])&lt;&lt;<span class="hljs-number">1</span>;a[r]=A&#125;<span class="hljs-keyword">for</span>(i=<span class="hljs-number">0</span>;i&lt;I;i+=<span class="hljs-number">2</span>)&#123;G=o[i+<span class="hljs-number">1</span>];<span class="hljs-keyword">if</span>(G!=<span class="hljs-number">0</span>)&#123;o[i]=a[G];a[G]++&#125;&#125;&#125;<span class="hljs-keyword">function</span> <span class="hljs-title function_">t</span>(<span class="hljs-params">o,j,I</span>)&#123;<span class="hljs-keyword">var</span> A=o.<span class="hljs-property">length</span>,r=D.<span class="hljs-property">i</span>;<span class="hljs-keyword">for</span>(<span class="hljs-keyword">var</span> i=<span class="hljs-number">0</span>;i&lt;A;i+=<span class="hljs-number">2</span>)<span class="hljs-keyword">if</span>(o[i+<span class="hljs-number">1</span>]!=<span class="hljs-number">0</span>)&#123;<span class="hljs-keyword">var</span> y=i&gt;&gt;<span class="hljs-number">1</span>,G=o[i+<span class="hljs-number">1</span>],f=(y&lt;&lt;<span class="hljs-number">4</span>)|G,a=j-G,k=o[i]&lt;&lt;a,N=k+(<span class="hljs-number">1</span>&lt;&lt;a);<span class="hljs-keyword">while</span>(k!=N)&#123;<span class="hljs-keyword">var</span> x=r[k]&gt;&gt;&gt;(<span class="hljs-number">15</span>-j);I[x]=f;k++&#125;&#125;&#125;<span class="hljs-keyword">function</span> <span class="hljs-title function_">g</span>(<span class="hljs-params">o,j</span>)&#123;<span class="hljs-keyword">var</span> I=D.<span class="hljs-property">i</span>,A=<span class="hljs-number">15</span>-j;<span class="hljs-keyword">for</span>(<span class="hljs-keyword">var</span> r=<span class="hljs-number">0</span>;r&lt;o.<span class="hljs-property">length</span>;r+=<span class="hljs-number">2</span>)&#123;<span class="hljs-keyword">var</span> i=o[r]&lt;&lt;(j-o[r+<span class="hljs-number">1</span>]);o[r]=I[i]&gt;&gt;&gt;A&#125;&#125;(<span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)&#123;<span class="hljs-keyword">var</span> o=<span class="hljs-number">1</span>&lt;&lt;<span class="hljs-number">15</span>;<span class="hljs-keyword">for</span>(<span class="hljs-keyword">var</span> j=<span class="hljs-number">0</span>;j&lt;o;j++)&#123;<span class="hljs-keyword">var</span> I=j;I=((I&amp;<span class="hljs-number">2863311530</span>)&gt;&gt;&gt;<span class="hljs-number">1</span>)|((I&amp;<span class="hljs-number">1431655765</span>)&lt;&lt;<span class="hljs-number">1</span>);I=((I&amp;<span class="hljs-number">3435973836</span>)&gt;&gt;&gt;<span class="hljs-number">2</span>)|((I&amp;<span class="hljs-number">858993459</span>)&lt;&lt;<span class="hljs-number">2</span>);I=((I&amp;<span class="hljs-number">4042322160</span>)&gt;&gt;&gt;<span class="hljs-number">4</span>)|((I&amp;<span class="hljs-number">252645135</span>)&lt;&lt;<span class="hljs-number">4</span>);I=((I&amp;<span class="hljs-number">4278255360</span>)&gt;&gt;&gt;<span class="hljs-number">8</span>)|((I&amp;<span class="hljs-number">16711935</span>)&lt;&lt;<span class="hljs-number">8</span>);D.<span class="hljs-property">i</span>[j]=((I&gt;&gt;&gt;<span class="hljs-number">16</span>)|(I&lt;&lt;<span class="hljs-number">16</span>))&gt;&gt;&gt;<span class="hljs-number">17</span>&#125;<span class="hljs-keyword">function</span> <span class="hljs-title function_">A</span>(<span class="hljs-params">r,i,y</span>)&#123;<span class="hljs-keyword">while</span>(i--!=<span class="hljs-number">0</span>)r.<span class="hljs-title function_">push</span>(<span class="hljs-number">0</span>,y)&#125;<span class="hljs-keyword">for</span>(<span class="hljs-keyword">var</span> j=<span class="hljs-number">0</span>;j&lt;<span class="hljs-number">32</span>;j++)&#123;D.<span class="hljs-property">B</span>[j]=(D.<span class="hljs-property">o</span>[j]&lt;&lt;<span class="hljs-number">3</span>)|D.<span class="hljs-property">z</span>[j];D.<span class="hljs-property">h</span>[j]=(D.<span class="hljs-property">p</span>[j]&lt;&lt;<span class="hljs-number">4</span>)|D.<span class="hljs-property">w</span>[j]&#125;<span class="hljs-title function_">A</span>(D.<span class="hljs-property">s</span>,<span class="hljs-number">144</span>,<span class="hljs-number">8</span>);<span class="hljs-title function_">A</span>(D.<span class="hljs-property">s</span>,<span class="hljs-number">255</span>-<span class="hljs-number">143</span>,<span class="hljs-number">9</span>);<span class="hljs-title function_">A</span>(D.<span class="hljs-property">s</span>,<span class="hljs-number">279</span>-<span class="hljs-number">255</span>,<span class="hljs-number">7</span>);<span class="hljs-title function_">A</span>(D.<span class="hljs-property">s</span>,<span class="hljs-number">287</span>-<span class="hljs-number">279</span>,<span class="hljs-number">8</span>);<span class="hljs-title function_">C</span>(D.<span class="hljs-property">s</span>,<span class="hljs-number">9</span>);<span class="hljs-title function_">t</span>(D.<span class="hljs-property">s</span>,<span class="hljs-number">9</span>,D.<span class="hljs-property">g</span>);<span class="hljs-title function_">g</span>(D.<span class="hljs-property">s</span>,<span class="hljs-number">9</span>);<span class="hljs-title function_">A</span>(D.<span class="hljs-property">t</span>,<span class="hljs-number">32</span>,<span class="hljs-number">5</span>);<span class="hljs-title function_">C</span>(D.<span class="hljs-property">t</span>,<span class="hljs-number">5</span>);<span class="hljs-title function_">t</span>(D.<span class="hljs-property">t</span>,<span class="hljs-number">5</span>,D.<span class="hljs-property">A</span>);<span class="hljs-title function_">g</span>(D.<span class="hljs-property">t</span>,<span class="hljs-number">5</span>);<span class="hljs-title function_">A</span>(D.<span class="hljs-property">b</span>,<span class="hljs-number">19</span>,<span class="hljs-number">0</span>);<span class="hljs-title function_">A</span>(D.<span class="hljs-property">c</span>,<span class="hljs-number">286</span>,<span class="hljs-number">0</span>);<span class="hljs-title function_">A</span>(D.<span class="hljs-property">e</span>,<span class="hljs-number">30</span>,<span class="hljs-number">0</span>);<span class="hljs-title function_">A</span>(D.<span class="hljs-property">a</span>,<span class="hljs-number">320</span>,<span class="hljs-number">0</span>)&#125;)();<span class="hljs-keyword">function</span> <span class="hljs-title function_">F</span>(<span class="hljs-params">o,j,I</span>)&#123;<span class="hljs-keyword">return</span>(((o[j&gt;&gt;&gt;<span class="hljs-number">3</span>]|(o[(j&gt;&gt;&gt;<span class="hljs-number">3</span>)+<span class="hljs-number">1</span>]&lt;&lt;<span class="hljs-number">8</span>))&gt;&gt;&gt;(j&amp;<span class="hljs-number">7</span>))&amp;((<span class="hljs-number">1</span>&lt;&lt;I)-<span class="hljs-number">1</span>))&#125;<span class="hljs-keyword">function</span> <span class="hljs-title function_">s</span>(<span class="hljs-params">o,j,I</span>)&#123;<span class="hljs-keyword">return</span>(((o[j&gt;&gt;&gt;<span class="hljs-number">3</span>]|(o[(j&gt;&gt;&gt;<span class="hljs-number">3</span>)+<span class="hljs-number">1</span>]&lt;&lt;<span class="hljs-number">8</span>)|(o[(j&gt;&gt;&gt;<span class="hljs-number">3</span>)+<span class="hljs-number">2</span>]&lt;&lt;<span class="hljs-number">16</span>))&gt;&gt;&gt;(j&amp;<span class="hljs-number">7</span>))&amp;((<span class="hljs-number">1</span>&lt;&lt;I)-<span class="hljs-number">1</span>))&#125;<span class="hljs-keyword">function</span> <span class="hljs-title function_">w</span>(<span class="hljs-params">o,j</span>)&#123;<span class="hljs-keyword">return</span>((o[j&gt;&gt;&gt;<span class="hljs-number">3</span>]|(o[(j&gt;&gt;&gt;<span class="hljs-number">3</span>)+<span class="hljs-number">1</span>]&lt;&lt;<span class="hljs-number">8</span>)|(o[(j&gt;&gt;&gt;<span class="hljs-number">3</span>)+<span class="hljs-number">2</span>]&lt;&lt;<span class="hljs-number">16</span>))&gt;&gt;&gt;(j&amp;<span class="hljs-number">7</span>))&#125;<span class="hljs-keyword">function</span> <span class="hljs-title function_">b</span>(<span class="hljs-params">o,j</span>)&#123;<span class="hljs-keyword">return</span>((o[j&gt;&gt;&gt;<span class="hljs-number">3</span>]|(o[(j&gt;&gt;&gt;<span class="hljs-number">3</span>)+<span class="hljs-number">1</span>]&lt;&lt;<span class="hljs-number">8</span>)|(o[(j&gt;&gt;&gt;<span class="hljs-number">3</span>)+<span class="hljs-number">2</span>]&lt;&lt;<span class="hljs-number">16</span>)|(o[(j&gt;&gt;&gt;<span class="hljs-number">3</span>)+<span class="hljs-number">3</span>]&lt;&lt;<span class="hljs-number">24</span>))&gt;&gt;&gt;(j&amp;<span class="hljs-number">7</span>))&#125;<span class="hljs-keyword">function</span> <span class="hljs-title function_">v</span>(<span class="hljs-params">o,j</span>)&#123;<span class="hljs-keyword">var</span> I=<span class="hljs-title class_">Uint8Array</span>,r=<span class="hljs-number">0</span>,i=<span class="hljs-number">0</span>,y=<span class="hljs-number">0</span>,G=<span class="hljs-number">0</span>,f=<span class="hljs-number">0</span>,a=<span class="hljs-number">0</span>,k=<span class="hljs-number">0</span>,N=<span class="hljs-number">0</span>,x=<span class="hljs-number">0</span>,P,J;<span class="hljs-keyword">if</span>(o[<span class="hljs-number">0</span>]==<span class="hljs-number">3</span>&amp;&amp;o[<span class="hljs-number">1</span>]==<span class="hljs-number">0</span>)<span class="hljs-keyword">return</span> j?<span class="hljs-attr">j</span>:<span class="hljs-keyword">new</span> <span class="hljs-title function_">I</span>(<span class="hljs-number">0</span>);<span class="hljs-keyword">var</span> A=j==<span class="hljs-literal">null</span>;<span class="hljs-keyword">if</span>(A)j=<span class="hljs-keyword">new</span> <span class="hljs-title function_">I</span>((o.<span class="hljs-property">length</span>&gt;&gt;&gt;<span class="hljs-number">2</span>)&lt;&lt;<span class="hljs-number">3</span>);<span class="hljs-keyword">while</span>(r==<span class="hljs-number">0</span>)&#123;r=<span class="hljs-title function_">s</span>(o,x,<span class="hljs-number">1</span>);i=<span class="hljs-title function_">s</span>(o,x+<span class="hljs-number">1</span>,<span class="hljs-number">2</span>);x+=<span class="hljs-number">3</span>;<span class="hljs-keyword">if</span>(i==<span class="hljs-number">0</span>)&#123;<span class="hljs-keyword">if</span>((x&amp;<span class="hljs-number">7</span>)!=<span class="hljs-number">0</span>)x+=<span class="hljs-number">8</span>-(x&amp;<span class="hljs-number">7</span>);<span class="hljs-keyword">var</span> K=(x&gt;&gt;&gt;<span class="hljs-number">3</span>)+<span class="hljs-number">4</span>,m=o[K-<span class="hljs-number">4</span>]|(o[K-<span class="hljs-number">3</span>]&lt;&lt;<span class="hljs-number">8</span>);<span class="hljs-keyword">if</span>(A)j=<span class="hljs-title function_">H</span>(j,N+m);j.<span class="hljs-title function_">set</span>(<span class="hljs-keyword">new</span> <span class="hljs-title function_">I</span>(o.<span class="hljs-property">buffer</span>,o.<span class="hljs-property">byteOffset</span>+K,m),N);x=(K+m)&lt;&lt;<span class="hljs-number">3</span>;N+=m;<span class="hljs-keyword">continue</span>&#125;<span class="hljs-keyword">if</span>(A)j=<span class="hljs-title function_">H</span>(j,N+(<span class="hljs-number">1</span>&lt;&lt;<span class="hljs-number">17</span>));<span class="hljs-keyword">if</span>(i==<span class="hljs-number">1</span>)&#123;P=D.<span class="hljs-property">g</span>;J=D.<span class="hljs-property">A</span>;a=(<span class="hljs-number">1</span>&lt;&lt;<span class="hljs-number">9</span>)-<span class="hljs-number">1</span>;k=(<span class="hljs-number">1</span>&lt;&lt;<span class="hljs-number">5</span>)-<span class="hljs-number">1</span>&#125;<span class="hljs-keyword">if</span>(i==<span class="hljs-number">2</span>)&#123;y=<span class="hljs-title function_">F</span>(o,x,<span class="hljs-number">5</span>)+<span class="hljs-number">257</span>;G=<span class="hljs-title function_">F</span>(o,x+<span class="hljs-number">5</span>,<span class="hljs-number">5</span>)+<span class="hljs-number">1</span>;f=<span class="hljs-title function_">F</span>(o,x+<span class="hljs-number">10</span>,<span class="hljs-number">4</span>)+<span class="hljs-number">4</span>;x+=<span class="hljs-number">14</span>;<span class="hljs-keyword">var</span> O=x,Q=<span class="hljs-number">1</span>;<span class="hljs-keyword">for</span>(<span class="hljs-keyword">var</span> p=<span class="hljs-number">0</span>;p&lt;<span class="hljs-number">38</span>;p+=<span class="hljs-number">2</span>)&#123;D.<span class="hljs-property">b</span>[p]=<span class="hljs-number">0</span>;D.<span class="hljs-property">b</span>[p+<span class="hljs-number">1</span>]=<span class="hljs-number">0</span>&#125;<span class="hljs-keyword">for</span>(<span class="hljs-keyword">var</span> p=<span class="hljs-number">0</span>;p&lt;f;p++)&#123;<span class="hljs-keyword">var</span> l=<span class="hljs-title function_">F</span>(o,x+p*<span class="hljs-number">3</span>,<span class="hljs-number">3</span>);D.<span class="hljs-property">b</span>[(D.<span class="hljs-property">d</span>[p]&lt;&lt;<span class="hljs-number">1</span>)+<span class="hljs-number">1</span>]=l;<span class="hljs-keyword">if</span>(l&gt;Q)Q=l&#125;x+=<span class="hljs-number">3</span>*f;<span class="hljs-title function_">C</span>(D.<span class="hljs-property">b</span>,Q);<span class="hljs-title function_">t</span>(D.<span class="hljs-property">b</span>,Q,D.<span class="hljs-property">C</span>);P=D.<span class="hljs-property">k</span>;J=D.<span class="hljs-property">n</span>;x=<span class="hljs-title function_">B</span>(D.<span class="hljs-property">C</span>,(<span class="hljs-number">1</span>&lt;&lt;Q)-<span class="hljs-number">1</span>,y+G,o,x,D.<span class="hljs-property">a</span>);<span class="hljs-keyword">var</span> u=<span class="hljs-title function_">d</span>(D.<span class="hljs-property">a</span>,<span class="hljs-number">0</span>,y,D.<span class="hljs-property">c</span>);a=(<span class="hljs-number">1</span>&lt;&lt;u)-<span class="hljs-number">1</span>;<span class="hljs-keyword">var</span> n=<span class="hljs-title function_">d</span>(D.<span class="hljs-property">a</span>,y,G,D.<span class="hljs-property">e</span>);k=(<span class="hljs-number">1</span>&lt;&lt;n)-<span class="hljs-number">1</span>;<span class="hljs-title function_">C</span>(D.<span class="hljs-property">c</span>,u);<span class="hljs-title function_">t</span>(D.<span class="hljs-property">c</span>,u,P);<span class="hljs-title function_">C</span>(D.<span class="hljs-property">e</span>,n);<span class="hljs-title function_">t</span>(D.<span class="hljs-property">e</span>,n,J)&#125;<span class="hljs-keyword">while</span>(!<span class="hljs-number">0</span>)&#123;<span class="hljs-keyword">var</span> h=P[<span class="hljs-title function_">w</span>(o,x)&amp;a];x+=h&amp;<span class="hljs-number">15</span>;<span class="hljs-keyword">var</span> L=h&gt;&gt;&gt;<span class="hljs-number">4</span>;<span class="hljs-keyword">if</span>(L&gt;&gt;&gt;<span class="hljs-number">8</span>==<span class="hljs-number">0</span>)&#123;j[N++]=L&#125;<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(L==<span class="hljs-number">256</span>)&#123;<span class="hljs-keyword">break</span>&#125;<span class="hljs-keyword">else</span>&#123;<span class="hljs-keyword">var</span> M=N+L-<span class="hljs-number">254</span>;<span class="hljs-keyword">if</span>(L&gt;<span class="hljs-number">264</span>)&#123;<span class="hljs-keyword">var</span> z=D.<span class="hljs-property">B</span>[L-<span class="hljs-number">257</span>];M=N+(z&gt;&gt;&gt;<span class="hljs-number">3</span>)+<span class="hljs-title function_">F</span>(o,x,z&amp;<span class="hljs-number">7</span>);x+=z&amp;<span class="hljs-number">7</span>&#125;<span class="hljs-keyword">var</span> e=J[<span class="hljs-title function_">w</span>(o,x)&amp;k];x+=e&amp;<span class="hljs-number">15</span>;<span class="hljs-keyword">var</span> E=e&gt;&gt;&gt;<span class="hljs-number">4</span>,c=D.<span class="hljs-property">h</span>[E],q=(c&gt;&gt;&gt;<span class="hljs-number">4</span>)+<span class="hljs-title function_">s</span>(o,x,c&amp;<span class="hljs-number">15</span>);x+=c&amp;<span class="hljs-number">15</span>;<span class="hljs-keyword">if</span>(A)j=<span class="hljs-title function_">H</span>(j,N+(<span class="hljs-number">1</span>&lt;&lt;<span class="hljs-number">17</span>));<span class="hljs-keyword">while</span>(N&lt;M)&#123;j[N]=j[N++ -q];j[N]=j[N++ -q];j[N]=j[N++ -q];j[N]=j[N++ -q]&#125;N=M&#125;&#125;&#125;<span class="hljs-keyword">return</span> j.<span class="hljs-property">length</span>==N?<span class="hljs-attr">j</span>:j.<span class="hljs-title function_">slice</span>(<span class="hljs-number">0</span>,N)&#125;<span class="hljs-keyword">function</span> <span class="hljs-title function_">H</span>(<span class="hljs-params">o,j</span>)&#123;<span class="hljs-keyword">var</span> I=o.<span class="hljs-property">length</span>;<span class="hljs-keyword">if</span>(j&lt;=I)<span class="hljs-keyword">return</span> o;<span class="hljs-keyword">var</span> A=<span class="hljs-keyword">new</span> <span class="hljs-title class_">Uint8Array</span>(<span class="hljs-title class_">Math</span>.<span class="hljs-title function_">max</span>(I&lt;&lt;<span class="hljs-number">1</span>,j));A.<span class="hljs-title function_">set</span>(o,<span class="hljs-number">0</span>);<span class="hljs-keyword">return</span> A&#125;<span class="hljs-keyword">function</span> <span class="hljs-title function_">B</span>(<span class="hljs-params">o,j,I,A,r,i</span>)&#123;<span class="hljs-keyword">var</span> y=<span class="hljs-number">0</span>;<span class="hljs-keyword">while</span>(y&lt;I)&#123;<span class="hljs-keyword">var</span> G=o[<span class="hljs-title function_">w</span>(A,r)&amp;j];r+=G&amp;<span class="hljs-number">15</span>;<span class="hljs-keyword">var</span> f=G&gt;&gt;&gt;<span class="hljs-number">4</span>;<span class="hljs-keyword">if</span>(f&lt;=<span class="hljs-number">15</span>)&#123;i[y]=f;y++&#125;<span class="hljs-keyword">else</span>&#123;<span class="hljs-keyword">var</span> a=<span class="hljs-number">0</span>,k=<span class="hljs-number">0</span>;<span class="hljs-keyword">if</span>(f==<span class="hljs-number">16</span>)&#123;k=<span class="hljs-number">3</span>+<span class="hljs-title function_">F</span>(A,r,<span class="hljs-number">2</span>);r+=<span class="hljs-number">2</span>;a=i[y-<span class="hljs-number">1</span>]&#125;<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(f==<span class="hljs-number">17</span>)&#123;k=<span class="hljs-number">3</span>+<span class="hljs-title function_">F</span>(A,r,<span class="hljs-number">3</span>);r+=<span class="hljs-number">3</span>&#125;<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(f==<span class="hljs-number">18</span>)&#123;k=<span class="hljs-number">11</span>+<span class="hljs-title function_">F</span>(A,r,<span class="hljs-number">7</span>);r+=<span class="hljs-number">7</span>&#125;<span class="hljs-keyword">var</span> N=y+k;<span class="hljs-keyword">while</span>(y&lt;N)&#123;i[y]=a;y++&#125;&#125;&#125;<span class="hljs-keyword">return</span> r&#125;<span class="hljs-keyword">function</span> <span class="hljs-title function_">d</span>(<span class="hljs-params">o,j,I,A</span>)&#123;<span class="hljs-keyword">var</span> r=<span class="hljs-number">0</span>,i=<span class="hljs-number">0</span>,y=A.<span class="hljs-property">length</span>&gt;&gt;&gt;<span class="hljs-number">1</span>;<span class="hljs-keyword">while</span>(i&lt;I)&#123;<span class="hljs-keyword">var</span> G=o[i+j];A[i&lt;&lt;<span class="hljs-number">1</span>]=<span class="hljs-number">0</span>;A[(i&lt;&lt;<span class="hljs-number">1</span>)+<span class="hljs-number">1</span>]=G;<span class="hljs-keyword">if</span>(G&gt;r)r=G;i++&#125;<span class="hljs-keyword">while</span>(i&lt;y)&#123;A[i&lt;&lt;<span class="hljs-number">1</span>]=<span class="hljs-number">0</span>;A[(i&lt;&lt;<span class="hljs-number">1</span>)+<span class="hljs-number">1</span>]=<span class="hljs-number">0</span>;i++&#125;<span class="hljs-keyword">return</span> r&#125;<span class="hljs-keyword">return</span> v&#125;)();<span class="hljs-keyword">function</span> <span class="hljs-title function_">_readInterlace</span>(<span class="hljs-params">data,out</span>)&#123;<span class="hljs-keyword">var</span> w=out.<span class="hljs-property">width</span>,h=out.<span class="hljs-property">height</span>;<span class="hljs-keyword">var</span> bpp=<span class="hljs-title function_">_getBPP</span>(out),cbpp=bpp&gt;&gt;<span class="hljs-number">3</span>,bpl=<span class="hljs-title class_">Math</span>.<span class="hljs-title function_">ceil</span>((w*bpp)/<span class="hljs-number">8</span>);<span class="hljs-keyword">var</span> img=<span class="hljs-keyword">new</span> <span class="hljs-title class_">Uint8Array</span>(h*bpl);<span class="hljs-keyword">var</span> di=<span class="hljs-number">0</span>;<span class="hljs-keyword">var</span> starting_row=[<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">4</span>,<span class="hljs-number">0</span>,<span class="hljs-number">2</span>,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>];<span class="hljs-keyword">var</span> starting_col=[<span class="hljs-number">0</span>,<span class="hljs-number">4</span>,<span class="hljs-number">0</span>,<span class="hljs-number">2</span>,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>];<span class="hljs-keyword">var</span> row_increment=[<span class="hljs-number">8</span>,<span class="hljs-number">8</span>,<span class="hljs-number">8</span>,<span class="hljs-number">4</span>,<span class="hljs-number">4</span>,<span class="hljs-number">2</span>,<span class="hljs-number">2</span>];<span class="hljs-keyword">var</span> col_increment=[<span class="hljs-number">8</span>,<span class="hljs-number">8</span>,<span class="hljs-number">4</span>,<span class="hljs-number">4</span>,<span class="hljs-number">2</span>,<span class="hljs-number">2</span>,<span class="hljs-number">1</span>];<span class="hljs-keyword">var</span> pass=<span class="hljs-number">0</span>;<span class="hljs-keyword">while</span>(pass&lt;<span class="hljs-number">7</span>)&#123;<span class="hljs-keyword">var</span> ri=row_increment[pass],ci=col_increment[pass];<span class="hljs-keyword">var</span> sw=<span class="hljs-number">0</span>,sh=<span class="hljs-number">0</span>;<span class="hljs-keyword">var</span> cr=starting_row[pass];<span class="hljs-keyword">while</span>(cr&lt;h)&#123;cr+=ri;sh++&#125;<span class="hljs-keyword">var</span> cc=starting_col[pass];<span class="hljs-keyword">while</span>(cc&lt;w)&#123;cc+=ci;sw++&#125;<span class="hljs-keyword">var</span> bpll=<span class="hljs-title class_">Math</span>.<span class="hljs-title function_">ceil</span>((sw*bpp)/<span class="hljs-number">8</span>);<span class="hljs-title function_">_filterZero</span>(data,out,di,sw,sh);<span class="hljs-keyword">var</span> y=<span class="hljs-number">0</span>,row=starting_row[pass];<span class="hljs-keyword">while</span>(row&lt;h)&#123;<span class="hljs-keyword">var</span> col=starting_col[pass];<span class="hljs-keyword">var</span> cdi=(di+y*bpll)&lt;&lt;<span class="hljs-number">3</span>;<span class="hljs-keyword">while</span>(col&lt;w)&#123;<span class="hljs-keyword">if</span>(bpp==<span class="hljs-number">1</span>)&#123;<span class="hljs-keyword">var</span> val=data[cdi&gt;&gt;<span class="hljs-number">3</span>];val=(val&gt;&gt;(<span class="hljs-number">7</span>-(cdi&amp;<span class="hljs-number">7</span>)))&amp;<span class="hljs-number">1</span>;img[row*bpl+(col&gt;&gt;<span class="hljs-number">3</span>)]|=val&lt;&lt;(<span class="hljs-number">7</span>-((col&amp;<span class="hljs-number">7</span>)&lt;&lt;<span class="hljs-number">0</span>))&#125;<span class="hljs-keyword">if</span>(bpp==<span class="hljs-number">2</span>)&#123;<span class="hljs-keyword">var</span> val=data[cdi&gt;&gt;<span class="hljs-number">3</span>];val=(val&gt;&gt;(<span class="hljs-number">6</span>-(cdi&amp;<span class="hljs-number">7</span>)))&amp;<span class="hljs-number">3</span>;img[row*bpl+(col&gt;&gt;<span class="hljs-number">2</span>)]|=val&lt;&lt;(<span class="hljs-number">6</span>-((col&amp;<span class="hljs-number">3</span>)&lt;&lt;<span class="hljs-number">1</span>))&#125;<span class="hljs-keyword">if</span>(bpp==<span class="hljs-number">4</span>)&#123;<span class="hljs-keyword">var</span> val=data[cdi&gt;&gt;<span class="hljs-number">3</span>];val=(val&gt;&gt;(<span class="hljs-number">4</span>-(cdi&amp;<span class="hljs-number">7</span>)))&amp;<span class="hljs-number">15</span>;img[row*bpl+(col&gt;&gt;<span class="hljs-number">1</span>)]|=val&lt;&lt;(<span class="hljs-number">4</span>-((col&amp;<span class="hljs-number">1</span>)&lt;&lt;<span class="hljs-number">2</span>))&#125;<span class="hljs-keyword">if</span>(bpp&gt;=<span class="hljs-number">8</span>)&#123;<span class="hljs-keyword">var</span> ii=row*bpl+col*cbpp;<span class="hljs-keyword">for</span>(<span class="hljs-keyword">var</span> j=<span class="hljs-number">0</span>;j&lt;cbpp;j++)img[ii+j]=data[(cdi&gt;&gt;<span class="hljs-number">3</span>)+j]&#125;cdi+=bpp;col+=ci&#125;y++;row+=ri&#125;<span class="hljs-keyword">if</span>(sw*sh!=<span class="hljs-number">0</span>)di+=sh*(<span class="hljs-number">1</span>+bpll);pass=pass+<span class="hljs-number">1</span>&#125;<span class="hljs-keyword">return</span> img&#125;<span class="hljs-keyword">function</span> <span class="hljs-title function_">_getBPP</span>(<span class="hljs-params">out</span>)&#123;<span class="hljs-keyword">var</span> noc=[<span class="hljs-number">1</span>,<span class="hljs-literal">null</span>,<span class="hljs-number">3</span>,<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-literal">null</span>,<span class="hljs-number">4</span>][out.<span class="hljs-property">ctype</span>];<span class="hljs-keyword">return</span> noc*out.<span class="hljs-property">depth</span>&#125;<span class="hljs-keyword">function</span> <span class="hljs-title function_">_filterZero</span>(<span class="hljs-params">data,out,off,w,h</span>)&#123;<span class="hljs-keyword">var</span> bpp=<span class="hljs-title function_">_getBPP</span>(out),bpl=<span class="hljs-title class_">Math</span>.<span class="hljs-title function_">ceil</span>((w*bpp)/<span class="hljs-number">8</span>);bpp=<span class="hljs-title class_">Math</span>.<span class="hljs-title function_">ceil</span>(bpp/<span class="hljs-number">8</span>);<span class="hljs-keyword">var</span> i,di,type=data[off],x=<span class="hljs-number">0</span>;<span class="hljs-keyword">if</span>(type&gt;<span class="hljs-number">1</span>)data[off]=[<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>][type-<span class="hljs-number">2</span>];<span class="hljs-keyword">if</span>(type==<span class="hljs-number">3</span>)<span class="hljs-keyword">for</span>(x=bpp;x&lt;bpl;x++)data[x+<span class="hljs-number">1</span>]=(data[x+<span class="hljs-number">1</span>]+(data[x+<span class="hljs-number">1</span>-bpp]&gt;&gt;&gt;<span class="hljs-number">1</span>))&amp;<span class="hljs-number">255</span>;<span class="hljs-keyword">for</span>(<span class="hljs-keyword">var</span> y=<span class="hljs-number">0</span>;y&lt;h;y++)&#123;i=off+y*bpl;di=i+y+<span class="hljs-number">1</span>;type=data[di-<span class="hljs-number">1</span>];x=<span class="hljs-number">0</span>;<span class="hljs-keyword">if</span>(type==<span class="hljs-number">0</span>)<span class="hljs-keyword">for</span>(;x&lt;bpl;x++)data[i+x]=data[di+x];<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(type==<span class="hljs-number">1</span>)&#123;<span class="hljs-keyword">for</span>(;x&lt;bpp;x++)data[i+x]=data[di+x];<span class="hljs-keyword">for</span>(;x&lt;bpl;x++)data[i+x]=data[di+x]+data[i+x-bpp]&#125;<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(type==<span class="hljs-number">2</span>)&#123;<span class="hljs-keyword">for</span>(;x&lt;bpl;x++)data[i+x]=data[di+x]+data[i+x-bpl]&#125;<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(type==<span class="hljs-number">3</span>)&#123;<span class="hljs-keyword">for</span>(;x&lt;bpp;x++)data[i+x]=data[di+x]+(data[i+x-bpl]&gt;&gt;&gt;<span class="hljs-number">1</span>);<span class="hljs-keyword">for</span>(;x&lt;bpl;x++)data[i+x]=data[di+x]+((data[i+x-bpl]+data[i+x-bpp])&gt;&gt;&gt;<span class="hljs-number">1</span>)&#125;<span class="hljs-keyword">else</span>&#123;<span class="hljs-keyword">for</span>(;x&lt;bpp;x++)data[i+x]=data[di+x]+<span class="hljs-title function_">_paeth</span>(<span class="hljs-number">0</span>,data[i+x-bpl],<span class="hljs-number">0</span>);<span class="hljs-keyword">for</span>(;x&lt;bpl;x++)data[i+x]=data[di+x]+<span class="hljs-title function_">_paeth</span>(data[i+x-bpp],data[i+x-bpl],data[i+x-bpp-bpl])&#125;&#125;<span class="hljs-keyword">return</span> data&#125;<span class="hljs-keyword">function</span> <span class="hljs-title function_">_paeth</span>(<span class="hljs-params">a,b,c</span>)&#123;<span class="hljs-keyword">var</span> p=a+b-c,pa=p-a,pb=p-b,pc=p-c;<span class="hljs-keyword">if</span>(pa*pa&lt;=pb*pb&amp;&amp;pa*pa&lt;=pc*pc)<span class="hljs-keyword">return</span> a;<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(pb*pb&lt;=pc*pc)<span class="hljs-keyword">return</span> b;<span class="hljs-keyword">return</span> c&#125;<span class="hljs-keyword">function</span> <span class="hljs-title function_">_IHDR</span>(<span class="hljs-params">data,offset,out</span>)&#123;out.<span class="hljs-property">width</span>=_bin.<span class="hljs-title function_">readUint</span>(data,offset);offset+=<span class="hljs-number">4</span>;out.<span class="hljs-property">height</span>=_bin.<span class="hljs-title function_">readUint</span>(data,offset);offset+=<span class="hljs-number">4</span>;out.<span class="hljs-property">depth</span>=data[offset];offset++;out.<span class="hljs-property">ctype</span>=data[offset];offset++;out.<span class="hljs-property">compress</span>=data[offset];offset++;out.<span class="hljs-property">filter</span>=data[offset];offset++;out.<span class="hljs-property">interlace</span>=data[offset];offset++&#125;<span class="hljs-keyword">function</span> <span class="hljs-title function_">_copyTile</span>(<span class="hljs-params">sb,sw,sh,tb,tw,th,xoff,yoff,mode</span>)&#123;<span class="hljs-keyword">var</span> w=<span class="hljs-title class_">Math</span>.<span class="hljs-title function_">min</span>(sw,tw),h=<span class="hljs-title class_">Math</span>.<span class="hljs-title function_">min</span>(sh,th);<span class="hljs-keyword">var</span> si=<span class="hljs-number">0</span>,ti=<span class="hljs-number">0</span>;<span class="hljs-keyword">for</span>(<span class="hljs-keyword">var</span> y=<span class="hljs-number">0</span>;y&lt;h;y++)<span class="hljs-keyword">for</span>(<span class="hljs-keyword">var</span> x=<span class="hljs-number">0</span>;x&lt;w;x++)&#123;<span class="hljs-keyword">if</span>(xoff&gt;=<span class="hljs-number">0</span>&amp;&amp;yoff&gt;=<span class="hljs-number">0</span>)&#123;si=(y*sw+x)&lt;&lt;<span class="hljs-number">2</span>;ti=((yoff+y)*tw+xoff+x)&lt;&lt;<span class="hljs-number">2</span>&#125;<span class="hljs-keyword">else</span>&#123;si=((-yoff+y)*sw-xoff+x)&lt;&lt;<span class="hljs-number">2</span>;ti=(y*tw+x)&lt;&lt;<span class="hljs-number">2</span>&#125;<span class="hljs-keyword">if</span>(mode==<span class="hljs-number">0</span>)&#123;tb[ti]=sb[si];tb[ti+<span class="hljs-number">1</span>]=sb[si+<span class="hljs-number">1</span>];tb[ti+<span class="hljs-number">2</span>]=sb[si+<span class="hljs-number">2</span>];tb[ti+<span class="hljs-number">3</span>]=sb[si+<span class="hljs-number">3</span>]&#125;<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(mode==<span class="hljs-number">1</span>)&#123;<span class="hljs-keyword">var</span> fa=sb[si+<span class="hljs-number">3</span>]*(<span class="hljs-number">1</span>/<span class="hljs-number">255</span>),fr=sb[si]*fa,fg=sb[si+<span class="hljs-number">1</span>]*fa,fb=sb[si+<span class="hljs-number">2</span>]*fa;<span class="hljs-keyword">var</span> ba=tb[ti+<span class="hljs-number">3</span>]*(<span class="hljs-number">1</span>/<span class="hljs-number">255</span>),br=tb[ti]*ba,bg=tb[ti+<span class="hljs-number">1</span>]*ba,bb=tb[ti+<span class="hljs-number">2</span>]*ba;<span class="hljs-keyword">var</span> ifa=<span class="hljs-number">1</span>-fa,oa=fa+ba*ifa,ioa=oa==<span class="hljs-number">0</span>?<span class="hljs-number">0</span>:<span class="hljs-number">1</span>/oa;tb[ti+<span class="hljs-number">3</span>]=<span class="hljs-number">255</span>*oa;tb[ti+<span class="hljs-number">0</span>]=(fr+br*ifa)*ioa;tb[ti+<span class="hljs-number">1</span>]=(fg+bg*ifa)*ioa;tb[ti+<span class="hljs-number">2</span>]=(fb+bb*ifa)*ioa&#125;<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(mode==<span class="hljs-number">2</span>)&#123;<span class="hljs-keyword">var</span> fa=sb[si+<span class="hljs-number">3</span>],fr=sb[si],fg=sb[si+<span class="hljs-number">1</span>],fb=sb[si+<span class="hljs-number">2</span>];<span class="hljs-keyword">var</span> ba=tb[ti+<span class="hljs-number">3</span>],br=tb[ti],bg=tb[ti+<span class="hljs-number">1</span>],bb=tb[ti+<span class="hljs-number">2</span>];<span class="hljs-keyword">if</span>(fa==ba&amp;&amp;fr==br&amp;&amp;fg==bg&amp;&amp;fb==bb)&#123;tb[ti]=<span class="hljs-number">0</span>;tb[ti+<span class="hljs-number">1</span>]=<span class="hljs-number">0</span>;tb[ti+<span class="hljs-number">2</span>]=<span class="hljs-number">0</span>;tb[ti+<span class="hljs-number">3</span>]=<span class="hljs-number">0</span>&#125;<span class="hljs-keyword">else</span>&#123;tb[ti]=fr;tb[ti+<span class="hljs-number">1</span>]=fg;tb[ti+<span class="hljs-number">2</span>]=fb;tb[ti+<span class="hljs-number">3</span>]=fa&#125;&#125;<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(mode==<span class="hljs-number">3</span>)&#123;<span class="hljs-keyword">var</span> fa=sb[si+<span class="hljs-number">3</span>],fr=sb[si],fg=sb[si+<span class="hljs-number">1</span>],fb=sb[si+<span class="hljs-number">2</span>];<span class="hljs-keyword">var</span> ba=tb[ti+<span class="hljs-number">3</span>],br=tb[ti],bg=tb[ti+<span class="hljs-number">1</span>],bb=tb[ti+<span class="hljs-number">2</span>];<span class="hljs-keyword">if</span>(fa==ba&amp;&amp;fr==br&amp;&amp;fg==bg&amp;&amp;fb==bb)<span class="hljs-keyword">continue</span>;<span class="hljs-keyword">if</span>(fa&lt;<span class="hljs-number">220</span>&amp;&amp;ba&gt;<span class="hljs-number">20</span>)<span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>&#125;&#125;<span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>&#125;<span class="hljs-keyword">return</span>&#123;<span class="hljs-attr">decode</span>:decode,<span class="hljs-attr">toRGBA8</span>:toRGBA8,<span class="hljs-attr">_paeth</span>:_paeth,<span class="hljs-attr">_copyTile</span>:_copyTile,<span class="hljs-attr">_bin</span>:_bin&#125;&#125;)();(<span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)&#123;<span class="hljs-keyword">var</span> _copyTile=<span class="hljs-variable constant_">UPNG</span>.<span class="hljs-property">_copyTile</span>,_bin=<span class="hljs-variable constant_">UPNG</span>.<span class="hljs-property">_bin</span>,paeth=<span class="hljs-variable constant_">UPNG</span>.<span class="hljs-property">_paeth</span>;<span class="hljs-keyword">var</span> crcLib=&#123;<span class="hljs-attr">table</span>:(<span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)&#123;<span class="hljs-keyword">var</span> tab=<span class="hljs-keyword">new</span> <span class="hljs-title class_">Uint32Array</span>(<span class="hljs-number">256</span>);<span class="hljs-keyword">for</span>(<span class="hljs-keyword">var</span> n=<span class="hljs-number">0</span>;n&lt;<span class="hljs-number">256</span>;n++)&#123;<span class="hljs-keyword">var</span> c=n;<span class="hljs-keyword">for</span>(<span class="hljs-keyword">var</span> k=<span class="hljs-number">0</span>;k&lt;<span class="hljs-number">8</span>;k++)&#123;<span class="hljs-keyword">if</span>(c&amp;<span class="hljs-number">1</span>)c=<span class="hljs-number">0xedb88320</span>^(c&gt;&gt;&gt;<span class="hljs-number">1</span>);<span class="hljs-keyword">else</span> c=c&gt;&gt;&gt;<span class="hljs-number">1</span>&#125;tab[n]=c&#125;<span class="hljs-keyword">return</span> tab&#125;)(),<span class="hljs-attr">update</span>:<span class="hljs-keyword">function</span>(<span class="hljs-params">c,buf,off,len</span>)&#123;<span class="hljs-keyword">for</span>(<span class="hljs-keyword">var</span> i=<span class="hljs-number">0</span>;i&lt;len;i++)c=crcLib.<span class="hljs-property">table</span>[(c^buf[off+i])&amp;<span class="hljs-number">0xff</span>]^(c&gt;&gt;&gt;<span class="hljs-number">8</span>);<span class="hljs-keyword">return</span> c&#125;,<span class="hljs-attr">crc</span>:<span class="hljs-keyword">function</span>(<span class="hljs-params">b,o,l</span>)&#123;<span class="hljs-keyword">return</span> crcLib.<span class="hljs-title function_">update</span>(<span class="hljs-number">0xffffffff</span>,b,o,l)^<span class="hljs-number">0xffffffff</span>&#125;&#125;;<span class="hljs-keyword">function</span> <span class="hljs-title function_">addErr</span>(<span class="hljs-params">er,tg,ti,f</span>)&#123;tg[ti]+=(er[<span class="hljs-number">0</span>]*f)&gt;&gt;<span class="hljs-number">4</span>;tg[ti+<span class="hljs-number">1</span>]+=(er[<span class="hljs-number">1</span>]*f)&gt;&gt;<span class="hljs-number">4</span>;tg[ti+<span class="hljs-number">2</span>]+=(er[<span class="hljs-number">2</span>]*f)&gt;&gt;<span class="hljs-number">4</span>;tg[ti+<span class="hljs-number">3</span>]+=(er[<span class="hljs-number">3</span>]*f)&gt;&gt;<span class="hljs-number">4</span>&#125;<span class="hljs-keyword">function</span> <span class="hljs-title function_">N</span>(<span class="hljs-params">x</span>)&#123;<span class="hljs-keyword">return</span> <span class="hljs-title class_">Math</span>.<span class="hljs-title function_">max</span>(<span class="hljs-number">0</span>,<span class="hljs-title class_">Math</span>.<span class="hljs-title function_">min</span>(<span class="hljs-number">255</span>,x))&#125;<span class="hljs-keyword">function</span> <span class="hljs-title function_">D</span>(<span class="hljs-params">a,b</span>)&#123;<span class="hljs-keyword">var</span> dr=a[<span class="hljs-number">0</span>]-b[<span class="hljs-number">0</span>],dg=a[<span class="hljs-number">1</span>]-b[<span class="hljs-number">1</span>],db=a[<span class="hljs-number">2</span>]-b[<span class="hljs-number">2</span>],da=a[<span class="hljs-number">3</span>]-b[<span class="hljs-number">3</span>];<span class="hljs-keyword">return</span> dr*dr+dg*dg+db*db+da*da&#125;<span class="hljs-keyword">function</span> <span class="hljs-title function_">dither</span>(<span class="hljs-params">sb,w,h,plte,tb,oind,MTD</span>)&#123;<span class="hljs-keyword">if</span>(<span class="hljs-variable constant_">MTD</span>==<span class="hljs-literal">null</span>)<span class="hljs-variable constant_">MTD</span>=<span class="hljs-number">1</span>;<span class="hljs-keyword">var</span> pc=plte.<span class="hljs-property">length</span>,nplt=[],rads=[];<span class="hljs-keyword">for</span>(<span class="hljs-keyword">var</span> i=<span class="hljs-number">0</span>;i&lt;pc;i++)&#123;<span class="hljs-keyword">var</span> c=plte[i];nplt.<span class="hljs-title function_">push</span>([(c&gt;&gt;&gt;<span class="hljs-number">0</span>)&amp;<span class="hljs-number">255</span>,(c&gt;&gt;&gt;<span class="hljs-number">8</span>)&amp;<span class="hljs-number">255</span>,(c&gt;&gt;&gt;<span class="hljs-number">16</span>)&amp;<span class="hljs-number">255</span>,(c&gt;&gt;&gt;<span class="hljs-number">24</span>)&amp;<span class="hljs-number">255</span>])&#125;<span class="hljs-keyword">for</span>(<span class="hljs-keyword">var</span> i=<span class="hljs-number">0</span>;i&lt;pc;i++)&#123;<span class="hljs-keyword">var</span> ne=<span class="hljs-number">0xffffffff</span>,ni=<span class="hljs-number">0</span>;<span class="hljs-keyword">for</span>(<span class="hljs-keyword">var</span> j=<span class="hljs-number">0</span>;j&lt;pc;j++)&#123;<span class="hljs-keyword">var</span> ce=<span class="hljs-title function_">D</span>(nplt[i],nplt[j]);<span class="hljs-keyword">if</span>(j!=i&amp;&amp;ce&lt;ne)&#123;ne=ce;ni=j&#125;&#125;<span class="hljs-keyword">var</span> hd=<span class="hljs-title class_">Math</span>.<span class="hljs-title function_">sqrt</span>(ne)/<span class="hljs-number">2</span>;rads[i]=~~(hd*hd)&#125;<span class="hljs-keyword">var</span> tb32=<span class="hljs-keyword">new</span> <span class="hljs-title class_">Uint32Array</span>(tb.<span class="hljs-property">buffer</span>);<span class="hljs-keyword">var</span> err=<span class="hljs-keyword">new</span> <span class="hljs-title class_">Int16Array</span>(w*h*<span class="hljs-number">4</span>);<span class="hljs-keyword">var</span> S=<span class="hljs-number">4</span>,M=[<span class="hljs-number">0</span>,<span class="hljs-number">8</span>,<span class="hljs-number">2</span>,<span class="hljs-number">10</span>,<span class="hljs-number">12</span>,<span class="hljs-number">4</span>,<span class="hljs-number">14</span>,<span class="hljs-number">6</span>,<span class="hljs-number">3</span>,<span class="hljs-number">11</span>,<span class="hljs-number">1</span>,<span class="hljs-number">9</span>,<span class="hljs-number">15</span>,<span class="hljs-number">7</span>,<span class="hljs-number">13</span>,<span class="hljs-number">5</span>];<span class="hljs-keyword">for</span>(<span class="hljs-keyword">var</span> i=<span class="hljs-number">0</span>;i&lt;M.<span class="hljs-property">length</span>;i++)M[i]=<span class="hljs-number">255</span>*(-<span class="hljs-number">0.5</span>+(M[i]+<span class="hljs-number">0.5</span>)/(S*S));<span class="hljs-keyword">for</span>(<span class="hljs-keyword">var</span> y=<span class="hljs-number">0</span>;y&lt;h;y++)&#123;<span class="hljs-keyword">for</span>(<span class="hljs-keyword">var</span> x=<span class="hljs-number">0</span>;x&lt;w;x++)&#123;<span class="hljs-keyword">var</span> i=(y*w+x)*<span class="hljs-number">4</span>;<span class="hljs-keyword">var</span> cc;<span class="hljs-keyword">if</span>(<span class="hljs-variable constant_">MTD</span>!=<span class="hljs-number">2</span>)cc=[<span class="hljs-title function_">N</span>(sb[i]+err[i]),<span class="hljs-title function_">N</span>(sb[i+<span class="hljs-number">1</span>]+err[i+<span class="hljs-number">1</span>]),<span class="hljs-title function_">N</span>(sb[i+<span class="hljs-number">2</span>]+err[i+<span class="hljs-number">2</span>]),<span class="hljs-title function_">N</span>(sb[i+<span class="hljs-number">3</span>]+err[i+<span class="hljs-number">3</span>])];<span class="hljs-keyword">else</span>&#123;<span class="hljs-keyword">var</span> ce=M[(y&amp;(S-<span class="hljs-number">1</span>))*S+(x&amp;(S-<span class="hljs-number">1</span>))];cc=[<span class="hljs-title function_">N</span>(sb[i]+ce),<span class="hljs-title function_">N</span>(sb[i+<span class="hljs-number">1</span>]+ce),<span class="hljs-title function_">N</span>(sb[i+<span class="hljs-number">2</span>]+ce),<span class="hljs-title function_">N</span>(sb[i+<span class="hljs-number">3</span>]+ce)]&#125;<span class="hljs-keyword">var</span> ni=<span class="hljs-number">0</span>,nd=<span class="hljs-number">0xffffff</span>;<span class="hljs-keyword">for</span>(<span class="hljs-keyword">var</span> j=<span class="hljs-number">0</span>;j&lt;pc;j++)&#123;<span class="hljs-keyword">var</span> cd=<span class="hljs-title function_">D</span>(cc,nplt[j]);<span class="hljs-keyword">if</span>(cd&lt;nd)&#123;nd=cd;ni=j&#125;&#125;<span class="hljs-keyword">var</span> nc=nplt[ni];<span class="hljs-keyword">var</span> er=[cc[<span class="hljs-number">0</span>]-nc[<span class="hljs-number">0</span>],cc[<span class="hljs-number">1</span>]-nc[<span class="hljs-number">1</span>],cc[<span class="hljs-number">2</span>]-nc[<span class="hljs-number">2</span>],cc[<span class="hljs-number">3</span>]-nc[<span class="hljs-number">3</span>]];<span class="hljs-keyword">if</span>(<span class="hljs-variable constant_">MTD</span>==<span class="hljs-number">1</span>)&#123;<span class="hljs-keyword">if</span>(x!=w-<span class="hljs-number">1</span>)<span class="hljs-title function_">addErr</span>(er,err,i+<span class="hljs-number">4</span>,<span class="hljs-number">7</span>);<span class="hljs-keyword">if</span>(y!=h-<span class="hljs-number">1</span>)&#123;<span class="hljs-keyword">if</span>(x!=<span class="hljs-number">0</span>)<span class="hljs-title function_">addErr</span>(er,err,i+<span class="hljs-number">4</span>*w-<span class="hljs-number">4</span>,<span class="hljs-number">3</span>);<span class="hljs-title function_">addErr</span>(er,err,i+<span class="hljs-number">4</span>*w,<span class="hljs-number">5</span>);<span class="hljs-keyword">if</span>(x!=w-<span class="hljs-number">1</span>)<span class="hljs-title function_">addErr</span>(er,err,i+<span class="hljs-number">4</span>*w+<span class="hljs-number">4</span>,<span class="hljs-number">1</span>)&#125;&#125;oind[i&gt;&gt;<span class="hljs-number">2</span>]=ni;tb32[i&gt;&gt;<span class="hljs-number">2</span>]=plte[ni]&#125;&#125;&#125;<span class="hljs-keyword">function</span> <span class="hljs-title function_">encode</span>(<span class="hljs-params">bufs,w,h,ps,dels,tabs,forbidPlte</span>)&#123;<span class="hljs-keyword">if</span>(ps==<span class="hljs-literal">null</span>)ps=<span class="hljs-number">0</span>;<span class="hljs-keyword">if</span>(forbidPlte==<span class="hljs-literal">null</span>)forbidPlte=<span class="hljs-literal">false</span>;<span class="hljs-keyword">var</span> nimg=<span class="hljs-title function_">compress</span>(bufs,w,h,ps,[<span class="hljs-literal">false</span>,<span class="hljs-literal">false</span>,<span class="hljs-literal">false</span>,<span class="hljs-number">0</span>,forbidPlte,<span class="hljs-literal">false</span>]);<span class="hljs-title function_">compressPNG</span>(nimg,-<span class="hljs-number">1</span>);<span class="hljs-keyword">return</span> <span class="hljs-title function_">_main</span>(nimg,w,h,dels,tabs)&#125;<span class="hljs-keyword">function</span> <span class="hljs-title function_">encodeLL</span>(<span class="hljs-params">bufs,w,h,cc,ac,depth,dels,tabs</span>)&#123;<span class="hljs-keyword">var</span> nimg=&#123;<span class="hljs-attr">ctype</span>:<span class="hljs-number">0</span>+(cc==<span class="hljs-number">1</span>?<span class="hljs-number">0</span>:<span class="hljs-number">2</span>)+(ac==<span class="hljs-number">0</span>?<span class="hljs-number">0</span>:<span class="hljs-number">4</span>),<span class="hljs-attr">depth</span>:depth,<span class="hljs-attr">frames</span>:[]&#125;;<span class="hljs-keyword">var</span> time=<span class="hljs-title class_">Date</span>.<span class="hljs-title function_">now</span>();<span class="hljs-keyword">var</span> bipp=(cc+ac)*depth,bipl=bipp*w;<span class="hljs-keyword">for</span>(<span class="hljs-keyword">var</span> i=<span class="hljs-number">0</span>;i&lt;bufs.<span class="hljs-property">length</span>;i++)nimg.<span class="hljs-property">frames</span>.<span class="hljs-title function_">push</span>(&#123;<span class="hljs-attr">rect</span>:&#123;<span class="hljs-attr">x</span>:<span class="hljs-number">0</span>,<span class="hljs-attr">y</span>:<span class="hljs-number">0</span>,<span class="hljs-attr">width</span>:w,<span class="hljs-attr">height</span>:h&#125;,<span class="hljs-attr">img</span>:<span class="hljs-keyword">new</span> <span class="hljs-title class_">Uint8Array</span>(bufs[i]),<span class="hljs-attr">blend</span>:<span class="hljs-number">0</span>,<span class="hljs-attr">dispose</span>:<span class="hljs-number">1</span>,<span class="hljs-attr">bpp</span>:<span class="hljs-title class_">Math</span>.<span class="hljs-title function_">ceil</span>(bipp/<span class="hljs-number">8</span>),<span class="hljs-attr">bpl</span>:<span class="hljs-title class_">Math</span>.<span class="hljs-title function_">ceil</span>(bipl/<span class="hljs-number">8</span>)&#125;);<span class="hljs-title function_">compressPNG</span>(nimg,<span class="hljs-number">0</span>,<span class="hljs-literal">true</span>);<span class="hljs-keyword">var</span> out=<span class="hljs-title function_">_main</span>(nimg,w,h,dels,tabs);<span class="hljs-keyword">return</span> out&#125;<span class="hljs-keyword">function</span> <span class="hljs-title function_">_main</span>(<span class="hljs-params">nimg,w,h,dels,tabs</span>)&#123;<span class="hljs-keyword">if</span>(tabs==<span class="hljs-literal">null</span>)tabs=&#123;&#125;;<span class="hljs-keyword">var</span> crc=crcLib.<span class="hljs-property">crc</span>,wUi=_bin.<span class="hljs-property">writeUint</span>,wUs=_bin.<span class="hljs-property">writeUshort</span>,wAs=_bin.<span class="hljs-property">writeASCII</span>;<span class="hljs-keyword">var</span> offset=<span class="hljs-number">8</span>,anim=nimg.<span class="hljs-property">frames</span>.<span class="hljs-property">length</span>&gt;<span class="hljs-number">1</span>,pltAlpha=<span class="hljs-literal">false</span>;<span class="hljs-keyword">var</span> cicc;<span class="hljs-keyword">var</span> leng=<span class="hljs-number">8</span>+(<span class="hljs-number">16</span>+<span class="hljs-number">5</span>+<span class="hljs-number">4</span>)+(anim?<span class="hljs-number">20</span>:<span class="hljs-number">0</span>);<span class="hljs-keyword">if</span>(tabs[<span class="hljs-string">&#x27;sRGB&#x27;</span>]!=<span class="hljs-literal">null</span>)leng+=<span class="hljs-number">8</span>+<span class="hljs-number">1</span>+<span class="hljs-number">4</span>;<span class="hljs-keyword">if</span>(tabs[<span class="hljs-string">&#x27;pHYs&#x27;</span>]!=<span class="hljs-literal">null</span>)leng+=<span class="hljs-number">8</span>+<span class="hljs-number">9</span>+<span class="hljs-number">4</span>;<span class="hljs-keyword">if</span>(tabs[<span class="hljs-string">&#x27;iCCP&#x27;</span>]!=<span class="hljs-literal">null</span>)&#123;cicc=pako.<span class="hljs-title function_">deflate</span>(tabs[<span class="hljs-string">&#x27;iCCP&#x27;</span>]);leng+=<span class="hljs-number">8</span>+<span class="hljs-number">11</span>+<span class="hljs-number">2</span>+cicc.<span class="hljs-property">length</span>+<span class="hljs-number">4</span>&#125;<span class="hljs-keyword">if</span>(nimg.<span class="hljs-property">ctype</span>==<span class="hljs-number">3</span>)&#123;<span class="hljs-keyword">var</span> dl=nimg.<span class="hljs-property">plte</span>.<span class="hljs-property">length</span>;<span class="hljs-keyword">for</span>(<span class="hljs-keyword">var</span> i=<span class="hljs-number">0</span>;i&lt;dl;i++)<span class="hljs-keyword">if</span>(nimg.<span class="hljs-property">plte</span>[i]&gt;&gt;&gt;<span class="hljs-number">24</span>!=<span class="hljs-number">255</span>)pltAlpha=<span class="hljs-literal">true</span>;leng+=<span class="hljs-number">8</span>+dl*<span class="hljs-number">3</span>+<span class="hljs-number">4</span>+(pltAlpha?<span class="hljs-number">8</span>+dl*<span class="hljs-number">1</span>+<span class="hljs-number">4</span>:<span class="hljs-number">0</span>)&#125;<span class="hljs-keyword">for</span>(<span class="hljs-keyword">var</span> j=<span class="hljs-number">0</span>;j&lt;nimg.<span class="hljs-property">frames</span>.<span class="hljs-property">length</span>;j++)&#123;<span class="hljs-keyword">var</span> fr=nimg.<span class="hljs-property">frames</span>[j];<span class="hljs-keyword">if</span>(anim)leng+=<span class="hljs-number">38</span>;leng+=fr.<span class="hljs-property">cimg</span>.<span class="hljs-property">length</span>+<span class="hljs-number">12</span>;<span class="hljs-keyword">if</span>(j!=<span class="hljs-number">0</span>)leng+=<span class="hljs-number">4</span>&#125;leng+=<span class="hljs-number">12</span>;<span class="hljs-keyword">var</span> data=<span class="hljs-keyword">new</span> <span class="hljs-title class_">Uint8Array</span>(leng);<span class="hljs-keyword">var</span> wr=[<span class="hljs-number">0x89</span>,<span class="hljs-number">0x50</span>,<span class="hljs-number">0x4e</span>,<span class="hljs-number">0x47</span>,<span class="hljs-number">0x0d</span>,<span class="hljs-number">0x0a</span>,<span class="hljs-number">0x1a</span>,<span class="hljs-number">0x0a</span>];<span class="hljs-keyword">for</span>(<span class="hljs-keyword">var</span> i=<span class="hljs-number">0</span>;i&lt;<span class="hljs-number">8</span>;i++)data[i]=wr[i];<span class="hljs-title function_">wUi</span>(data,offset,<span class="hljs-number">13</span>);offset+=<span class="hljs-number">4</span>;<span class="hljs-title function_">wAs</span>(data,offset,<span class="hljs-string">&#x27;IHDR&#x27;</span>);offset+=<span class="hljs-number">4</span>;<span class="hljs-title function_">wUi</span>(data,offset,w);offset+=<span class="hljs-number">4</span>;<span class="hljs-title function_">wUi</span>(data,offset,h);offset+=<span class="hljs-number">4</span>;data[offset]=nimg.<span class="hljs-property">depth</span>;offset++;data[offset]=nimg.<span class="hljs-property">ctype</span>;offset++;data[offset]=<span class="hljs-number">0</span>;offset++;data[offset]=<span class="hljs-number">0</span>;offset++;data[offset]=<span class="hljs-number">0</span>;offset++;<span class="hljs-title function_">wUi</span>(data,offset,<span class="hljs-title function_">crc</span>(data,offset-<span class="hljs-number">17</span>,<span class="hljs-number">17</span>));offset+=<span class="hljs-number">4</span>;<span class="hljs-keyword">if</span>(tabs[<span class="hljs-string">&#x27;sRGB&#x27;</span>]!=<span class="hljs-literal">null</span>)&#123;<span class="hljs-title function_">wUi</span>(data,offset,<span class="hljs-number">1</span>);offset+=<span class="hljs-number">4</span>;<span class="hljs-title function_">wAs</span>(data,offset,<span class="hljs-string">&#x27;sRGB&#x27;</span>);offset+=<span class="hljs-number">4</span>;data[offset]=tabs[<span class="hljs-string">&#x27;sRGB&#x27;</span>];offset++;<span class="hljs-title function_">wUi</span>(data,offset,<span class="hljs-title function_">crc</span>(data,offset-<span class="hljs-number">5</span>,<span class="hljs-number">5</span>));offset+=<span class="hljs-number">4</span>&#125;<span class="hljs-keyword">if</span>(tabs[<span class="hljs-string">&#x27;iCCP&#x27;</span>]!=<span class="hljs-literal">null</span>)&#123;<span class="hljs-keyword">var</span> sl=<span class="hljs-number">11</span>+<span class="hljs-number">2</span>+cicc.<span class="hljs-property">length</span>;<span class="hljs-title function_">wUi</span>(data,offset,sl);offset+=<span class="hljs-number">4</span>;<span class="hljs-title function_">wAs</span>(data,offset,<span class="hljs-string">&#x27;iCCP&#x27;</span>);offset+=<span class="hljs-number">4</span>;<span class="hljs-title function_">wAs</span>(data,offset,<span class="hljs-string">&#x27;ICC profile&#x27;</span>);offset+=<span class="hljs-number">11</span>;offset+=<span class="hljs-number">2</span>;data.<span class="hljs-title function_">set</span>(cicc,offset);offset+=cicc.<span class="hljs-property">length</span>;<span class="hljs-title function_">wUi</span>(data,offset,<span class="hljs-title function_">crc</span>(data,offset-(sl+<span class="hljs-number">4</span>),sl+<span class="hljs-number">4</span>));offset+=<span class="hljs-number">4</span>&#125;<span class="hljs-keyword">if</span>(tabs[<span class="hljs-string">&#x27;pHYs&#x27;</span>]!=<span class="hljs-literal">null</span>)&#123;<span class="hljs-title function_">wUi</span>(data,offset,<span class="hljs-number">9</span>);offset+=<span class="hljs-number">4</span>;<span class="hljs-title function_">wAs</span>(data,offset,<span class="hljs-string">&#x27;pHYs&#x27;</span>);offset+=<span class="hljs-number">4</span>;<span class="hljs-title function_">wUi</span>(data,offset,tabs[<span class="hljs-string">&#x27;pHYs&#x27;</span>][<span class="hljs-number">0</span>]);offset+=<span class="hljs-number">4</span>;<span class="hljs-title function_">wUi</span>(data,offset,tabs[<span class="hljs-string">&#x27;pHYs&#x27;</span>][<span class="hljs-number">1</span>]);offset+=<span class="hljs-number">4</span>;data[offset]=tabs[<span class="hljs-string">&#x27;pHYs&#x27;</span>][<span class="hljs-number">2</span>];offset++;<span class="hljs-title function_">wUi</span>(data,offset,<span class="hljs-title function_">crc</span>(data,offset-<span class="hljs-number">13</span>,<span class="hljs-number">13</span>));offset+=<span class="hljs-number">4</span>&#125;<span class="hljs-keyword">if</span>(anim)&#123;<span class="hljs-title function_">wUi</span>(data,offset,<span class="hljs-number">8</span>);offset+=<span class="hljs-number">4</span>;<span class="hljs-title function_">wAs</span>(data,offset,<span class="hljs-string">&#x27;acTL&#x27;</span>);offset+=<span class="hljs-number">4</span>;<span class="hljs-title function_">wUi</span>(data,offset,nimg.<span class="hljs-property">frames</span>.<span class="hljs-property">length</span>);offset+=<span class="hljs-number">4</span>;<span class="hljs-title function_">wUi</span>(data,offset,tabs[<span class="hljs-string">&#x27;loop&#x27;</span>]!=<span class="hljs-literal">null</span>?tabs[<span class="hljs-string">&#x27;loop&#x27;</span>]:<span class="hljs-number">0</span>);offset+=<span class="hljs-number">4</span>;<span class="hljs-title function_">wUi</span>(data,offset,<span class="hljs-title function_">crc</span>(data,offset-<span class="hljs-number">12</span>,<span class="hljs-number">12</span>));offset+=<span class="hljs-number">4</span>&#125;<span class="hljs-keyword">if</span>(nimg.<span class="hljs-property">ctype</span>==<span class="hljs-number">3</span>)&#123;<span class="hljs-keyword">var</span> dl=nimg.<span class="hljs-property">plte</span>.<span class="hljs-property">length</span>;<span class="hljs-title function_">wUi</span>(data,offset,dl*<span class="hljs-number">3</span>);offset+=<span class="hljs-number">4</span>;<span class="hljs-title function_">wAs</span>(data,offset,<span class="hljs-string">&#x27;PLTE&#x27;</span>);offset+=<span class="hljs-number">4</span>;<span class="hljs-keyword">for</span>(<span class="hljs-keyword">var</span> i=<span class="hljs-number">0</span>;i&lt;dl;i++)&#123;<span class="hljs-keyword">var</span> ti=i*<span class="hljs-number">3</span>,c=nimg.<span class="hljs-property">plte</span>[i],r=c&amp;<span class="hljs-number">255</span>,g=(c&gt;&gt;&gt;<span class="hljs-number">8</span>)&amp;<span class="hljs-number">255</span>,b=(c&gt;&gt;&gt;<span class="hljs-number">16</span>)&amp;<span class="hljs-number">255</span>;data[offset+ti+<span class="hljs-number">0</span>]=r;data[offset+ti+<span class="hljs-number">1</span>]=g;data[offset+ti+<span class="hljs-number">2</span>]=b&#125;offset+=dl*<span class="hljs-number">3</span>;<span class="hljs-title function_">wUi</span>(data,offset,<span class="hljs-title function_">crc</span>(data,offset-dl*<span class="hljs-number">3</span>-<span class="hljs-number">4</span>,dl*<span class="hljs-number">3</span>+<span class="hljs-number">4</span>));offset+=<span class="hljs-number">4</span>;<span class="hljs-keyword">if</span>(pltAlpha)&#123;<span class="hljs-title function_">wUi</span>(data,offset,dl);offset+=<span class="hljs-number">4</span>;<span class="hljs-title function_">wAs</span>(data,offset,<span class="hljs-string">&#x27;tRNS&#x27;</span>);offset+=<span class="hljs-number">4</span>;<span class="hljs-keyword">for</span>(<span class="hljs-keyword">var</span> i=<span class="hljs-number">0</span>;i&lt;dl;i++)data[offset+i]=(nimg.<span class="hljs-property">plte</span>[i]&gt;&gt;&gt;<span class="hljs-number">24</span>)&amp;<span class="hljs-number">255</span>;offset+=dl;<span class="hljs-title function_">wUi</span>(data,offset,<span class="hljs-title function_">crc</span>(data,offset-dl-<span class="hljs-number">4</span>,dl+<span class="hljs-number">4</span>));offset+=<span class="hljs-number">4</span>&#125;&#125;<span class="hljs-keyword">var</span> fi=<span class="hljs-number">0</span>;<span class="hljs-keyword">for</span>(<span class="hljs-keyword">var</span> j=<span class="hljs-number">0</span>;j&lt;nimg.<span class="hljs-property">frames</span>.<span class="hljs-property">length</span>;j++)&#123;<span class="hljs-keyword">var</span> fr=nimg.<span class="hljs-property">frames</span>[j];<span class="hljs-keyword">if</span>(anim)&#123;<span class="hljs-title function_">wUi</span>(data,offset,<span class="hljs-number">26</span>);offset+=<span class="hljs-number">4</span>;<span class="hljs-title function_">wAs</span>(data,offset,<span class="hljs-string">&#x27;fcTL&#x27;</span>);offset+=<span class="hljs-number">4</span>;<span class="hljs-title function_">wUi</span>(data,offset,fi++);offset+=<span class="hljs-number">4</span>;<span class="hljs-title function_">wUi</span>(data,offset,fr.<span class="hljs-property">rect</span>.<span class="hljs-property">width</span>);offset+=<span class="hljs-number">4</span>;<span class="hljs-title function_">wUi</span>(data,offset,fr.<span class="hljs-property">rect</span>.<span class="hljs-property">height</span>);offset+=<span class="hljs-number">4</span>;<span class="hljs-title function_">wUi</span>(data,offset,fr.<span class="hljs-property">rect</span>.<span class="hljs-property">x</span>);offset+=<span class="hljs-number">4</span>;<span class="hljs-title function_">wUi</span>(data,offset,fr.<span class="hljs-property">rect</span>.<span class="hljs-property">y</span>);offset+=<span class="hljs-number">4</span>;<span class="hljs-title function_">wUs</span>(data,offset,dels[j]);offset+=<span class="hljs-number">2</span>;<span class="hljs-title function_">wUs</span>(data,offset,<span class="hljs-number">1000</span>);offset+=<span class="hljs-number">2</span>;data[offset]=fr.<span class="hljs-property">dispose</span>;offset++;data[offset]=fr.<span class="hljs-property">blend</span>;offset++;<span class="hljs-title function_">wUi</span>(data,offset,<span class="hljs-title function_">crc</span>(data,offset-<span class="hljs-number">30</span>,<span class="hljs-number">30</span>));offset+=<span class="hljs-number">4</span>&#125;<span class="hljs-keyword">var</span> imgd=fr.<span class="hljs-property">cimg</span>,dl=imgd.<span class="hljs-property">length</span>;<span class="hljs-title function_">wUi</span>(data,offset,dl+(j==<span class="hljs-number">0</span>?<span class="hljs-number">0</span>:<span class="hljs-number">4</span>));offset+=<span class="hljs-number">4</span>;<span class="hljs-keyword">var</span> ioff=offset;<span class="hljs-title function_">wAs</span>(data,offset,j==<span class="hljs-number">0</span>?<span class="hljs-string">&#x27;IDAT&#x27;</span>:<span class="hljs-string">&#x27;fdAT&#x27;</span>);offset+=<span class="hljs-number">4</span>;<span class="hljs-keyword">if</span>(j!=<span class="hljs-number">0</span>)&#123;<span class="hljs-title function_">wUi</span>(data,offset,fi++);offset+=<span class="hljs-number">4</span>&#125;data.<span class="hljs-title function_">set</span>(imgd,offset);offset+=dl;<span class="hljs-title function_">wUi</span>(data,offset,<span class="hljs-title function_">crc</span>(data,ioff,offset-ioff));offset+=<span class="hljs-number">4</span>&#125;<span class="hljs-title function_">wUi</span>(data,offset,<span class="hljs-number">0</span>);offset+=<span class="hljs-number">4</span>;<span class="hljs-title function_">wAs</span>(data,offset,<span class="hljs-string">&#x27;IEND&#x27;</span>);offset+=<span class="hljs-number">4</span>;<span class="hljs-title function_">wUi</span>(data,offset,<span class="hljs-title function_">crc</span>(data,offset-<span class="hljs-number">4</span>,<span class="hljs-number">4</span>));offset+=<span class="hljs-number">4</span>;<span class="hljs-keyword">return</span> data.<span class="hljs-property">buffer</span>&#125;<span class="hljs-keyword">function</span> <span class="hljs-title function_">compressPNG</span>(<span class="hljs-params">out,filter,levelZero</span>)&#123;<span class="hljs-keyword">for</span>(<span class="hljs-keyword">var</span> i=<span class="hljs-number">0</span>;i&lt;out.<span class="hljs-property">frames</span>.<span class="hljs-property">length</span>;i++)&#123;<span class="hljs-keyword">var</span> frm=out.<span class="hljs-property">frames</span>[i],nw=frm.<span class="hljs-property">rect</span>.<span class="hljs-property">width</span>,nh=frm.<span class="hljs-property">rect</span>.<span class="hljs-property">height</span>;<span class="hljs-keyword">var</span> fdata=<span class="hljs-keyword">new</span> <span class="hljs-title class_">Uint8Array</span>(nh*frm.<span class="hljs-property">bpl</span>+nh);frm.<span class="hljs-property">cimg</span>=<span class="hljs-title function_">_filterZero</span>(frm.<span class="hljs-property">img</span>,nh,frm.<span class="hljs-property">bpp</span>,frm.<span class="hljs-property">bpl</span>,fdata,filter,levelZero)&#125;&#125;<span class="hljs-keyword">function</span> <span class="hljs-title function_">compress</span>(<span class="hljs-params">bufs,w,h,ps,prms</span>)&#123;<span class="hljs-keyword">var</span> onlyBlend=prms[<span class="hljs-number">0</span>],evenCrd=prms[<span class="hljs-number">1</span>],forbidPrev=prms[<span class="hljs-number">2</span>],minBits=prms[<span class="hljs-number">3</span>],forbidPlte=prms[<span class="hljs-number">4</span>],dith=prms[<span class="hljs-number">5</span>];<span class="hljs-keyword">var</span> ctype=<span class="hljs-number">6</span>,depth=<span class="hljs-number">8</span>,alphaAnd=<span class="hljs-number">255</span>;<span class="hljs-keyword">for</span>(<span class="hljs-keyword">var</span> j=<span class="hljs-number">0</span>;j&lt;bufs.<span class="hljs-property">length</span>;j++)&#123;<span class="hljs-keyword">var</span> img=<span class="hljs-keyword">new</span> <span class="hljs-title class_">Uint8Array</span>(bufs[j]),ilen=img.<span class="hljs-property">length</span>;<span class="hljs-keyword">for</span>(<span class="hljs-keyword">var</span> i=<span class="hljs-number">0</span>;i&lt;ilen;i+=<span class="hljs-number">4</span>)alphaAnd&amp;=img[i+<span class="hljs-number">3</span>]&#125;<span class="hljs-keyword">var</span> gotAlpha=alphaAnd!=<span class="hljs-number">255</span>;<span class="hljs-keyword">var</span> frms=<span class="hljs-title function_">framize</span>(bufs,w,h,onlyBlend,evenCrd,forbidPrev);<span class="hljs-keyword">var</span> cmap=&#123;&#125;,plte=[],inds=[];<span class="hljs-keyword">if</span>(ps!=<span class="hljs-number">0</span>)&#123;<span class="hljs-keyword">var</span> nbufs=[];<span class="hljs-keyword">for</span>(<span class="hljs-keyword">var</span> i=<span class="hljs-number">0</span>;i&lt;frms.<span class="hljs-property">length</span>;i++)nbufs.<span class="hljs-title function_">push</span>(frms[i].<span class="hljs-property">img</span>.<span class="hljs-property">buffer</span>);<span class="hljs-keyword">var</span> abuf=<span class="hljs-title function_">concatRGBA</span>(nbufs),qres=<span class="hljs-title function_">quantize</span>(abuf,ps);<span class="hljs-keyword">for</span>(<span class="hljs-keyword">var</span> i=<span class="hljs-number">0</span>;i&lt;qres.<span class="hljs-property">plte</span>.<span class="hljs-property">length</span>;i++)plte.<span class="hljs-title function_">push</span>(qres.<span class="hljs-property">plte</span>[i].<span class="hljs-property">est</span>.<span class="hljs-property">rgba</span>);<span class="hljs-keyword">var</span> cof=<span class="hljs-number">0</span>;<span class="hljs-keyword">for</span>(<span class="hljs-keyword">var</span> i=<span class="hljs-number">0</span>;i&lt;frms.<span class="hljs-property">length</span>;i++)&#123;<span class="hljs-keyword">var</span> frm=frms[i],bln=frm.<span class="hljs-property">img</span>.<span class="hljs-property">length</span>,ind=<span class="hljs-keyword">new</span> <span class="hljs-title class_">Uint8Array</span>(qres.<span class="hljs-property">inds</span>.<span class="hljs-property">buffer</span>,cof&gt;&gt;<span class="hljs-number">2</span>,bln&gt;&gt;<span class="hljs-number">2</span>);inds.<span class="hljs-title function_">push</span>(ind);<span class="hljs-keyword">var</span> bb=<span class="hljs-keyword">new</span> <span class="hljs-title class_">Uint8Array</span>(qres.<span class="hljs-property">abuf</span>,cof,bln);<span class="hljs-keyword">if</span>(dith)<span class="hljs-title function_">dither</span>(frm.<span class="hljs-property">img</span>,frm.<span class="hljs-property">rect</span>.<span class="hljs-property">width</span>,frm.<span class="hljs-property">rect</span>.<span class="hljs-property">height</span>,plte,bb,ind);frm.<span class="hljs-property">img</span>.<span class="hljs-title function_">set</span>(bb);cof+=bln&#125;&#125;<span class="hljs-keyword">else</span>&#123;<span class="hljs-keyword">for</span>(<span class="hljs-keyword">var</span> j=<span class="hljs-number">0</span>;j&lt;frms.<span class="hljs-property">length</span>;j++)&#123;<span class="hljs-keyword">var</span> frm=frms[j],img32=<span class="hljs-keyword">new</span> <span class="hljs-title class_">Uint32Array</span>(frm.<span class="hljs-property">img</span>.<span class="hljs-property">buffer</span>),nw=frm.<span class="hljs-property">rect</span>.<span class="hljs-property">width</span>,ilen=img32.<span class="hljs-property">length</span>;<span class="hljs-keyword">var</span> ind=<span class="hljs-keyword">new</span> <span class="hljs-title class_">Uint8Array</span>(ilen);inds.<span class="hljs-title function_">push</span>(ind);<span class="hljs-keyword">for</span>(<span class="hljs-keyword">var</span> i=<span class="hljs-number">0</span>;i&lt;ilen;i++)&#123;<span class="hljs-keyword">var</span> c=img32[i];<span class="hljs-keyword">if</span>(i!=<span class="hljs-number">0</span>&amp;&amp;c==img32[i-<span class="hljs-number">1</span>])ind[i]=ind[i-<span class="hljs-number">1</span>];<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(i&gt;nw&amp;&amp;c==img32[i-nw])ind[i]=ind[i-nw];<span class="hljs-keyword">else</span>&#123;<span class="hljs-keyword">var</span> cmc=cmap[c];<span class="hljs-keyword">if</span>(cmc==<span class="hljs-literal">null</span>)&#123;cmap[c]=cmc=plte.<span class="hljs-property">length</span>;plte.<span class="hljs-title function_">push</span>(c);<span class="hljs-keyword">if</span>(plte.<span class="hljs-property">length</span>&gt;=<span class="hljs-number">300</span>)<span class="hljs-keyword">break</span>&#125;ind[i]=cmc&#125;&#125;&#125;&#125;<span class="hljs-keyword">var</span> cc=plte.<span class="hljs-property">length</span>;<span class="hljs-keyword">if</span>(cc&lt;=<span class="hljs-number">256</span>&amp;&amp;forbidPlte==<span class="hljs-literal">false</span>)&#123;<span class="hljs-keyword">if</span>(cc&lt;=<span class="hljs-number">2</span>)depth=<span class="hljs-number">1</span>;<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(cc&lt;=<span class="hljs-number">4</span>)depth=<span class="hljs-number">2</span>;<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(cc&lt;=<span class="hljs-number">16</span>)depth=<span class="hljs-number">4</span>;<span class="hljs-keyword">else</span> depth=<span class="hljs-number">8</span>;depth=<span class="hljs-title class_">Math</span>.<span class="hljs-title function_">max</span>(depth,minBits)&#125;<span class="hljs-keyword">for</span>(<span class="hljs-keyword">var</span> j=<span class="hljs-number">0</span>;j&lt;frms.<span class="hljs-property">length</span>;j++)&#123;<span class="hljs-keyword">var</span> frm=frms[j],nx=frm.<span class="hljs-property">rect</span>.<span class="hljs-property">x</span>,ny=frm.<span class="hljs-property">rect</span>.<span class="hljs-property">y</span>,nw=frm.<span class="hljs-property">rect</span>.<span class="hljs-property">width</span>,nh=frm.<span class="hljs-property">rect</span>.<span class="hljs-property">height</span>;<span class="hljs-keyword">var</span> cimg=frm.<span class="hljs-property">img</span>,cimg32=<span class="hljs-keyword">new</span> <span class="hljs-title class_">Uint32Array</span>(cimg.<span class="hljs-property">buffer</span>);<span class="hljs-keyword">var</span> bpl=<span class="hljs-number">4</span>*nw,bpp=<span class="hljs-number">4</span>;<span class="hljs-keyword">if</span>(cc&lt;=<span class="hljs-number">256</span>&amp;&amp;forbidPlte==<span class="hljs-literal">false</span>)&#123;bpl=<span class="hljs-title class_">Math</span>.<span class="hljs-title function_">ceil</span>((depth*nw)/<span class="hljs-number">8</span>);<span class="hljs-keyword">var</span> nimg=<span class="hljs-keyword">new</span> <span class="hljs-title class_">Uint8Array</span>(bpl*nh);<span class="hljs-keyword">var</span> inj=inds[j];<span class="hljs-keyword">for</span>(<span class="hljs-keyword">var</span> y=<span class="hljs-number">0</span>;y&lt;nh;y++)&#123;<span class="hljs-keyword">var</span> i=y*bpl,ii=y*nw;<span class="hljs-keyword">if</span>(depth==<span class="hljs-number">8</span>)<span class="hljs-keyword">for</span>(<span class="hljs-keyword">var</span> x=<span class="hljs-number">0</span>;x&lt;nw;x++)nimg[i+x]=inj[ii+x];<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(depth==<span class="hljs-number">4</span>)<span class="hljs-keyword">for</span>(<span class="hljs-keyword">var</span> x=<span class="hljs-number">0</span>;x&lt;nw;x++)nimg[i+(x&gt;&gt;<span class="hljs-number">1</span>)]|=inj[ii+x]&lt;&lt;(<span class="hljs-number">4</span>-(x&amp;<span class="hljs-number">1</span>)*<span class="hljs-number">4</span>);<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(depth==<span class="hljs-number">2</span>)<span class="hljs-keyword">for</span>(<span class="hljs-keyword">var</span> x=<span class="hljs-number">0</span>;x&lt;nw;x++)nimg[i+(x&gt;&gt;<span class="hljs-number">2</span>)]|=inj[ii+x]&lt;&lt;(<span class="hljs-number">6</span>-(x&amp;<span class="hljs-number">3</span>)*<span class="hljs-number">2</span>);<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(depth==<span class="hljs-number">1</span>)<span class="hljs-keyword">for</span>(<span class="hljs-keyword">var</span> x=<span class="hljs-number">0</span>;x&lt;nw;x++)nimg[i+(x&gt;&gt;<span class="hljs-number">3</span>)]|=inj[ii+x]&lt;&lt;(<span class="hljs-number">7</span>-(x&amp;<span class="hljs-number">7</span>)*<span class="hljs-number">1</span>)&#125;cimg=nimg;ctype=<span class="hljs-number">3</span>;bpp=<span class="hljs-number">1</span>&#125;<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(gotAlpha==<span class="hljs-literal">false</span>&amp;&amp;frms.<span class="hljs-property">length</span>==<span class="hljs-number">1</span>)&#123;<span class="hljs-keyword">var</span> nimg=<span class="hljs-keyword">new</span> <span class="hljs-title class_">Uint8Array</span>(nw*nh*<span class="hljs-number">3</span>),area=nw*nh;<span class="hljs-keyword">for</span>(<span class="hljs-keyword">var</span> i=<span class="hljs-number">0</span>;i&lt;area;i++)&#123;<span class="hljs-keyword">var</span> ti=i*<span class="hljs-number">3</span>,qi=i*<span class="hljs-number">4</span>;nimg[ti]=cimg[qi];nimg[ti+<span class="hljs-number">1</span>]=cimg[qi+<span class="hljs-number">1</span>];nimg[ti+<span class="hljs-number">2</span>]=cimg[qi+<span class="hljs-number">2</span>]&#125;cimg=nimg;ctype=<span class="hljs-number">2</span>;bpp=<span class="hljs-number">3</span>;bpl=<span class="hljs-number">3</span>*nw&#125;frm.<span class="hljs-property">img</span>=cimg;frm.<span class="hljs-property">bpl</span>=bpl;frm.<span class="hljs-property">bpp</span>=bpp&#125;<span class="hljs-keyword">return</span>&#123;<span class="hljs-attr">ctype</span>:ctype,<span class="hljs-attr">depth</span>:depth,<span class="hljs-attr">plte</span>:plte,<span class="hljs-attr">frames</span>:frms&#125;&#125;<span class="hljs-keyword">function</span> <span class="hljs-title function_">framize</span>(<span class="hljs-params">bufs,w,h,alwaysBlend,evenCrd,forbidPrev</span>)&#123;<span class="hljs-keyword">var</span> frms=[];<span class="hljs-keyword">for</span>(<span class="hljs-keyword">var</span> j=<span class="hljs-number">0</span>;j&lt;bufs.<span class="hljs-property">length</span>;j++)&#123;<span class="hljs-keyword">var</span> cimg=<span class="hljs-keyword">new</span> <span class="hljs-title class_">Uint8Array</span>(bufs[j]),cimg32=<span class="hljs-keyword">new</span> <span class="hljs-title class_">Uint32Array</span>(cimg.<span class="hljs-property">buffer</span>);<span class="hljs-keyword">var</span> nimg;<span class="hljs-keyword">var</span> nx=<span class="hljs-number">0</span>,ny=<span class="hljs-number">0</span>,nw=w,nh=h,blend=alwaysBlend?<span class="hljs-number">1</span>:<span class="hljs-number">0</span>;<span class="hljs-keyword">if</span>(j!=<span class="hljs-number">0</span>)&#123;<span class="hljs-keyword">var</span> tlim=forbidPrev||alwaysBlend||j==<span class="hljs-number">1</span>||frms[j-<span class="hljs-number">2</span>].<span class="hljs-property">dispose</span>!=<span class="hljs-number">0</span>?<span class="hljs-number">1</span>:<span class="hljs-number">2</span>,tstp=<span class="hljs-number">0</span>,tarea=<span class="hljs-number">1e9</span>;<span class="hljs-keyword">for</span>(<span class="hljs-keyword">var</span> it=<span class="hljs-number">0</span>;it&lt;tlim;it++)&#123;<span class="hljs-keyword">var</span> pimg=<span class="hljs-keyword">new</span> <span class="hljs-title class_">Uint8Array</span>(bufs[j-<span class="hljs-number">1</span>-it]),p32=<span class="hljs-keyword">new</span> <span class="hljs-title class_">Uint32Array</span>(bufs[j-<span class="hljs-number">1</span>-it]);<span class="hljs-keyword">var</span> mix=w,miy=h,max=-<span class="hljs-number">1</span>,may=-<span class="hljs-number">1</span>;<span class="hljs-keyword">for</span>(<span class="hljs-keyword">var</span> y=<span class="hljs-number">0</span>;y&lt;h;y++)<span class="hljs-keyword">for</span>(<span class="hljs-keyword">var</span> x=<span class="hljs-number">0</span>;x&lt;w;x++)&#123;<span class="hljs-keyword">var</span> i=y*w+x;<span class="hljs-keyword">if</span>(cimg32[i]!=p32[i])&#123;<span class="hljs-keyword">if</span>(x&lt;mix)mix=x;<span class="hljs-keyword">if</span>(x&gt;max)max=x;<span class="hljs-keyword">if</span>(y&lt;miy)miy=y;<span class="hljs-keyword">if</span>(y&gt;may)may=y&#125;&#125;<span class="hljs-keyword">if</span>(max==-<span class="hljs-number">1</span>)mix=miy=max=may=<span class="hljs-number">0</span>;<span class="hljs-keyword">if</span>(evenCrd)&#123;<span class="hljs-keyword">if</span>((mix&amp;<span class="hljs-number">1</span>)==<span class="hljs-number">1</span>)mix--;<span class="hljs-keyword">if</span>((miy&amp;<span class="hljs-number">1</span>)==<span class="hljs-number">1</span>)miy--&#125;<span class="hljs-keyword">var</span> sarea=(max-mix+<span class="hljs-number">1</span>)*(may-miy+<span class="hljs-number">1</span>);<span class="hljs-keyword">if</span>(sarea&lt;tarea)&#123;tarea=sarea;tstp=it;nx=mix;ny=miy;nw=max-mix+<span class="hljs-number">1</span>;nh=may-miy+<span class="hljs-number">1</span>&#125;&#125;<span class="hljs-keyword">var</span> pimg=<span class="hljs-keyword">new</span> <span class="hljs-title class_">Uint8Array</span>(bufs[j-<span class="hljs-number">1</span>-tstp]);<span class="hljs-keyword">if</span>(tstp==<span class="hljs-number">1</span>)frms[j-<span class="hljs-number">1</span>].<span class="hljs-property">dispose</span>=<span class="hljs-number">2</span>;nimg=<span class="hljs-keyword">new</span> <span class="hljs-title class_">Uint8Array</span>(nw*nh*<span class="hljs-number">4</span>);<span class="hljs-title function_">_copyTile</span>(pimg,w,h,nimg,nw,nh,-nx,-ny,<span class="hljs-number">0</span>);blend=<span class="hljs-title function_">_copyTile</span>(cimg,w,h,nimg,nw,nh,-nx,-ny,<span class="hljs-number">3</span>)?<span class="hljs-number">1</span>:<span class="hljs-number">0</span>;<span class="hljs-keyword">if</span>(blend==<span class="hljs-number">1</span>)<span class="hljs-title function_">_prepareDiff</span>(cimg,w,h,nimg,&#123;<span class="hljs-attr">x</span>:nx,<span class="hljs-attr">y</span>:ny,<span class="hljs-attr">width</span>:nw,<span class="hljs-attr">height</span>:nh&#125;);<span class="hljs-keyword">else</span> <span class="hljs-title function_">_copyTile</span>(cimg,w,h,nimg,nw,nh,-nx,-ny,<span class="hljs-number">0</span>)&#125;<span class="hljs-keyword">else</span> nimg=cimg.<span class="hljs-title function_">slice</span>(<span class="hljs-number">0</span>);frms.<span class="hljs-title function_">push</span>(&#123;<span class="hljs-attr">rect</span>:&#123;<span class="hljs-attr">x</span>:nx,<span class="hljs-attr">y</span>:ny,<span class="hljs-attr">width</span>:nw,<span class="hljs-attr">height</span>:nh&#125;,<span class="hljs-attr">img</span>:nimg,<span class="hljs-attr">blend</span>:blend,<span class="hljs-attr">dispose</span>:<span class="hljs-number">0</span>&#125;)&#125;<span class="hljs-keyword">if</span>(alwaysBlend)<span class="hljs-keyword">for</span>(<span class="hljs-keyword">var</span> j=<span class="hljs-number">0</span>;j&lt;frms.<span class="hljs-property">length</span>;j++)&#123;<span class="hljs-keyword">var</span> frm=frms[j];<span class="hljs-keyword">if</span>(frm.<span class="hljs-property">blend</span>==<span class="hljs-number">1</span>)<span class="hljs-keyword">continue</span>;<span class="hljs-keyword">var</span> r0=frm.<span class="hljs-property">rect</span>,r1=frms[j-<span class="hljs-number">1</span>].<span class="hljs-property">rect</span>;<span class="hljs-keyword">var</span> miX=<span class="hljs-title class_">Math</span>.<span class="hljs-title function_">min</span>(r0.<span class="hljs-property">x</span>,r1.<span class="hljs-property">x</span>),miY=<span class="hljs-title class_">Math</span>.<span class="hljs-title function_">min</span>(r0.<span class="hljs-property">y</span>,r1.<span class="hljs-property">y</span>);<span class="hljs-keyword">var</span> maX=<span class="hljs-title class_">Math</span>.<span class="hljs-title function_">max</span>(r0.<span class="hljs-property">x</span>+r0.<span class="hljs-property">width</span>,r1.<span class="hljs-property">x</span>+r1.<span class="hljs-property">width</span>),maY=<span class="hljs-title class_">Math</span>.<span class="hljs-title function_">max</span>(r0.<span class="hljs-property">y</span>+r0.<span class="hljs-property">height</span>,r1.<span class="hljs-property">y</span>+r1.<span class="hljs-property">height</span>);<span class="hljs-keyword">var</span> r=&#123;<span class="hljs-attr">x</span>:miX,<span class="hljs-attr">y</span>:miY,<span class="hljs-attr">width</span>:maX-miX,<span class="hljs-attr">height</span>:maY-miY&#125;;frms[j-<span class="hljs-number">1</span>].<span class="hljs-property">dispose</span>=<span class="hljs-number">1</span>;<span class="hljs-keyword">if</span>(j-<span class="hljs-number">1</span>!=<span class="hljs-number">0</span>)<span class="hljs-title function_">_updateFrame</span>(bufs,w,h,frms,j-<span class="hljs-number">1</span>,r,evenCrd);<span class="hljs-title function_">_updateFrame</span>(bufs,w,h,frms,j,r,evenCrd)&#125;<span class="hljs-keyword">var</span> area=<span class="hljs-number">0</span>;<span class="hljs-keyword">if</span>(bufs.<span class="hljs-property">length</span>!=<span class="hljs-number">1</span>)<span class="hljs-keyword">for</span>(<span class="hljs-keyword">var</span> i=<span class="hljs-number">0</span>;i&lt;frms.<span class="hljs-property">length</span>;i++)&#123;<span class="hljs-keyword">var</span> frm=frms[i];area+=frm.<span class="hljs-property">rect</span>.<span class="hljs-property">width</span>*frm.<span class="hljs-property">rect</span>.<span class="hljs-property">height</span>&#125;<span class="hljs-keyword">return</span> frms&#125;<span class="hljs-keyword">function</span> <span class="hljs-title function_">_updateFrame</span>(<span class="hljs-params">bufs,w,h,frms,i,r,evenCrd</span>)&#123;<span class="hljs-keyword">var</span> <span class="hljs-variable constant_">U8</span>=<span class="hljs-title class_">Uint8Array</span>,<span class="hljs-variable constant_">U32</span>=<span class="hljs-title class_">Uint32Array</span>;<span class="hljs-keyword">var</span> pimg=<span class="hljs-keyword">new</span> <span class="hljs-title function_">U8</span>(bufs[i-<span class="hljs-number">1</span>]),pimg32=<span class="hljs-keyword">new</span> <span class="hljs-title function_">U32</span>(bufs[i-<span class="hljs-number">1</span>]),nimg=i+<span class="hljs-number">1</span>&lt;bufs.<span class="hljs-property">length</span>?<span class="hljs-keyword">new</span> <span class="hljs-title function_">U8</span>(bufs[i+<span class="hljs-number">1</span>]):<span class="hljs-literal">null</span>;<span class="hljs-keyword">var</span> cimg=<span class="hljs-keyword">new</span> <span class="hljs-title function_">U8</span>(bufs[i]),cimg32=<span class="hljs-keyword">new</span> <span class="hljs-title function_">U32</span>(cimg.<span class="hljs-property">buffer</span>);<span class="hljs-keyword">var</span> mix=w,miy=h,max=-<span class="hljs-number">1</span>,may=-<span class="hljs-number">1</span>;<span class="hljs-keyword">for</span>(<span class="hljs-keyword">var</span> y=<span class="hljs-number">0</span>;y&lt;r.<span class="hljs-property">height</span>;y++)<span class="hljs-keyword">for</span>(<span class="hljs-keyword">var</span> x=<span class="hljs-number">0</span>;x&lt;r.<span class="hljs-property">width</span>;x++)&#123;<span class="hljs-keyword">var</span> cx=r.<span class="hljs-property">x</span>+x,cy=r.<span class="hljs-property">y</span>+y;<span class="hljs-keyword">var</span> j=cy*w+cx,cc=cimg32[j];<span class="hljs-keyword">if</span>(cc==<span class="hljs-number">0</span>||(frms[i-<span class="hljs-number">1</span>].<span class="hljs-property">dispose</span>==<span class="hljs-number">0</span>&amp;&amp;pimg32[j]==cc&amp;&amp;(nimg==<span class="hljs-literal">null</span>||nimg[j*<span class="hljs-number">4</span>+<span class="hljs-number">3</span>]!=<span class="hljs-number">0</span>)))&#123;&#125;<span class="hljs-keyword">else</span>&#123;<span class="hljs-keyword">if</span>(cx&lt;mix)mix=cx;<span class="hljs-keyword">if</span>(cx&gt;max)max=cx;<span class="hljs-keyword">if</span>(cy&lt;miy)miy=cy;<span class="hljs-keyword">if</span>(cy&gt;may)may=cy&#125;&#125;<span class="hljs-keyword">if</span>(max==-<span class="hljs-number">1</span>)mix=miy=max=may=<span class="hljs-number">0</span>;<span class="hljs-keyword">if</span>(evenCrd)&#123;<span class="hljs-keyword">if</span>((mix&amp;<span class="hljs-number">1</span>)==<span class="hljs-number">1</span>)mix--;<span class="hljs-keyword">if</span>((miy&amp;<span class="hljs-number">1</span>)==<span class="hljs-number">1</span>)miy--&#125;r=&#123;<span class="hljs-attr">x</span>:mix,<span class="hljs-attr">y</span>:miy,<span class="hljs-attr">width</span>:max-mix+<span class="hljs-number">1</span>,<span class="hljs-attr">height</span>:may-miy+<span class="hljs-number">1</span>&#125;;<span class="hljs-keyword">var</span> fr=frms[i];fr.<span class="hljs-property">rect</span>=r;fr.<span class="hljs-property">blend</span>=<span class="hljs-number">1</span>;fr.<span class="hljs-property">img</span>=<span class="hljs-keyword">new</span> <span class="hljs-title class_">Uint8Array</span>(r.<span class="hljs-property">width</span>*r.<span class="hljs-property">height</span>*<span class="hljs-number">4</span>);<span class="hljs-keyword">if</span>(frms[i-<span class="hljs-number">1</span>].<span class="hljs-property">dispose</span>==<span class="hljs-number">0</span>)&#123;<span class="hljs-title function_">_copyTile</span>(pimg,w,h,fr.<span class="hljs-property">img</span>,r.<span class="hljs-property">width</span>,r.<span class="hljs-property">height</span>,-r.<span class="hljs-property">x</span>,-r.<span class="hljs-property">y</span>,<span class="hljs-number">0</span>);<span class="hljs-title function_">_prepareDiff</span>(cimg,w,h,fr.<span class="hljs-property">img</span>,r)&#125;<span class="hljs-keyword">else</span> <span class="hljs-title function_">_copyTile</span>(cimg,w,h,fr.<span class="hljs-property">img</span>,r.<span class="hljs-property">width</span>,r.<span class="hljs-property">height</span>,-r.<span class="hljs-property">x</span>,-r.<span class="hljs-property">y</span>,<span class="hljs-number">0</span>)&#125;<span class="hljs-keyword">function</span> <span class="hljs-title function_">_prepareDiff</span>(<span class="hljs-params">cimg,w,h,nimg,rec</span>)&#123;<span class="hljs-title function_">_copyTile</span>(cimg,w,h,nimg,rec.<span class="hljs-property">width</span>,rec.<span class="hljs-property">height</span>,-rec.<span class="hljs-property">x</span>,-rec.<span class="hljs-property">y</span>,<span class="hljs-number">2</span>)&#125;<span class="hljs-keyword">function</span> <span class="hljs-title function_">_filterZero</span>(<span class="hljs-params">img,h,bpp,bpl,data,filter,levelZero</span>)&#123;<span class="hljs-keyword">var</span> fls=[],ftry=[<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span>,<span class="hljs-number">4</span>];<span class="hljs-keyword">if</span>(filter!=-<span class="hljs-number">1</span>)ftry=[filter];<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(h*bpl&gt;<span class="hljs-number">500000</span>||bpp==<span class="hljs-number">1</span>)ftry=[<span class="hljs-number">0</span>];<span class="hljs-keyword">var</span> opts;<span class="hljs-keyword">if</span>(levelZero)opts=&#123;<span class="hljs-attr">level</span>:<span class="hljs-number">0</span>&#125;;<span class="hljs-keyword">var</span> <span class="hljs-variable constant_">CMPR</span>=data.<span class="hljs-property">length</span>&gt;<span class="hljs-number">10e6</span>&amp;&amp;<span class="hljs-variable language_">window</span>.<span class="hljs-property">UZIP</span>!=<span class="hljs-literal">null</span>?<span class="hljs-variable language_">window</span>.<span class="hljs-property">UZIP</span>:pako;<span class="hljs-keyword">var</span> time=<span class="hljs-title class_">Date</span>.<span class="hljs-title function_">now</span>();<span class="hljs-keyword">for</span>(<span class="hljs-keyword">var</span> i=<span class="hljs-number">0</span>;i&lt;ftry.<span class="hljs-property">length</span>;i++)&#123;<span class="hljs-keyword">for</span>(<span class="hljs-keyword">var</span> y=<span class="hljs-number">0</span>;y&lt;h;y++)<span class="hljs-title function_">_filterLine</span>(data,img,y,bpl,bpp,ftry[i]);fls.<span class="hljs-title function_">push</span>(<span class="hljs-variable constant_">CMPR</span>[<span class="hljs-string">&#x27;deflate&#x27;</span>](data,opts))&#125;<span class="hljs-keyword">var</span> ti,tsize=<span class="hljs-number">1e9</span>;<span class="hljs-keyword">for</span>(<span class="hljs-keyword">var</span> i=<span class="hljs-number">0</span>;i&lt;fls.<span class="hljs-property">length</span>;i++)<span class="hljs-keyword">if</span>(fls[i].<span class="hljs-property">length</span>&lt;tsize)&#123;ti=i;tsize=fls[i].<span class="hljs-property">length</span>&#125;<span class="hljs-keyword">return</span> fls[ti]&#125;<span class="hljs-keyword">function</span> <span class="hljs-title function_">_filterLine</span>(<span class="hljs-params">data,img,y,bpl,bpp,type</span>)&#123;<span class="hljs-keyword">var</span> i=y*bpl,di=i+y;data[di]=type;di++;<span class="hljs-keyword">if</span>(type==<span class="hljs-number">0</span>)&#123;<span class="hljs-keyword">if</span>(bpl&lt;<span class="hljs-number">500</span>)<span class="hljs-keyword">for</span>(<span class="hljs-keyword">var</span> x=<span class="hljs-number">0</span>;x&lt;bpl;x++)data[di+x]=img[i+x];<span class="hljs-keyword">else</span> data.<span class="hljs-title function_">set</span>(<span class="hljs-keyword">new</span> <span class="hljs-title class_">Uint8Array</span>(img.<span class="hljs-property">buffer</span>,i,bpl),di)&#125;<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(type==<span class="hljs-number">1</span>)&#123;<span class="hljs-keyword">for</span>(<span class="hljs-keyword">var</span> x=<span class="hljs-number">0</span>;x&lt;bpp;x++)data[di+x]=img[i+x];<span class="hljs-keyword">for</span>(<span class="hljs-keyword">var</span> x=bpp;x&lt;bpl;x++)data[di+x]=(img[i+x]-img[i+x-bpp]+<span class="hljs-number">256</span>)&amp;<span class="hljs-number">255</span>&#125;<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(y==<span class="hljs-number">0</span>)&#123;<span class="hljs-keyword">for</span>(<span class="hljs-keyword">var</span> x=<span class="hljs-number">0</span>;x&lt;bpp;x++)data[di+x]=img[i+x];<span class="hljs-keyword">if</span>(type==<span class="hljs-number">2</span>)<span class="hljs-keyword">for</span>(<span class="hljs-keyword">var</span> x=bpp;x&lt;bpl;x++)data[di+x]=img[i+x];<span class="hljs-keyword">if</span>(type==<span class="hljs-number">3</span>)<span class="hljs-keyword">for</span>(<span class="hljs-keyword">var</span> x=bpp;x&lt;bpl;x++)data[di+x]=(img[i+x]-(img[i+x-bpp]&gt;&gt;<span class="hljs-number">1</span>)+<span class="hljs-number">256</span>)&amp;<span class="hljs-number">255</span>;<span class="hljs-keyword">if</span>(type==<span class="hljs-number">4</span>)<span class="hljs-keyword">for</span>(<span class="hljs-keyword">var</span> x=bpp;x&lt;bpl;x++)data[di+x]=(img[i+x]-<span class="hljs-title function_">paeth</span>(img[i+x-bpp],<span class="hljs-number">0</span>,<span class="hljs-number">0</span>)+<span class="hljs-number">256</span>)&amp;<span class="hljs-number">255</span>&#125;<span class="hljs-keyword">else</span>&#123;<span class="hljs-keyword">if</span>(type==<span class="hljs-number">2</span>)&#123;<span class="hljs-keyword">for</span>(<span class="hljs-keyword">var</span> x=<span class="hljs-number">0</span>;x&lt;bpl;x++)data[di+x]=(img[i+x]+<span class="hljs-number">256</span>-img[i+x-bpl])&amp;<span class="hljs-number">255</span>&#125;<span class="hljs-keyword">if</span>(type==<span class="hljs-number">3</span>)&#123;<span class="hljs-keyword">for</span>(<span class="hljs-keyword">var</span> x=<span class="hljs-number">0</span>;x&lt;bpp;x++)data[di+x]=(img[i+x]+<span class="hljs-number">256</span>-(img[i+x-bpl]&gt;&gt;<span class="hljs-number">1</span>))&amp;<span class="hljs-number">255</span>;<span class="hljs-keyword">for</span>(<span class="hljs-keyword">var</span> x=bpp;x&lt;bpl;x++)data[di+x]=(img[i+x]+<span class="hljs-number">256</span>-((img[i+x-bpl]+img[i+x-bpp])&gt;&gt;<span class="hljs-number">1</span>))&amp;<span class="hljs-number">255</span>&#125;<span class="hljs-keyword">if</span>(type==<span class="hljs-number">4</span>)&#123;<span class="hljs-keyword">for</span>(<span class="hljs-keyword">var</span> x=<span class="hljs-number">0</span>;x&lt;bpp;x++)data[di+x]=(img[i+x]+<span class="hljs-number">256</span>-<span class="hljs-title function_">paeth</span>(<span class="hljs-number">0</span>,img[i+x-bpl],<span class="hljs-number">0</span>))&amp;<span class="hljs-number">255</span>;<span class="hljs-keyword">for</span>(<span class="hljs-keyword">var</span> x=bpp;x&lt;bpl;x++)data[di+x]=(img[i+x]+<span class="hljs-number">256</span>-<span class="hljs-title function_">paeth</span>(img[i+x-bpp],img[i+x-bpl],img[i+x-bpp-bpl]))&amp;<span class="hljs-number">255</span>&#125;&#125;&#125;<span class="hljs-keyword">function</span> <span class="hljs-title function_">quantize</span>(<span class="hljs-params">abuf,ps,doKmeans</span>)&#123;<span class="hljs-keyword">var</span> time=<span class="hljs-title class_">Date</span>.<span class="hljs-title function_">now</span>();<span class="hljs-keyword">var</span> sb=<span class="hljs-keyword">new</span> <span class="hljs-title class_">Uint8Array</span>(abuf),tb=sb.<span class="hljs-title function_">slice</span>(<span class="hljs-number">0</span>),tb32=<span class="hljs-keyword">new</span> <span class="hljs-title class_">Uint32Array</span>(tb.<span class="hljs-property">buffer</span>);<span class="hljs-keyword">var</span> <span class="hljs-variable constant_">KD</span>=<span class="hljs-title function_">getKDtree</span>(tb,ps);<span class="hljs-keyword">var</span> root=<span class="hljs-variable constant_">KD</span>[<span class="hljs-number">0</span>],leafs=<span class="hljs-variable constant_">KD</span>[<span class="hljs-number">1</span>],K=leafs.<span class="hljs-property">length</span>;<span class="hljs-keyword">var</span> cl32=<span class="hljs-keyword">new</span> <span class="hljs-title class_">Uint32Array</span>(K),clr8=<span class="hljs-keyword">new</span> <span class="hljs-title class_">Uint8Array</span>(cl32.<span class="hljs-property">buffer</span>);<span class="hljs-keyword">for</span>(<span class="hljs-keyword">var</span> i=<span class="hljs-number">0</span>;i&lt;K;i++)cl32[i]=leafs[i].<span class="hljs-property">est</span>.<span class="hljs-property">rgba</span>;<span class="hljs-keyword">var</span> len=sb.<span class="hljs-property">length</span>;<span class="hljs-keyword">var</span> inds=<span class="hljs-keyword">new</span> <span class="hljs-title class_">Uint8Array</span>(len&gt;&gt;<span class="hljs-number">2</span>),nd;<span class="hljs-keyword">if</span>(K&lt;=<span class="hljs-number">60</span>)&#123;<span class="hljs-title function_">findNearest</span>(sb,inds,clr8);<span class="hljs-title function_">remap</span>(inds,tb32,cl32)&#125;<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(sb.<span class="hljs-property">length</span>&lt;<span class="hljs-number">32e6</span>)<span class="hljs-keyword">for</span>(<span class="hljs-keyword">var</span> i=<span class="hljs-number">0</span>;i&lt;len;i+=<span class="hljs-number">4</span>)&#123;<span class="hljs-keyword">var</span> r=sb[i]*(<span class="hljs-number">1</span>/<span class="hljs-number">255</span>),g=sb[i+<span class="hljs-number">1</span>]*(<span class="hljs-number">1</span>/<span class="hljs-number">255</span>),b=sb[i+<span class="hljs-number">2</span>]*(<span class="hljs-number">1</span>/<span class="hljs-number">255</span>),a=sb[i+<span class="hljs-number">3</span>]*(<span class="hljs-number">1</span>/<span class="hljs-number">255</span>);nd=<span class="hljs-title function_">getNearest</span>(root,r,g,b,a);inds[i&gt;&gt;<span class="hljs-number">2</span>]=nd.<span class="hljs-property">ind</span>;tb32[i&gt;&gt;<span class="hljs-number">2</span>]=nd.<span class="hljs-property">est</span>.<span class="hljs-property">rgba</span>&#125;<span class="hljs-keyword">else</span> <span class="hljs-keyword">for</span>(<span class="hljs-keyword">var</span> i=<span class="hljs-number">0</span>;i&lt;len;i+=<span class="hljs-number">4</span>)&#123;<span class="hljs-keyword">var</span> r=sb[i]*(<span class="hljs-number">1</span>/<span class="hljs-number">255</span>),g=sb[i+<span class="hljs-number">1</span>]*(<span class="hljs-number">1</span>/<span class="hljs-number">255</span>),b=sb[i+<span class="hljs-number">2</span>]*(<span class="hljs-number">1</span>/<span class="hljs-number">255</span>),a=sb[i+<span class="hljs-number">3</span>]*(<span class="hljs-number">1</span>/<span class="hljs-number">255</span>);nd=root;<span class="hljs-keyword">while</span>(nd.<span class="hljs-property">left</span>)nd=<span class="hljs-title function_">planeDst</span>(nd.<span class="hljs-property">est</span>,r,g,b,a)&lt;=<span class="hljs-number">0</span>?nd.<span class="hljs-property">left</span>:nd.<span class="hljs-property">right</span>;inds[i&gt;&gt;<span class="hljs-number">2</span>]=nd.<span class="hljs-property">ind</span>;tb32[i&gt;&gt;<span class="hljs-number">2</span>]=nd.<span class="hljs-property">est</span>.<span class="hljs-property">rgba</span>&#125;<span class="hljs-keyword">if</span>(doKmeans||sb.<span class="hljs-property">length</span>*K&lt;<span class="hljs-number">10</span>*<span class="hljs-number">4e6</span>)&#123;<span class="hljs-keyword">var</span> le=<span class="hljs-number">1e9</span>;<span class="hljs-keyword">for</span>(<span class="hljs-keyword">var</span> i=<span class="hljs-number">0</span>;i&lt;<span class="hljs-number">10</span>;i++)&#123;<span class="hljs-keyword">var</span> ce=<span class="hljs-title function_">kmeans</span>(sb,inds,clr8);<span class="hljs-keyword">if</span>(ce/le&gt;<span class="hljs-number">0.997</span>)<span class="hljs-keyword">break</span>;le=ce&#125;<span class="hljs-keyword">for</span>(<span class="hljs-keyword">var</span> i=<span class="hljs-number">0</span>;i&lt;K;i++)leafs[i].<span class="hljs-property">est</span>.<span class="hljs-property">rgba</span>=cl32[i];<span class="hljs-title function_">remap</span>(inds,tb32,cl32)&#125;<span class="hljs-keyword">return</span>&#123;<span class="hljs-attr">abuf</span>:tb.<span class="hljs-property">buffer</span>,<span class="hljs-attr">inds</span>:inds,<span class="hljs-attr">plte</span>:leafs&#125;&#125;<span class="hljs-keyword">function</span> <span class="hljs-title function_">remap</span>(<span class="hljs-params">inds,tb32,pl32</span>)&#123;<span class="hljs-keyword">for</span>(<span class="hljs-keyword">var</span> i=<span class="hljs-number">0</span>;i&lt;inds.<span class="hljs-property">length</span>;i++)tb32[i]=pl32[inds[i]]&#125;<span class="hljs-keyword">function</span> <span class="hljs-title function_">kmeans</span>(<span class="hljs-params">sb,inds,plte</span>)&#123;<span class="hljs-title function_">updatePalette</span>(sb,inds,plte);<span class="hljs-keyword">var</span> err=<span class="hljs-title function_">findNearest</span>(sb,inds,plte);<span class="hljs-keyword">return</span> err&#125;<span class="hljs-keyword">function</span> <span class="hljs-title function_">updatePalette</span>(<span class="hljs-params">sb,inds,plte</span>)&#123;<span class="hljs-keyword">var</span> K=plte.<span class="hljs-property">length</span>&gt;&gt;&gt;<span class="hljs-number">2</span>;<span class="hljs-keyword">var</span> sums=<span class="hljs-keyword">new</span> <span class="hljs-title class_">Uint32Array</span>(K*<span class="hljs-number">4</span>),cnts=<span class="hljs-keyword">new</span> <span class="hljs-title class_">Uint32Array</span>(K);<span class="hljs-keyword">for</span>(<span class="hljs-keyword">var</span> i=<span class="hljs-number">0</span>;i&lt;sb.<span class="hljs-property">length</span>;i+=<span class="hljs-number">4</span>)&#123;<span class="hljs-keyword">var</span> ind=inds[i&gt;&gt;&gt;<span class="hljs-number">2</span>],qi=ind*<span class="hljs-number">4</span>;cnts[ind]++;sums[qi]+=sb[i];sums[qi+<span class="hljs-number">1</span>]+=sb[i+<span class="hljs-number">1</span>];sums[qi+<span class="hljs-number">2</span>]+=sb[i+<span class="hljs-number">2</span>];sums[qi+<span class="hljs-number">3</span>]+=sb[i+<span class="hljs-number">3</span>]&#125;<span class="hljs-keyword">for</span>(<span class="hljs-keyword">var</span> i=<span class="hljs-number">0</span>;i&lt;plte.<span class="hljs-property">length</span>;i++)plte[i]=<span class="hljs-title class_">Math</span>.<span class="hljs-title function_">round</span>(sums[i]/cnts[i&gt;&gt;&gt;<span class="hljs-number">2</span>])&#125;<span class="hljs-keyword">function</span> <span class="hljs-title function_">findNearest</span>(<span class="hljs-params">sb,inds,plte</span>)&#123;<span class="hljs-keyword">var</span> terr=<span class="hljs-number">0</span>,K=plte.<span class="hljs-property">length</span>&gt;&gt;&gt;<span class="hljs-number">2</span>;<span class="hljs-keyword">var</span> nd=[];<span class="hljs-keyword">for</span>(<span class="hljs-keyword">var</span> i=<span class="hljs-number">0</span>;i&lt;K;i++)&#123;<span class="hljs-keyword">var</span> qi=i*<span class="hljs-number">4</span>;<span class="hljs-keyword">var</span> r=plte[qi],g=plte[qi+<span class="hljs-number">1</span>],b=plte[qi+<span class="hljs-number">2</span>],a=plte[qi+<span class="hljs-number">3</span>],ti=<span class="hljs-number">0</span>,te=<span class="hljs-number">1e9</span>;<span class="hljs-keyword">for</span>(<span class="hljs-keyword">var</span> j=<span class="hljs-number">0</span>;j&lt;K;j++)&#123;<span class="hljs-keyword">if</span>(i==j)<span class="hljs-keyword">continue</span>;<span class="hljs-keyword">var</span> qj=j*<span class="hljs-number">4</span>,dr=r-plte[qj],dg=g-plte[qj+<span class="hljs-number">1</span>],db=b-plte[qj+<span class="hljs-number">2</span>],da=a-plte[qj+<span class="hljs-number">3</span>];<span class="hljs-keyword">var</span> err=dr*dr+dg*dg+db*db+da*da;<span class="hljs-keyword">if</span>(err&lt;te)&#123;te=err;ti=j&#125;&#125;nd[i]=<span class="hljs-title class_">Math</span>.<span class="hljs-title function_">sqrt</span>(te)*<span class="hljs-number">0.5</span>;nd[i]=nd[i]*nd[i]&#125;<span class="hljs-keyword">for</span>(<span class="hljs-keyword">var</span> i=<span class="hljs-number">0</span>;i&lt;sb.<span class="hljs-property">length</span>;i+=<span class="hljs-number">4</span>)&#123;<span class="hljs-keyword">var</span> r=sb[i],g=sb[i+<span class="hljs-number">1</span>],b=sb[i+<span class="hljs-number">2</span>],a=sb[i+<span class="hljs-number">3</span>];<span class="hljs-keyword">var</span> ti=inds[i&gt;&gt;&gt;<span class="hljs-number">2</span>],qi=ti*<span class="hljs-number">4</span>,dr=r-plte[qi],dg=g-plte[qi+<span class="hljs-number">1</span>],db=b-plte[qi+<span class="hljs-number">2</span>],da=a-plte[qi+<span class="hljs-number">3</span>],te=dr*dr+dg*dg+db*db+da*da;<span class="hljs-keyword">if</span>(te&gt;nd[ti])<span class="hljs-keyword">for</span>(<span class="hljs-keyword">var</span> j=<span class="hljs-number">0</span>;j&lt;K;j++)&#123;qi=j*<span class="hljs-number">4</span>;dr=r-plte[qi];dg=g-plte[qi+<span class="hljs-number">1</span>];db=b-plte[qi+<span class="hljs-number">2</span>];da=a-plte[qi+<span class="hljs-number">3</span>];<span class="hljs-keyword">var</span> err=dr*dr+dg*dg+db*db+da*da;<span class="hljs-keyword">if</span>(err&lt;te)&#123;te=err;ti=j;<span class="hljs-keyword">if</span>(te&lt;nd[j])<span class="hljs-keyword">break</span>&#125;&#125;inds[i&gt;&gt;&gt;<span class="hljs-number">2</span>]=ti;terr+=te&#125;<span class="hljs-keyword">return</span> terr/(sb.<span class="hljs-property">length</span>&gt;&gt;&gt;<span class="hljs-number">2</span>)&#125;<span class="hljs-keyword">function</span> <span class="hljs-title function_">getKDtree</span>(<span class="hljs-params">nimg,ps,err</span>)&#123;<span class="hljs-keyword">if</span>(err==<span class="hljs-literal">null</span>)err=<span class="hljs-number">0.0001</span>;<span class="hljs-keyword">var</span> nimg32=<span class="hljs-keyword">new</span> <span class="hljs-title class_">Uint32Array</span>(nimg.<span class="hljs-property">buffer</span>);<span class="hljs-keyword">var</span> root=&#123;<span class="hljs-attr">i0</span>:<span class="hljs-number">0</span>,<span class="hljs-attr">i1</span>:nimg.<span class="hljs-property">length</span>,<span class="hljs-attr">bst</span>:<span class="hljs-literal">null</span>,<span class="hljs-attr">est</span>:<span class="hljs-literal">null</span>,<span class="hljs-attr">tdst</span>:<span class="hljs-number">0</span>,<span class="hljs-attr">left</span>:<span class="hljs-literal">null</span>,<span class="hljs-attr">right</span>:<span class="hljs-literal">null</span>&#125;;root.<span class="hljs-property">bst</span>=<span class="hljs-title function_">stats</span>(nimg,root.<span class="hljs-property">i0</span>,root.<span class="hljs-property">i1</span>);root.<span class="hljs-property">est</span>=<span class="hljs-title function_">estats</span>(root.<span class="hljs-property">bst</span>);<span class="hljs-keyword">var</span> leafs=[root];<span class="hljs-keyword">while</span>(leafs.<span class="hljs-property">length</span>&lt;ps)&#123;<span class="hljs-keyword">var</span> maxL=<span class="hljs-number">0</span>,mi=<span class="hljs-number">0</span>;<span class="hljs-keyword">for</span>(<span class="hljs-keyword">var</span> i=<span class="hljs-number">0</span>;i&lt;leafs.<span class="hljs-property">length</span>;i++)<span class="hljs-keyword">if</span>(leafs[i].<span class="hljs-property">est</span>.<span class="hljs-property">L</span>&gt;maxL)&#123;maxL=leafs[i].<span class="hljs-property">est</span>.<span class="hljs-property">L</span>;mi=i&#125;<span class="hljs-keyword">if</span>(maxL&lt;err)<span class="hljs-keyword">break</span>;<span class="hljs-keyword">var</span> node=leafs[mi];<span class="hljs-keyword">var</span> s0=<span class="hljs-title function_">splitPixels</span>(nimg,nimg32,node.<span class="hljs-property">i0</span>,node.<span class="hljs-property">i1</span>,node.<span class="hljs-property">est</span>.<span class="hljs-property">e</span>,node.<span class="hljs-property">est</span>.<span class="hljs-property">eMq255</span>);<span class="hljs-keyword">var</span> s0wrong=node.<span class="hljs-property">i0</span>&gt;=s0||node.<span class="hljs-property">i1</span>&lt;=s0;<span class="hljs-keyword">if</span>(s0wrong)&#123;node.<span class="hljs-property">est</span>.<span class="hljs-property">L</span>=<span class="hljs-number">0</span>;<span class="hljs-keyword">continue</span>&#125;<span class="hljs-keyword">var</span> ln=&#123;<span class="hljs-attr">i0</span>:node.<span class="hljs-property">i0</span>,<span class="hljs-attr">i1</span>:s0,<span class="hljs-attr">bst</span>:<span class="hljs-literal">null</span>,<span class="hljs-attr">est</span>:<span class="hljs-literal">null</span>,<span class="hljs-attr">tdst</span>:<span class="hljs-number">0</span>,<span class="hljs-attr">left</span>:<span class="hljs-literal">null</span>,<span class="hljs-attr">right</span>:<span class="hljs-literal">null</span>&#125;;ln.<span class="hljs-property">bst</span>=<span class="hljs-title function_">stats</span>(nimg,ln.<span class="hljs-property">i0</span>,ln.<span class="hljs-property">i1</span>);ln.<span class="hljs-property">est</span>=<span class="hljs-title function_">estats</span>(ln.<span class="hljs-property">bst</span>);<span class="hljs-keyword">var</span> rn=&#123;<span class="hljs-attr">i0</span>:s0,<span class="hljs-attr">i1</span>:node.<span class="hljs-property">i1</span>,<span class="hljs-attr">bst</span>:<span class="hljs-literal">null</span>,<span class="hljs-attr">est</span>:<span class="hljs-literal">null</span>,<span class="hljs-attr">tdst</span>:<span class="hljs-number">0</span>,<span class="hljs-attr">left</span>:<span class="hljs-literal">null</span>,<span class="hljs-attr">right</span>:<span class="hljs-literal">null</span>&#125;;rn.<span class="hljs-property">bst</span>=&#123;<span class="hljs-attr">R</span>:[],<span class="hljs-attr">m</span>:[],<span class="hljs-attr">N</span>:node.<span class="hljs-property">bst</span>.<span class="hljs-property">N</span>-ln.<span class="hljs-property">bst</span>.<span class="hljs-property">N</span>&#125;;<span class="hljs-keyword">for</span>(<span class="hljs-keyword">var</span> i=<span class="hljs-number">0</span>;i&lt;<span class="hljs-number">16</span>;i++)rn.<span class="hljs-property">bst</span>.<span class="hljs-property">R</span>[i]=node.<span class="hljs-property">bst</span>.<span class="hljs-property">R</span>[i]-ln.<span class="hljs-property">bst</span>.<span class="hljs-property">R</span>[i];<span class="hljs-keyword">for</span>(<span class="hljs-keyword">var</span> i=<span class="hljs-number">0</span>;i&lt;<span class="hljs-number">4</span>;i++)rn.<span class="hljs-property">bst</span>.<span class="hljs-property">m</span>[i]=node.<span class="hljs-property">bst</span>.<span class="hljs-property">m</span>[i]-ln.<span class="hljs-property">bst</span>.<span class="hljs-property">m</span>[i];rn.<span class="hljs-property">est</span>=<span class="hljs-title function_">estats</span>(rn.<span class="hljs-property">bst</span>);node.<span class="hljs-property">left</span>=ln;node.<span class="hljs-property">right</span>=rn;leafs[mi]=ln;leafs.<span class="hljs-title function_">push</span>(rn)&#125;leafs.<span class="hljs-title function_">sort</span>(<span class="hljs-keyword">function</span>(<span class="hljs-params">a,b</span>)&#123;<span class="hljs-keyword">return</span> b.<span class="hljs-property">bst</span>.<span class="hljs-property">N</span>-a.<span class="hljs-property">bst</span>.<span class="hljs-property">N</span>&#125;);<span class="hljs-keyword">for</span>(<span class="hljs-keyword">var</span> i=<span class="hljs-number">0</span>;i&lt;leafs.<span class="hljs-property">length</span>;i++)leafs[i].<span class="hljs-property">ind</span>=i;<span class="hljs-keyword">return</span>[root,leafs]&#125;<span class="hljs-keyword">function</span> <span class="hljs-title function_">getNearest</span>(<span class="hljs-params">nd,r,g,b,a</span>)&#123;<span class="hljs-keyword">if</span>(nd.<span class="hljs-property">left</span>==<span class="hljs-literal">null</span>)&#123;nd.<span class="hljs-property">tdst</span>=<span class="hljs-title function_">dist</span>(nd.<span class="hljs-property">est</span>.<span class="hljs-property">q</span>,r,g,b,a);<span class="hljs-keyword">return</span> nd&#125;<span class="hljs-keyword">var</span> pd=<span class="hljs-title function_">planeDst</span>(nd.<span class="hljs-property">est</span>,r,g,b,a);<span class="hljs-keyword">var</span> node0=nd.<span class="hljs-property">left</span>,node1=nd.<span class="hljs-property">right</span>;<span class="hljs-keyword">if</span>(pd&gt;<span class="hljs-number">0</span>)&#123;node0=nd.<span class="hljs-property">right</span>;node1=nd.<span class="hljs-property">left</span>&#125;<span class="hljs-keyword">var</span> ln=<span class="hljs-title function_">getNearest</span>(node0,r,g,b,a);<span class="hljs-keyword">if</span>(ln.<span class="hljs-property">tdst</span>&lt;=pd*pd)<span class="hljs-keyword">return</span> ln;<span class="hljs-keyword">var</span> rn=<span class="hljs-title function_">getNearest</span>(node1,r,g,b,a);<span class="hljs-keyword">return</span> rn.<span class="hljs-property">tdst</span>&lt;ln.<span class="hljs-property">tdst</span>?<span class="hljs-attr">rn</span>:ln&#125;<span class="hljs-keyword">function</span> <span class="hljs-title function_">planeDst</span>(<span class="hljs-params">est,r,g,b,a</span>)&#123;<span class="hljs-keyword">var</span> e=est.<span class="hljs-property">e</span>;<span class="hljs-keyword">return</span> e[<span class="hljs-number">0</span>]*r+e[<span class="hljs-number">1</span>]*g+e[<span class="hljs-number">2</span>]*b+e[<span class="hljs-number">3</span>]*a-est.<span class="hljs-property">eMq</span>&#125;<span class="hljs-keyword">function</span> <span class="hljs-title function_">dist</span>(<span class="hljs-params">q,r,g,b,a</span>)&#123;<span class="hljs-keyword">var</span> d0=r-q[<span class="hljs-number">0</span>],d1=g-q[<span class="hljs-number">1</span>],d2=b-q[<span class="hljs-number">2</span>],d3=a-q[<span class="hljs-number">3</span>];<span class="hljs-keyword">return</span> d0*d0+d1*d1+d2*d2+d3*d3&#125;<span class="hljs-keyword">function</span> <span class="hljs-title function_">splitPixels</span>(<span class="hljs-params">nimg,nimg32,i0,i1,e,eMq</span>)&#123;i1-=<span class="hljs-number">4</span>;<span class="hljs-keyword">var</span> shfs=<span class="hljs-number">0</span>;<span class="hljs-keyword">while</span>(i0&lt;i1)&#123;<span class="hljs-keyword">while</span>(<span class="hljs-title function_">vecDot</span>(nimg,i0,e)&lt;=eMq)i0+=<span class="hljs-number">4</span>;<span class="hljs-keyword">while</span>(<span class="hljs-title function_">vecDot</span>(nimg,i1,e)&gt;eMq)i1-=<span class="hljs-number">4</span>;<span class="hljs-keyword">if</span>(i0&gt;=i1)<span class="hljs-keyword">break</span>;<span class="hljs-keyword">var</span> t=nimg32[i0&gt;&gt;<span class="hljs-number">2</span>];nimg32[i0&gt;&gt;<span class="hljs-number">2</span>]=nimg32[i1&gt;&gt;<span class="hljs-number">2</span>];nimg32[i1&gt;&gt;<span class="hljs-number">2</span>]=t;i0+=<span class="hljs-number">4</span>;i1-=<span class="hljs-number">4</span>&#125;<span class="hljs-keyword">while</span>(<span class="hljs-title function_">vecDot</span>(nimg,i0,e)&gt;eMq)i0-=<span class="hljs-number">4</span>;<span class="hljs-keyword">return</span> i0+<span class="hljs-number">4</span>&#125;<span class="hljs-keyword">function</span> <span class="hljs-title function_">vecDot</span>(<span class="hljs-params">nimg,i,e</span>)&#123;<span class="hljs-keyword">return</span>(nimg[i]*e[<span class="hljs-number">0</span>]+nimg[i+<span class="hljs-number">1</span>]*e[<span class="hljs-number">1</span>]+nimg[i+<span class="hljs-number">2</span>]*e[<span class="hljs-number">2</span>]+nimg[i+<span class="hljs-number">3</span>]*e[<span class="hljs-number">3</span>])&#125;<span class="hljs-keyword">function</span> <span class="hljs-title function_">stats</span>(<span class="hljs-params">nimg,i0,i1</span>)&#123;<span class="hljs-keyword">var</span> R=[<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>];<span class="hljs-keyword">var</span> m=[<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>];<span class="hljs-keyword">var</span> N=(i1-i0)&gt;&gt;<span class="hljs-number">2</span>;<span class="hljs-keyword">for</span>(<span class="hljs-keyword">var</span> i=i0;i&lt;i1;i+=<span class="hljs-number">4</span>)&#123;<span class="hljs-keyword">var</span> r=nimg[i]*(<span class="hljs-number">1</span>/<span class="hljs-number">255</span>),g=nimg[i+<span class="hljs-number">1</span>]*(<span class="hljs-number">1</span>/<span class="hljs-number">255</span>),b=nimg[i+<span class="hljs-number">2</span>]*(<span class="hljs-number">1</span>/<span class="hljs-number">255</span>),a=nimg[i+<span class="hljs-number">3</span>]*(<span class="hljs-number">1</span>/<span class="hljs-number">255</span>);m[<span class="hljs-number">0</span>]+=r;m[<span class="hljs-number">1</span>]+=g;m[<span class="hljs-number">2</span>]+=b;m[<span class="hljs-number">3</span>]+=a;R[<span class="hljs-number">0</span>]+=r*r;R[<span class="hljs-number">1</span>]+=r*g;R[<span class="hljs-number">2</span>]+=r*b;R[<span class="hljs-number">3</span>]+=r*a;R[<span class="hljs-number">5</span>]+=g*g;R[<span class="hljs-number">6</span>]+=g*b;R[<span class="hljs-number">7</span>]+=g*a;R[<span class="hljs-number">10</span>]+=b*b;R[<span class="hljs-number">11</span>]+=b*a;R[<span class="hljs-number">15</span>]+=a*a&#125;R[<span class="hljs-number">4</span>]=R[<span class="hljs-number">1</span>];R[<span class="hljs-number">8</span>]=R[<span class="hljs-number">2</span>];R[<span class="hljs-number">9</span>]=R[<span class="hljs-number">6</span>];R[<span class="hljs-number">12</span>]=R[<span class="hljs-number">3</span>];R[<span class="hljs-number">13</span>]=R[<span class="hljs-number">7</span>];R[<span class="hljs-number">14</span>]=R[<span class="hljs-number">11</span>];<span class="hljs-keyword">return</span>&#123;<span class="hljs-attr">R</span>:R,<span class="hljs-attr">m</span>:m,<span class="hljs-attr">N</span>:N&#125;&#125;<span class="hljs-keyword">function</span> <span class="hljs-title function_">estats</span>(<span class="hljs-params">stats</span>)&#123;<span class="hljs-keyword">var</span> R=stats.<span class="hljs-property">R</span>,m=stats.<span class="hljs-property">m</span>,N=stats.<span class="hljs-property">N</span>;<span class="hljs-keyword">var</span> m0=m[<span class="hljs-number">0</span>],m1=m[<span class="hljs-number">1</span>],m2=m[<span class="hljs-number">2</span>],m3=m[<span class="hljs-number">3</span>],iN=N==<span class="hljs-number">0</span>?<span class="hljs-number">0</span>:<span class="hljs-number">1</span>/N;<span class="hljs-keyword">var</span> <span class="hljs-title class_">Rj</span>=[R[<span class="hljs-number">0</span>]-m0*m0*iN,R[<span class="hljs-number">1</span>]-m0*m1*iN,R[<span class="hljs-number">2</span>]-m0*m2*iN,R[<span class="hljs-number">3</span>]-m0*m3*iN,R[<span class="hljs-number">4</span>]-m1*m0*iN,R[<span class="hljs-number">5</span>]-m1*m1*iN,R[<span class="hljs-number">6</span>]-m1*m2*iN,R[<span class="hljs-number">7</span>]-m1*m3*iN,R[<span class="hljs-number">8</span>]-m2*m0*iN,R[<span class="hljs-number">9</span>]-m2*m1*iN,R[<span class="hljs-number">10</span>]-m2*m2*iN,R[<span class="hljs-number">11</span>]-m2*m3*iN,R[<span class="hljs-number">12</span>]-m3*m0*iN,R[<span class="hljs-number">13</span>]-m3*m1*iN,R[<span class="hljs-number">14</span>]-m3*m2*iN,R[<span class="hljs-number">15</span>]-m3*m3*iN];<span class="hljs-keyword">var</span> A=<span class="hljs-title class_">Rj</span>,M=<span class="hljs-variable constant_">M4</span>;<span class="hljs-keyword">var</span> b=[<span class="hljs-title class_">Math</span>.<span class="hljs-title function_">random</span>(),<span class="hljs-title class_">Math</span>.<span class="hljs-title function_">random</span>(),<span class="hljs-title class_">Math</span>.<span class="hljs-title function_">random</span>(),<span class="hljs-title class_">Math</span>.<span class="hljs-title function_">random</span>()],mi=<span class="hljs-number">0</span>,tmi=<span class="hljs-number">0</span>;<span class="hljs-keyword">if</span>(N!=<span class="hljs-number">0</span>)<span class="hljs-keyword">for</span>(<span class="hljs-keyword">var</span> i=<span class="hljs-number">0</span>;i&lt;<span class="hljs-number">16</span>;i++)&#123;b=M.<span class="hljs-title function_">multVec</span>(A,b);tmi=<span class="hljs-title class_">Math</span>.<span class="hljs-title function_">sqrt</span>(M.<span class="hljs-title function_">dot</span>(b,b));b=M.<span class="hljs-title function_">sml</span>(<span class="hljs-number">1</span>/tmi,b);<span class="hljs-keyword">if</span>(i!=<span class="hljs-number">0</span>&amp;&amp;<span class="hljs-title class_">Math</span>.<span class="hljs-title function_">abs</span>(tmi-mi)&lt;<span class="hljs-number">1e-9</span>)<span class="hljs-keyword">break</span>;mi=tmi&#125;<span class="hljs-keyword">var</span> q=[m0*iN,m1*iN,m2*iN,m3*iN];<span class="hljs-keyword">var</span> eMq255=M.<span class="hljs-title function_">dot</span>(M.<span class="hljs-title function_">sml</span>(<span class="hljs-number">255</span>,q),b);<span class="hljs-keyword">return</span>&#123;<span class="hljs-title class_">Cov</span>:<span class="hljs-title class_">Rj</span>,<span class="hljs-attr">q</span>:q,<span class="hljs-attr">e</span>:b,<span class="hljs-attr">L</span>:mi,<span class="hljs-attr">eMq255</span>:eMq255,<span class="hljs-attr">eMq</span>:M.<span class="hljs-title function_">dot</span>(b,q),<span class="hljs-attr">rgba</span>:((<span class="hljs-title class_">Math</span>.<span class="hljs-title function_">round</span>(<span class="hljs-number">255</span>*q[<span class="hljs-number">3</span>])&lt;&lt;<span class="hljs-number">24</span>)|(<span class="hljs-title class_">Math</span>.<span class="hljs-title function_">round</span>(<span class="hljs-number">255</span>*q[<span class="hljs-number">2</span>])&lt;&lt;<span class="hljs-number">16</span>)|(<span class="hljs-title class_">Math</span>.<span class="hljs-title function_">round</span>(<span class="hljs-number">255</span>*q[<span class="hljs-number">1</span>])&lt;&lt;<span class="hljs-number">8</span>)|(<span class="hljs-title class_">Math</span>.<span class="hljs-title function_">round</span>(<span class="hljs-number">255</span>*q[<span class="hljs-number">0</span>])&lt;&lt;<span class="hljs-number">0</span>))&gt;&gt;&gt;<span class="hljs-number">0</span>&#125;&#125;<span class="hljs-keyword">var</span> <span class="hljs-variable constant_">M4</span>=&#123;<span class="hljs-attr">multVec</span>:<span class="hljs-keyword">function</span>(<span class="hljs-params">m,v</span>)&#123;<span class="hljs-keyword">return</span>[m[<span class="hljs-number">0</span>]*v[<span class="hljs-number">0</span>]+m[<span class="hljs-number">1</span>]*v[<span class="hljs-number">1</span>]+m[<span class="hljs-number">2</span>]*v[<span class="hljs-number">2</span>]+m[<span class="hljs-number">3</span>]*v[<span class="hljs-number">3</span>],m[<span class="hljs-number">4</span>]*v[<span class="hljs-number">0</span>]+m[<span class="hljs-number">5</span>]*v[<span class="hljs-number">1</span>]+m[<span class="hljs-number">6</span>]*v[<span class="hljs-number">2</span>]+m[<span class="hljs-number">7</span>]*v[<span class="hljs-number">3</span>],m[<span class="hljs-number">8</span>]*v[<span class="hljs-number">0</span>]+m[<span class="hljs-number">9</span>]*v[<span class="hljs-number">1</span>]+m[<span class="hljs-number">10</span>]*v[<span class="hljs-number">2</span>]+m[<span class="hljs-number">11</span>]*v[<span class="hljs-number">3</span>],m[<span class="hljs-number">12</span>]*v[<span class="hljs-number">0</span>]+m[<span class="hljs-number">13</span>]*v[<span class="hljs-number">1</span>]+m[<span class="hljs-number">14</span>]*v[<span class="hljs-number">2</span>]+m[<span class="hljs-number">15</span>]*v[<span class="hljs-number">3</span>]]&#125;,<span class="hljs-attr">dot</span>:<span class="hljs-keyword">function</span>(<span class="hljs-params">x,y</span>)&#123;<span class="hljs-keyword">return</span> x[<span class="hljs-number">0</span>]*y[<span class="hljs-number">0</span>]+x[<span class="hljs-number">1</span>]*y[<span class="hljs-number">1</span>]+x[<span class="hljs-number">2</span>]*y[<span class="hljs-number">2</span>]+x[<span class="hljs-number">3</span>]*y[<span class="hljs-number">3</span>]&#125;,<span class="hljs-attr">sml</span>:<span class="hljs-keyword">function</span>(<span class="hljs-params">a,y</span>)&#123;<span class="hljs-keyword">return</span>[a*y[<span class="hljs-number">0</span>],a*y[<span class="hljs-number">1</span>],a*y[<span class="hljs-number">2</span>],a*y[<span class="hljs-number">3</span>]]&#125;&#125;;<span class="hljs-keyword">function</span> <span class="hljs-title function_">concatRGBA</span>(<span class="hljs-params">bufs</span>)&#123;<span class="hljs-keyword">var</span> tlen=<span class="hljs-number">0</span>;<span class="hljs-keyword">for</span>(<span class="hljs-keyword">var</span> i=<span class="hljs-number">0</span>;i&lt;bufs.<span class="hljs-property">length</span>;i++)tlen+=bufs[i].<span class="hljs-property">byteLength</span>;<span class="hljs-keyword">var</span> nimg=<span class="hljs-keyword">new</span> <span class="hljs-title class_">Uint8Array</span>(tlen),noff=<span class="hljs-number">0</span>;<span class="hljs-keyword">for</span>(<span class="hljs-keyword">var</span> i=<span class="hljs-number">0</span>;i&lt;bufs.<span class="hljs-property">length</span>;i++)&#123;<span class="hljs-keyword">var</span> img=<span class="hljs-keyword">new</span> <span class="hljs-title class_">Uint8Array</span>(bufs[i]),il=img.<span class="hljs-property">length</span>;<span class="hljs-keyword">for</span>(<span class="hljs-keyword">var</span> j=<span class="hljs-number">0</span>;j&lt;il;j+=<span class="hljs-number">4</span>)&#123;<span class="hljs-keyword">var</span> r=img[j],g=img[j+<span class="hljs-number">1</span>],b=img[j+<span class="hljs-number">2</span>],a=img[j+<span class="hljs-number">3</span>];<span class="hljs-keyword">if</span>(a==<span class="hljs-number">0</span>)r=g=b=<span class="hljs-number">0</span>;nimg[noff+j]=r;nimg[noff+j+<span class="hljs-number">1</span>]=g;nimg[noff+j+<span class="hljs-number">2</span>]=b;nimg[noff+j+<span class="hljs-number">3</span>]=a&#125;noff+=il&#125;<span class="hljs-keyword">return</span> nimg.<span class="hljs-property">buffer</span>&#125;<span class="hljs-variable constant_">UPNG</span>.<span class="hljs-property">encode</span>=encode;<span class="hljs-variable constant_">UPNG</span>.<span class="hljs-property">encodeLL</span>=encodeLL;<span class="hljs-variable constant_">UPNG</span>.<span class="hljs-property">encode</span>.<span class="hljs-property">compress</span>=compress;<span class="hljs-variable constant_">UPNG</span>.<span class="hljs-property">encode</span>.<span class="hljs-property">dither</span>=dither;<span class="hljs-variable constant_">UPNG</span>.<span class="hljs-property">quantize</span>=quantize;<span class="hljs-variable constant_">UPNG</span>.<span class="hljs-property">quantize</span>.<span class="hljs-property">findNearest</span>=findNearest;<span class="hljs-variable constant_">UPNG</span>.<span class="hljs-property">quantize</span>.<span class="hljs-property">getKDtree</span>=getKDtree;<span class="hljs-variable constant_">UPNG</span>.<span class="hljs-property">quantize</span>.<span class="hljs-property">getNearest</span>=getNearest&#125;)();<br></code></pre></td></tr></table></figure><h3 id="业务代码"><a href="#业务代码" class="headerlink" title="业务代码"></a>业务代码</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-comment">&lt;!-- onchagne是上传调用，onclick是先提前清空之前的上传数据 --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">input</span></span><br><span class="hljs-tag">  <span class="hljs-attr">ref</span>=<span class="hljs-string">&quot;file&quot;</span></span><br><span class="hljs-tag">  <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;file&quot;</span></span><br><span class="hljs-tag">  <span class="hljs-attr">accept</span>=<span class="hljs-string">&quot;image/*&quot;</span></span><br><span class="hljs-tag">  <span class="hljs-attr">onChange</span>=<span class="hljs-string">&#123;(e)</span> =&gt;</span> this.handleCheckFile.call(this, $(e.target))&#125;<br>  onClick=&#123;(e) =&gt; this.handleFileClick(e)&#125;<br>/&gt;<br></code></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-title function_">handleFileClick</span>(<span class="hljs-params">event</span>) &#123;<br>    <span class="hljs-comment">// 重置input值以确保onChange事件在下次选择相同文件时触发</span><br>    event.<span class="hljs-property">target</span>.<span class="hljs-property">value</span> = <span class="hljs-string">&#x27;&#x27;</span><br>&#125;<br><span class="hljs-title function_">photoCompress</span>(<span class="hljs-params">file, w, objDiv</span>) &#123;<br>  <span class="hljs-keyword">var</span> ready = <span class="hljs-keyword">new</span> <span class="hljs-title class_">FileReader</span>()<br>  <span class="hljs-comment">/*开始读取指定的Blob对象或File对象中的内容. 当读取操作完成时,readyState属性的值会成为DONE,如果设置了onloadend事件处理程序,则调用之.同时,result属性中将包含一个data: URL格式的字符串以表示所读取文件的内容.*/</span><br>  ready.<span class="hljs-title function_">readAsDataURL</span>(file)<br>  <span class="hljs-keyword">const</span> that = <span class="hljs-variable language_">this</span><br>  ready.<span class="hljs-property">onload</span> = <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>    <span class="hljs-keyword">var</span> re = <span class="hljs-variable language_">this</span>.<span class="hljs-property">result</span><br>    that.<span class="hljs-title function_">canvasDataURL</span>(re, w, <span class="hljs-regexp">/jpeg/g</span>.<span class="hljs-title function_">test</span>(file.<span class="hljs-property">type</span>), objDiv)<br>  &#125;<br>&#125;<br><span class="hljs-title function_">canvasDataURL</span>(<span class="hljs-params">path, obj, isjpg, callback</span>) &#123;<br>  <span class="hljs-keyword">var</span> img = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Image</span>()<br>  img.<span class="hljs-property">src</span> = path<br>  <span class="hljs-keyword">const</span> self = <span class="hljs-variable language_">this</span><br>  img.<span class="hljs-property">onload</span> = <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>    <span class="hljs-keyword">var</span> that = <span class="hljs-variable language_">this</span><br>    <span class="hljs-comment">// 默认按比例压缩</span><br>    <span class="hljs-keyword">var</span> w = that.<span class="hljs-property">width</span>,<br>      h = that.<span class="hljs-property">height</span>,<br>      scale = w / h<br>      w = <span class="hljs-title class_">Math</span>.<span class="hljs-title function_">round</span>(obj.<span class="hljs-property">width</span> || w);<br>      h = <span class="hljs-title class_">Math</span>.<span class="hljs-title function_">round</span>(obj.<span class="hljs-property">height</span> || h);<br>    <span class="hljs-keyword">var</span> quality = <span class="hljs-number">0.7</span> <span class="hljs-comment">// 默认图片质量为0.7</span><br>    <span class="hljs-comment">//生成canvas</span><br>    <span class="hljs-keyword">var</span> canvas = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">createElement</span>(<span class="hljs-string">&#x27;canvas&#x27;</span>)<br>    <span class="hljs-keyword">var</span> ctx = canvas.<span class="hljs-title function_">getContext</span>(<span class="hljs-string">&#x27;2d&#x27;</span>)<br>    <span class="hljs-comment">// 创建属性节点</span><br>    <span class="hljs-keyword">var</span> anw = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">createAttribute</span>(<span class="hljs-string">&#x27;width&#x27;</span>)<br>    anw.<span class="hljs-property">nodeValue</span> = w<br>    <span class="hljs-keyword">var</span> anh = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">createAttribute</span>(<span class="hljs-string">&#x27;height&#x27;</span>)<br>    anh.<span class="hljs-property">nodeValue</span> = h<br>    canvas.<span class="hljs-title function_">setAttributeNode</span>(anw)<br>    canvas.<span class="hljs-title function_">setAttributeNode</span>(anh)<br>    ctx.<span class="hljs-title function_">drawImage</span>(that, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, w, h)<br>    <span class="hljs-keyword">if</span> (isjpg) &#123;<br>      <span class="hljs-comment">// 图像质量</span><br>      <span class="hljs-keyword">if</span> (obj.<span class="hljs-property">quality</span> &amp;&amp; obj.<span class="hljs-property">quality</span> &lt;= <span class="hljs-number">1</span> &amp;&amp; obj.<span class="hljs-property">quality</span> &gt; <span class="hljs-number">0</span>) &#123;<br>        quality = obj.<span class="hljs-property">quality</span><br>      &#125;<br>      <span class="hljs-comment">// quality值越小，所绘制出的图像越模糊</span><br>      <span class="hljs-keyword">var</span> base64 = canvas.<span class="hljs-title function_">toDataURL</span>(<span class="hljs-string">&#x27;image/jpeg&#x27;</span>, quality)<br>      <span class="hljs-comment">// 回调函数返回base64的值</span><br>      <span class="hljs-comment">// console.log(&quot;fileObj1==&gt;&quot;, base64);</span><br>      <span class="hljs-title function_">callback</span>(base64)<br>    &#125; <span class="hljs-keyword">else</span> &#123;<br>      <span class="hljs-keyword">try</span> &#123;<br>        <span class="hljs-keyword">var</span> dta = ctx.<span class="hljs-title function_">getImageData</span>(<span class="hljs-number">0</span>, <span class="hljs-number">0</span>, w, h).<span class="hljs-property">data</span><br>        <span class="hljs-keyword">var</span> pngData = <span class="hljs-variable constant_">UPNG</span>.<span class="hljs-title function_">encode</span>(<br>          [dta.<span class="hljs-property">buffer</span>],<br>          w,<br>          h,<br>          self.<span class="hljs-property">state</span>.<span class="hljs-property">inputValue</span> &gt; <span class="hljs-number">99</span><br>            ? <span class="hljs-number">0</span><br>            : <span class="hljs-title class_">Math</span>.<span class="hljs-title function_">max</span>(<span class="hljs-number">1</span>, <span class="hljs-title class_">Math</span>.<span class="hljs-title function_">ceil</span>((<span class="hljs-number">256</span> * self.<span class="hljs-property">state</span>.<span class="hljs-property">inputValue</span>) / <span class="hljs-number">100</span>))<br>        )<br>        <span class="hljs-title function_">callback</span>(pngData)<br>      &#125; <span class="hljs-keyword">catch</span> (error) &#123;<br>        message.<span class="hljs-title function_">warn</span>(<span class="hljs-string">&#x27;压缩此图片失败，建议去tinypng压缩后再重新上传&#x27;</span>)<br>        <span class="hljs-keyword">var</span> base64 = canvas.<span class="hljs-title function_">toDataURL</span>(<span class="hljs-string">&#x27;image/png&#x27;</span>, quality)<br>        <span class="hljs-comment">// 回调函数返回base64的值</span><br>        <span class="hljs-comment">// console.log(&quot;fileObj1==&gt;&quot;, base64);</span><br>        <span class="hljs-title function_">callback</span>(base64)<br>      &#125;<br>    &#125;<br>  &#125;<br>&#125;<br><span class="hljs-title function_">convertToBlob</span>(<span class="hljs-params">buff, type</span>) &#123;<br>  <span class="hljs-keyword">let</span> data = <span class="hljs-literal">null</span><br>  <span class="hljs-keyword">if</span> (<span class="hljs-keyword">typeof</span> buff == <span class="hljs-string">&#x27;string&#x27;</span>) &#123;<br>    data = <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">dataURItoBuffer</span>(buff, type)<br>  &#125; <span class="hljs-keyword">else</span> &#123;<br>    <span class="hljs-keyword">const</span> arrayBuffer = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Uint8Array</span>(buff).<span class="hljs-property">buffer</span><br>    data = <span class="hljs-keyword">new</span> <span class="hljs-title class_">File</span>([arrayBuffer], <span class="hljs-string">&#x27;filename.png&#x27;</span>, &#123; type &#125;)<br>  &#125;<br><br>  <span class="hljs-keyword">return</span> data<br>&#125;<br><span class="hljs-title function_">handleCheckFile</span>(<span class="hljs-params">$node</span>) &#123;<br>  <span class="hljs-keyword">let</span> input = <span class="hljs-variable language_">this</span>.<span class="hljs-property">refs</span>.<span class="hljs-property">file</span><br>  <span class="hljs-keyword">let</span> _file = input.<span class="hljs-property">files</span>[<span class="hljs-number">0</span>]<br>  <span class="hljs-keyword">if</span> (!_file) <span class="hljs-keyword">return</span><br>  <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">photoCompress</span>(<br>    _file,<br>    &#123; <span class="hljs-attr">quality</span>: <span class="hljs-variable language_">this</span>.<span class="hljs-property">state</span>.<span class="hljs-property">inputValue</span> / <span class="hljs-number">100</span> &#125;,<br>    <span class="hljs-function">(<span class="hljs-params">filecodes</span>) =&gt;</span> &#123;<br>      <span class="hljs-keyword">var</span> filecode = <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">convertToBlob</span>(filecodes, _file.<span class="hljs-property">type</span>)<br>      <span class="hljs-comment">//将filecode的block数据上传到业务接口中</span><br>      <span class="hljs-comment">// .......</span><br>    &#125;<br>  )<br>&#125;<br><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>前端</category>
      
    </categories>
    
    
    <tags>
      
      <tag>前端开发</tag>
      
      <tag>Javascript</tag>
      
      <tag>图片压缩</tag>
      
      <tag>UPNG</tag>
      
      <tag>canvas</tag>
      
      <tag>input</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>WakaTime Dashboard Pro - 更新日志</title>
    <link href="/2023/04/04/fed11/"/>
    <url>/2023/04/04/fed11/</url>
    
    <content type="html"><![CDATA[<p><img src="/img/blog/fed11.png" alt="wakatime-dashboard-pro"><br><a href="https://github.com/fangge/wakatime-dashboard-pro">项目地址</a><br><a href="https://wakatime.mrfangge.com/">项目 Demo</a></p><hr><p>时隔那么久，想着再次更新一下自己的这个项目</p><blockquote><p>温馨提示: 此项目中的你自行设置的action里面的<code>ACCESS_TOKEN</code>可能会过期，大家记得去<a href="https://github.com/settings/tokens">【Github的token页】</a>去重新生成更新一下</p></blockquote><p>先说一下这次的修改点</p><ol><li>改为pnpm包管理，安装依赖更加快速</li><li>折线图改成虚线，并增加对应时间点的样式</li><li>图表如果刚好当天是没有任何项目的（也就是对应结构中的projects没有值），依然添加对应的时间点</li><li>图表增加项目图例，可以方便筛选每个项目的开发时间</li><li>增加时间范围内的项目总结：总共项目时长、花费时间最长的一天、花费时间最长和最短的项目</li></ol><p>最近ChatGpt很火，刚好一直觉得Ant Design Chart的文档不算很好阅读，就想着直接通过问Chatgpt的方式直接修改代码，可以看看我是是怎么修改的</p><p><img src="/img/blog/chat1.png" alt="问答参考"><br><img src="/img/blog/chat2.png" alt="问答参考"><br><img src="/img/blog/chat3.png" alt="问答参考"><br><img src="/img/blog/chat4.png" alt="问答参考"><br><img src="/img/blog/chat5.png" alt="问答参考"><br><img src="/img/blog/chat6.png" alt="问答参考"></p><p>就这么简单的几个问答，就把这次我想要更新的功能更新好了，所以说这次chatgpt的对于生产力的变革，可以说是颠覆性的，在不远的未来会影响到我们的方方面面，完全可以让一个不熟悉行业的人，快速上手行业，如果有恰当的关键词和问答训练，得到的答案会更加专业</p><h1 id="项目更新日志"><a href="#项目更新日志" class="headerlink" title="项目更新日志"></a>项目更新日志</h1><ol><li><a href="/2023/04/04/fed11/">2023.4.4更新</a></li><li><a href="/2021/11/20/fed6/">2021.11.20更新</a></li><li><a href="/2021/06/29/fed5/">WakaTime Dashboard Pro</a></li></ol>]]></content>
    
    
    <categories>
      
      <category>前端</category>
      
    </categories>
    
    
    <tags>
      
      <tag>前端开发</tag>
      
      <tag>HTML</tag>
      
      <tag>CSS</tag>
      
      <tag>Javascript</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Windows环境设置Git 快捷命令【alias】</title>
    <link href="/2022/04/22/fed10/"/>
    <url>/2022/04/22/fed10/</url>
    
    <content type="html"><![CDATA[<p>笔者最近想着设置一下git的快捷命令，之前在mac环境就直接设置<code>.gitconfig</code>文件即可，然后来到windows发现找到同样的文件后设置没有反应，后来搜了相关教程，踩了一些坑，终于找到对的方法了，和大家分享一下</p><h2 id="设置alias"><a href="#设置alias" class="headerlink" title="设置alias"></a>设置alias</h2><p>找到Git的安装目录下的<code>bash.bashrc</code>文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">Git安装目录\etc\bash.bashrc<br></code></pre></td></tr></table></figure><p>直接用编辑器打开并插入如下代码</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">alias</span> g=<span class="hljs-string">&#x27;git&#x27;</span><br><span class="hljs-built_in">alias</span> ga=<span class="hljs-string">&#x27;git add&#x27;</span><br><span class="hljs-built_in">alias</span> gaa=<span class="hljs-string">&#x27;git add --all&#x27;</span><br><span class="hljs-built_in">alias</span> gapa=<span class="hljs-string">&#x27;git add --patch&#x27;</span><br><span class="hljs-built_in">alias</span> gau=<span class="hljs-string">&#x27;git add --update&#x27;</span><br><span class="hljs-built_in">alias</span> gav=<span class="hljs-string">&#x27;git add --verbose&#x27;</span><br><span class="hljs-built_in">alias</span> gap=<span class="hljs-string">&#x27;git apply&#x27;</span><br><span class="hljs-built_in">alias</span> gcp=<span class="hljs-string">&#x27;git add . &amp;&amp; git commit --m &quot;修改问题&quot; &amp;&amp; git push&#x27;</span><br><span class="hljs-built_in">alias</span> gpl=<span class="hljs-string">&#x27;git pull&#x27;</span><br><span class="hljs-built_in">alias</span> gp=<span class="hljs-string">&#x27;git push&#x27;</span><br><br><span class="hljs-built_in">alias</span> gb=<span class="hljs-string">&#x27;git branch&#x27;</span><br><span class="hljs-built_in">alias</span> gba=<span class="hljs-string">&#x27;git branch -a&#x27;</span><br><span class="hljs-built_in">alias</span> gbd=<span class="hljs-string">&#x27;git branch -d&#x27;</span><br><span class="hljs-built_in">alias</span> gbda=<span class="hljs-string">&#x27;git branch --no-color --merged | command grep -vE &quot;^(\+|\*|\s*($(git_main_branch)|development|develop|devel|dev)\s*$)&quot; | command xargs -n 1 git branch -d&#x27;</span><br><span class="hljs-built_in">alias</span> gbD=<span class="hljs-string">&#x27;git branch -D&#x27;</span><br><span class="hljs-built_in">alias</span> gbl=<span class="hljs-string">&#x27;git blame -b -w&#x27;</span><br><span class="hljs-built_in">alias</span> gbnm=<span class="hljs-string">&#x27;git branch --no-merged&#x27;</span><br><span class="hljs-built_in">alias</span> gbr=<span class="hljs-string">&#x27;git branch --remote&#x27;</span><br><span class="hljs-built_in">alias</span> gbs=<span class="hljs-string">&#x27;git bisect&#x27;</span><br><span class="hljs-built_in">alias</span> gbsb=<span class="hljs-string">&#x27;git bisect bad&#x27;</span><br><span class="hljs-built_in">alias</span> gbsg=<span class="hljs-string">&#x27;git bisect good&#x27;</span><br><span class="hljs-built_in">alias</span> gbsr=<span class="hljs-string">&#x27;git bisect reset&#x27;</span><br><span class="hljs-built_in">alias</span> gbss=<span class="hljs-string">&#x27;git bisect start&#x27;</span><br><br><span class="hljs-built_in">alias</span> gc=<span class="hljs-string">&#x27;git commit -v&#x27;</span><br><span class="hljs-built_in">alias</span> gc!=<span class="hljs-string">&#x27;git commit -v --amend&#x27;</span><br><span class="hljs-built_in">alias</span> gcn!=<span class="hljs-string">&#x27;git commit -v --no-edit --amend&#x27;</span><br><span class="hljs-built_in">alias</span> gca=<span class="hljs-string">&#x27;git commit -v -a&#x27;</span><br><span class="hljs-built_in">alias</span> gca!=<span class="hljs-string">&#x27;git commit -v -a --amend&#x27;</span><br><span class="hljs-built_in">alias</span> gcan!=<span class="hljs-string">&#x27;git commit -v -a --no-edit --amend&#x27;</span><br><span class="hljs-built_in">alias</span> gcans!=<span class="hljs-string">&#x27;git commit -v -a -s --no-edit --amend&#x27;</span><br><span class="hljs-built_in">alias</span> gcam=<span class="hljs-string">&#x27;git commit -a -m&#x27;</span><br><span class="hljs-built_in">alias</span> gcsm=<span class="hljs-string">&#x27;git commit -s -m&#x27;</span><br><span class="hljs-built_in">alias</span> gcb=<span class="hljs-string">&#x27;git checkout -b&#x27;</span><br><span class="hljs-built_in">alias</span> gcf=<span class="hljs-string">&#x27;git config --list&#x27;</span><br><span class="hljs-built_in">alias</span> gcl=<span class="hljs-string">&#x27;git clone --recurse-submodules&#x27;</span><br><span class="hljs-built_in">alias</span> gclean=<span class="hljs-string">&#x27;git clean -id&#x27;</span><br><span class="hljs-built_in">alias</span> gpristine=<span class="hljs-string">&#x27;git reset --hard &amp;&amp; git clean -dffx&#x27;</span><br><span class="hljs-built_in">alias</span> gcm=<span class="hljs-string">&#x27;git checkout $(git_main_branch)&#x27;</span><br><span class="hljs-built_in">alias</span> gcd=<span class="hljs-string">&#x27;git checkout develop&#x27;</span><br><span class="hljs-built_in">alias</span> gcmsg=<span class="hljs-string">&#x27;git commit -m&#x27;</span><br><span class="hljs-built_in">alias</span> gco=<span class="hljs-string">&#x27;git checkout&#x27;</span><br><span class="hljs-built_in">alias</span> gcount=<span class="hljs-string">&#x27;git shortlog -sn&#x27;</span><br><span class="hljs-built_in">alias</span> gcs=<span class="hljs-string">&#x27;git commit -S&#x27;</span><br><br><span class="hljs-built_in">alias</span> gd=<span class="hljs-string">&#x27;git diff&#x27;</span><br><span class="hljs-built_in">alias</span> gdca=<span class="hljs-string">&#x27;git diff --cached&#x27;</span><br><span class="hljs-built_in">alias</span> gdcw=<span class="hljs-string">&#x27;git diff --cached --word-diff&#x27;</span><br><span class="hljs-built_in">alias</span> gdct=<span class="hljs-string">&#x27;git describe --tags $(git rev-list --tags --max-count=1)&#x27;</span><br><span class="hljs-built_in">alias</span> gds=<span class="hljs-string">&#x27;git diff --staged&#x27;</span><br><span class="hljs-built_in">alias</span> gdt=<span class="hljs-string">&#x27;git diff-tree --no-commit-id --name-only -r&#x27;</span><br><span class="hljs-built_in">alias</span> gdw=<span class="hljs-string">&#x27;git diff --word-diff&#x27;</span><br></code></pre></td></tr></table></figure><blockquote><p>大家可以自行定义喜欢的快捷命令</p></blockquote><h2 id="设置默认终端"><a href="#设置默认终端" class="headerlink" title="设置默认终端"></a>设置默认终端</h2><p>到了这一步我以为完成了，然后发现windows的默认cmd或者powershell都无法识别到新加的命令<br><img src="/img/blog/fed10.png" alt="无法识别命令"></p><p>后来才了解到加的命令只有<strong>Git Bash</strong>能使用，之前我的Vscode一直都是默认使用cmd来作为默认终端的，所以需要修改默认终端为Git Bash才行</p><h3 id="进入Vscode的JSON-setting中添加配置"><a href="#进入Vscode的JSON-setting中添加配置" class="headerlink" title="进入Vscode的JSON setting中添加配置"></a>进入Vscode的JSON setting中添加配置</h3><ol><li><code>Ctrl+Shift+p</code>输入<code>setting</code><br><img src="/img/blog/fed10_1.png"></li><li>找到<code>terminal.integrated.profiles.windows</code>修改配置如下，请注意path那里就是填你git安装目录下的<code>bin</code>目录下的bash.exe<figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs json"><span class="hljs-attr">&quot;terminal.integrated.profiles.windows&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>  <span class="hljs-attr">&quot;PowerShell&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>    <span class="hljs-attr">&quot;source&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;PowerShell&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;icon&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;terminal-powershell&quot;</span><br>  <span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;Command Prompt&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>    <span class="hljs-attr">&quot;path&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span><br>      <span class="hljs-string">&quot;$&#123;env:windir&#125;\\Sysnative\\cmd.exe&quot;</span><span class="hljs-punctuation">,</span><br>      <span class="hljs-string">&quot;$&#123;env:windir&#125;\\System32\\cmd.exe&quot;</span><br>    <span class="hljs-punctuation">]</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;args&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span><span class="hljs-punctuation">]</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;icon&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;terminal-cmd&quot;</span><br>  <span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;Git-Bash&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>    <span class="hljs-comment">// &quot;source&quot;: &quot;Git Bash&quot;,</span><br>    <span class="hljs-attr">&quot;path&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;D:\\software\\Git\\bin\\bash.exe&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;args&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span><span class="hljs-punctuation">]</span><br>  <span class="hljs-punctuation">&#125;</span><br><span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><br><span class="hljs-attr">&quot;terminal.integrated.defaultProfile.windows&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;Git-Bash&quot;</span><br></code></pre></td></tr></table></figure></li><li>重启vscode</li></ol><h2 id="完美"><a href="#完美" class="headerlink" title="完美"></a>完美</h2><p>之后<code>Ctrl+~</code>你就可以看到已经切换终端成功了，顺便舒服地用上快捷命令<br><img src="/img/blog/fed10_3.png"></p>]]></content>
    
    
    <categories>
      
      <category>前端</category>
      
    </categories>
    
    
    <tags>
      
      <tag>前端开发</tag>
      
      <tag>Javascript</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>字节面试复盘</title>
    <link href="/2022/04/11/fed9/"/>
    <url>/2022/04/11/fed9/</url>
    
    <content type="html"><![CDATA[<p>最近想走出舒适圈，所以重启了一下求职之路，其实做前端这么久，自己明白自己的基础很薄弱，可能整个职业生涯也比较佛，大部分时间都是得过且过，觉得不能再浪费生命了，还是得支棱起来，好好地努力一下，争取一下更好的生活，闲话不说，主要说一下面试遇到的一些问题，还有面试官给的一些题目</p><h2 id="编程题目"><a href="#编程题目" class="headerlink" title="编程题目"></a>编程题目</h2><p>可能首先还是以题目切入为主吧，也说明了自己在 js 基础知识掌握方面很薄弱，其实问题都很简单，就是还是不够细心，需要面试官提醒</p><h3 id="题目一"><a href="#题目一" class="headerlink" title="题目一"></a>题目一</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">var</span> a = <span class="hljs-number">10</span>;<br><span class="hljs-keyword">var</span> obj = &#123;<br>  <span class="hljs-attr">a</span>: <span class="hljs-number">20</span>,<br>  <span class="hljs-attr">log0</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>    <span class="hljs-keyword">var</span> a;<br>    <span class="hljs-keyword">if</span> (a) &#123;<br>      a = <span class="hljs-number">100</span>;<br>    &#125; <span class="hljs-keyword">else</span> &#123;<br>      a = <span class="hljs-number">200</span>;<br>    &#125;<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(a);<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">a</span>);<br>    <span class="hljs-keyword">var</span> a = <span class="hljs-number">30</span>;<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(a);<br>  &#125;,<br>  <span class="hljs-attr">log1</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(a);<br>  &#125;,<br>&#125;;<br>obj.<span class="hljs-title function_">log0</span>();<br>obj.<span class="hljs-title function_">log1</span>();<br></code></pre></td></tr></table></figure><p>这题非常基础，主要考的是变量提升、变量作用域和 this 的指向问题</p><ol><li>第一个<code>a</code>，因为 log0 里面刚开始有定义一个<code>var a</code>，所以刚开始 a 是 undefined，也就走到第二个<code>a=200</code>，所以打印出来<u><strong>200</strong></u></li><li>第二个<code>this.a</code>，this 指向的是 obj 里面的 a 变量，所以打印出来是<u><strong>20</strong></u></li><li>第三个<code>a</code>因为前面重新定义了<code>a=30</code>，所以打印出来是<u><strong>30</strong></u></li><li>而第四个因为没有<code>this</code>，所以指向的是全局的 a 变量，所以是最开始的<u><strong>10</strong></u></li></ol><p>这一题自己就犯了一个错误，第一个 a 以为 var 了之后，就会到 100，完全忘了没赋值就是 undefined，还得面试官提醒，真是太逊了，我感觉这里面试官其实就已经知道我基础不是很稳了</p><div class="note note-success">            <p>正确答案：<br>200<br>20<br>30<br>10</p>          </div><h3 id="题目二"><a href="#题目二" class="headerlink" title="题目二"></a>题目二</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&#x27;script start&#x27;</span>);<br><span class="hljs-built_in">setTimeout</span>(<span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>  <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&#x27;script 1&#x27;</span>);<br>&#125;, <span class="hljs-number">0</span>);<br><span class="hljs-keyword">new</span> <span class="hljs-title class_">Promise</span>(<span class="hljs-keyword">function</span> (<span class="hljs-params">resolve, reject</span>) &#123;<br>  <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&#x27;script 2&#x27;</span>);<br>  <span class="hljs-title function_">resolve</span>();<br>&#125;)<br>  .<span class="hljs-title function_">then</span>(<span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&#x27;script 3&#x27;</span>);<br>  &#125;)<br>  .<span class="hljs-title function_">then</span>(<span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&#x27;script 4&#x27;</span>);<br>  &#125;);<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&#x27;script end&#x27;</span>);<br></code></pre></td></tr></table></figure><p>这题其实是蒙对的，面试官也指出了这点，这题主要考的是 js 中的宏任务和微任务，但是我之前确实没有了解过这部分的知识，这里重新巩固了一下，所有 js 中</p><div class="note note-info">            <p>先同步后异步，先微后宏，微任务的执行时机比宏任务早</p>          </div><p>1、微任务有哪些<br>Promise<br>await 和 async</p><p>2、宏任务有哪些<br>setTimeout<br>setInterval<br>DOM 事件<br>AJAX 请求</p><p>所以我们再来看这个题目</p><ol><li><code>script start</code>肯定是第一个的这个毫无疑问</li><li>接下来因为<code>script 1&#39;</code>是包在<code>setTimeout</code>这个宏任务中，所以对比其他 console，会先放在<code>Promise</code>这个微任务后面执行</li><li>来到<code>Promise</code>后，先执行里面的<code>script 2</code>，然后 resolve 之后，就会走到 then 的<code>script 3</code>，这里也考了一个 Promise 对象的知识点，就是这个 then 其实也是一个<a href="https://es6.ruanyifeng.com/#docs/promise#Promise-prototype-then">Promise 对象</a>，链式调用法的缘故也就顺势执行了<code>script 4</code><br><img src="/img/blog/fed9_1.png" alt="Promise对象中的then链式用法"></li><li>接着就执行<code>script end</code></li><li>最后再执行被挂起的宏任务<code>script 1</code></li></ol><div class="note note-success">            <p>正确答案<br>script start<br>script 2<br>script end<br>script 3<br>script 4<br>script 1</p>          </div><h3 id="题目三"><a href="#题目三" class="headerlink" title="题目三"></a>题目三</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> data = [<br>  &#123; <span class="hljs-attr">id</span>: <span class="hljs-string">&#x27;R1&#x27;</span>, <span class="hljs-attr">parentId</span>: <span class="hljs-literal">null</span> &#125;,<br>  &#123; <span class="hljs-attr">id</span>: <span class="hljs-string">&#x27;R2&#x27;</span>, <span class="hljs-attr">parentId</span>: <span class="hljs-literal">null</span> &#125;,<br>  &#123; <span class="hljs-attr">id</span>: <span class="hljs-string">&#x27;R1-1&#x27;</span>, <span class="hljs-attr">parentId</span>: <span class="hljs-string">&#x27;R1&#x27;</span> &#125;,<br>  &#123; <span class="hljs-attr">id</span>: <span class="hljs-string">&#x27;R1-2&#x27;</span>, <span class="hljs-attr">parentId</span>: <span class="hljs-string">&#x27;R1&#x27;</span> &#125;,<br>  &#123; <span class="hljs-attr">id</span>: <span class="hljs-string">&#x27;R1-3&#x27;</span>, <span class="hljs-attr">parentId</span>: <span class="hljs-string">&#x27;R1&#x27;</span> &#125;,<br>  &#123; <span class="hljs-attr">id</span>: <span class="hljs-string">&#x27;R2-1&#x27;</span>, <span class="hljs-attr">parentId</span>: <span class="hljs-string">&#x27;R2&#x27;</span> &#125;,<br>  &#123; <span class="hljs-attr">id</span>: <span class="hljs-string">&#x27;R2-2&#x27;</span>, <span class="hljs-attr">parentId</span>: <span class="hljs-string">&#x27;R2&#x27;</span> &#125;,<br>  &#123; <span class="hljs-attr">id</span>: <span class="hljs-string">&#x27;R1-1-1&#x27;</span>, <span class="hljs-attr">parentId</span>: <span class="hljs-string">&#x27;R1-3&#x27;</span> &#125;,<br>  &#123; <span class="hljs-attr">id</span>: <span class="hljs-string">&#x27;R1-2-3&#x27;</span>, <span class="hljs-attr">parentId</span>: <span class="hljs-string">&#x27;R1-1-1&#x27;</span> &#125;,<br>];<br></code></pre></td></tr></table></figure><p>希望输出类似下面的结构</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><code class="hljs javascript">[<br>  &#123;<br>    <span class="hljs-attr">id</span>: <span class="hljs-string">&#x27;R1&#x27;</span>,<br>    <span class="hljs-attr">parentId</span>: <span class="hljs-literal">null</span>,<br>    <span class="hljs-attr">children</span>: [<br>      &#123;<br>        <span class="hljs-attr">id</span>: <span class="hljs-string">&#x27;R1-1&#x27;</span>,<br>        <span class="hljs-attr">parentId</span>: <span class="hljs-string">&#x27;R1&#x27;</span>,<br>      &#125;,<br>      &#123;<br>        <span class="hljs-attr">id</span>: <span class="hljs-string">&#x27;R1-2&#x27;</span>,<br>        <span class="hljs-attr">parentId</span>: <span class="hljs-string">&#x27;R1&#x27;</span>,<br>      &#125;,<br>      &#123;<br>        <span class="hljs-attr">id</span>: <span class="hljs-string">&#x27;R1-3&#x27;</span>,<br>        <span class="hljs-attr">parentId</span>: <span class="hljs-string">&#x27;R1&#x27;</span>,<br>        <span class="hljs-attr">children</span>: [<br>          &#123;<br>            <span class="hljs-attr">id</span>: <span class="hljs-string">&#x27;R1-1-1&#x27;</span>,<br>            <span class="hljs-attr">parentId</span>: <span class="hljs-string">&#x27;R1-3&#x27;</span>,<br>            <span class="hljs-attr">children</span>: [<br>              &#123;<br>                <span class="hljs-attr">id</span>: <span class="hljs-string">&#x27;R1-2-3&#x27;</span>,<br>                <span class="hljs-attr">parentId</span>: <span class="hljs-string">&#x27;R1-1-1&#x27;</span>,<br>              &#125;,<br>            ],<br>          &#125;,<br>        ],<br>      &#125;,<br>    ],<br>  &#125;,<br>  &#123;<br>    <span class="hljs-attr">id</span>: <span class="hljs-string">&#x27;R2&#x27;</span>,<br>    <span class="hljs-attr">parentId</span>: <span class="hljs-literal">null</span>,<br>    <span class="hljs-attr">children</span>: [<br>      &#123;<br>        <span class="hljs-attr">id</span>: <span class="hljs-string">&#x27;R2-1&#x27;</span>,<br>        <span class="hljs-attr">parentId</span>: <span class="hljs-string">&#x27;R2&#x27;</span>,<br>      &#125;,<br>      &#123;<br>        <span class="hljs-attr">id</span>: <span class="hljs-string">&#x27;R2-2&#x27;</span>,<br>        <span class="hljs-attr">parentId</span>: <span class="hljs-string">&#x27;R2&#x27;</span>,<br>      &#125;,<br>    ],<br>  &#125;,<br>];<br></code></pre></td></tr></table></figure><p>这题因为之前算法复习的不够，所以虽然最后基本写出来了，但是用的时间太久了，我觉得也给面试官一个不好的印象，回来后也是自己先试着重新写了一次</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> data = [<br>  &#123; <span class="hljs-attr">id</span>: <span class="hljs-string">&#x27;R1&#x27;</span>, <span class="hljs-attr">parentId</span>: <span class="hljs-literal">null</span> &#125;,<br>  &#123; <span class="hljs-attr">id</span>: <span class="hljs-string">&#x27;R2&#x27;</span>, <span class="hljs-attr">parentId</span>: <span class="hljs-literal">null</span> &#125;,<br>  &#123; <span class="hljs-attr">id</span>: <span class="hljs-string">&#x27;R1-1&#x27;</span>, <span class="hljs-attr">parentId</span>: <span class="hljs-string">&#x27;R1&#x27;</span> &#125;,<br>  &#123; <span class="hljs-attr">id</span>: <span class="hljs-string">&#x27;R1-2&#x27;</span>, <span class="hljs-attr">parentId</span>: <span class="hljs-string">&#x27;R1&#x27;</span> &#125;,<br>  &#123; <span class="hljs-attr">id</span>: <span class="hljs-string">&#x27;R1-3&#x27;</span>, <span class="hljs-attr">parentId</span>: <span class="hljs-string">&#x27;R1&#x27;</span> &#125;,<br>  &#123; <span class="hljs-attr">id</span>: <span class="hljs-string">&#x27;R2-1&#x27;</span>, <span class="hljs-attr">parentId</span>: <span class="hljs-string">&#x27;R2&#x27;</span> &#125;,<br>  &#123; <span class="hljs-attr">id</span>: <span class="hljs-string">&#x27;R2-2&#x27;</span>, <span class="hljs-attr">parentId</span>: <span class="hljs-string">&#x27;R2&#x27;</span> &#125;,<br>  &#123; <span class="hljs-attr">id</span>: <span class="hljs-string">&#x27;R1-1-1&#x27;</span>, <span class="hljs-attr">parentId</span>: <span class="hljs-string">&#x27;R1-3&#x27;</span> &#125;,<br>  &#123; <span class="hljs-attr">id</span>: <span class="hljs-string">&#x27;R1-2-3&#x27;</span>, <span class="hljs-attr">parentId</span>: <span class="hljs-string">&#x27;R1-1-1&#x27;</span> &#125;,<br>  &#123; <span class="hljs-attr">id</span>: <span class="hljs-string">&#x27;R1-2-3-5&#x27;</span>, <span class="hljs-attr">parentId</span>: <span class="hljs-string">&#x27;R1-2-3&#x27;</span> &#125;,<br>];<br><span class="hljs-keyword">function</span> <span class="hljs-title function_">getParentIndex</span>(<span class="hljs-params">id</span>) &#123;<br>  <span class="hljs-keyword">return</span> data.<span class="hljs-title function_">findIndex</span>(<span class="hljs-function">(<span class="hljs-params">pinfo</span>) =&gt;</span> pinfo.<span class="hljs-property">id</span> == id);<br>&#125;<br><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">getResultArr</span>(<span class="hljs-params">arr</span>) &#123;<br>  <span class="hljs-keyword">const</span> inArr = arr;<br>  inArr.<span class="hljs-title function_">forEach</span>(<span class="hljs-function">(<span class="hljs-params">item</span>) =&gt;</span> &#123;<br>    <span class="hljs-keyword">if</span> (item.<span class="hljs-property">parentId</span>) &#123;<br>      <span class="hljs-comment">// 获取匹配的父节点</span><br>      <span class="hljs-keyword">let</span> parentIndex = data.<span class="hljs-title function_">findIndex</span>(<span class="hljs-function">(<span class="hljs-params">pinfo</span>) =&gt;</span> pinfo.<span class="hljs-property">id</span> == item.<span class="hljs-property">parentId</span>);<br>      <span class="hljs-keyword">if</span> (parentIndex &gt; -<span class="hljs-number">1</span>) &#123;<br>        <span class="hljs-keyword">let</span> parentObj = data[parentIndex];<br>        <span class="hljs-comment">// 判断是否有children属性</span><br>        <span class="hljs-keyword">if</span> (parentObj.<span class="hljs-property">children</span>) &#123;<br>          <span class="hljs-keyword">if</span> (<br>            <span class="hljs-comment">// 判断chirldren中是否有已有对应的结点</span><br>            parentObj.<span class="hljs-property">children</span>.<span class="hljs-title function_">findIndex</span>(<span class="hljs-function">(<span class="hljs-params">target</span>) =&gt;</span> target.<span class="hljs-property">id</span> == item.<span class="hljs-property">id</span>) == -<span class="hljs-number">1</span><br>          ) &#123;<br>            parentObj.<span class="hljs-property">children</span>.<span class="hljs-title function_">push</span>(item);<br>          &#125;<br>        &#125; <span class="hljs-keyword">else</span> &#123;<br>          parentObj.<span class="hljs-property">children</span> = [item];<br>        &#125;<br>      &#125;<br>    &#125;<br>  &#125;);<br>  <span class="hljs-keyword">return</span> inArr.<span class="hljs-title function_">filter</span>(<span class="hljs-function">(<span class="hljs-params">item</span>) =&gt;</span> item.<span class="hljs-property">children</span> &amp;&amp; item.<span class="hljs-property">parentId</span> == <span class="hljs-literal">null</span>);<br>&#125;<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&#x27;我的解法&#x27;</span>, <span class="hljs-title function_">getResultArr</span>(data));<br></code></pre></td></tr></table></figure><p>后来经过大神提醒，这道题其实就是算法中很经典的<u><strong>[数组转树]</strong></u>问题，网上已经有很多大神的分析贴了，大家也可以看看这篇<a href="https://juejin.cn/post/6983904373508145189#heading-8">【面试了十几个高级前端，竟然连（扁平数据结构转Tree）都写不出来】</a>，也可以对解决这个问题的所有方法做个了解，包括怎么优化等等，看完就觉得真是学海无涯啊</p><h2 id="其他面试问题总结"><a href="#其他面试问题总结" class="headerlink" title="其他面试问题总结"></a>其他面试问题总结</h2><p>因为是一面，其实面试官主要还是围绕自己的简历来提问的，虽然之前提前准备了许多，但是对自己的项目还是没有深挖，把一些亮点更好地展示出来</p><ul><li>你有什么亮点项目，你对这些项目做了哪些事情</li><li>为什么在技术上选型React，你觉得有什么优势</li><li>在开发组件的时候，你们是怎么解决组件之间的联动的</li><li>整个页面的组件搭建，整体是什么流程</li><li>你对页面性能做了哪些优化<br>…..</li></ul><p>自己觉得回答的时候还是比较虚，没有去认真思考我的简历中为什么要写这个项目，这个项目可以怎么吸引面试官，之后得好好修改简历才行</p>]]></content>
    
    
    <categories>
      
      <category>前端</category>
      
    </categories>
    
    
    <tags>
      
      <tag>前端开发</tag>
      
      <tag>Javascript</tag>
      
      <tag>面试</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>tab效果实现</title>
    <link href="/2022/04/06/fed8/"/>
    <url>/2022/04/06/fed8/</url>
    
    <content type="html"><![CDATA[<p>在网上看到了一个这样的Tab组件效果，非常喜欢，于是想着用代码把它实现出来<br><img src="/img/blog/tab.gif" alt="效果如图"><br>先大概分析一下这个动效图有哪些抓人的点</p><ul><li>未激活前tab项目的图标是半透明</li><li>当激活后，图标左移完全显示并显示对应的文案</li><li>不同tab切换的时候，激活的背景会顺滑平</li></ul><p>自己的代码实现如下</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">nav</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;tab&quot;</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;active&quot;</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">svg</span> <span class="hljs-attr">t</span>=<span class="hljs-string">&quot;1649231592227&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;icon&quot;</span> <span class="hljs-attr">viewBox</span>=<span class="hljs-string">&quot;0 0 1024 1024&quot;</span> <span class="hljs-attr">version</span>=<span class="hljs-string">&quot;1.1&quot;</span> <span class="hljs-attr">xmlns</span>=<span class="hljs-string">&quot;http://www.w3.org/2000/svg&quot;</span> <span class="hljs-attr">p-id</span>=<span class="hljs-string">&quot;1698&quot;</span> <span class="hljs-attr">width</span>=<span class="hljs-string">&quot;32&quot;</span> <span class="hljs-attr">height</span>=<span class="hljs-string">&quot;32&quot;</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">path</span> <span class="hljs-attr">d</span>=<span class="hljs-string">&quot;M1014.613212 543.119765c-3.970428 3.806699-9.076726 5.699816-14.172791 5.699816-5.372358 0-10.744715-2.108011-14.766308-6.293333l-64.539922-67.24145 0 523.543917c0 11.307533-9.15859 20.466124-20.466124 20.466124l-265.261433 0c-11.307533 0-20.466124-9.15859-20.466124-20.466124 0-11.2973 9.15859-20.466124 20.466124-20.466124l244.795309 0 0-545.729196-367.233895-382.614188-367.223662 382.593721 0 545.749662 224.329185 0L370.07357 672.353105c0-11.307533 9.168824-20.466124 20.466124-20.466124l244.86694 0c11.2973 0 20.466124 9.15859 20.466124 20.466124 0 11.2973-9.168824 20.466124-20.466124 20.466124l-224.400816 0 0 306.009486c0 11.307533-9.15859 20.466124-20.466124 20.466124l-265.261433 0c-11.2973 0-20.466124-9.15859-20.466124-20.466124L104.812137 475.264331l-64.550155 67.251683c-7.828292 8.15575-20.783349 8.42181-28.939099 0.593518s-8.42181-20.783349-0.593518-28.939099L498.201739 6.293333c3.857864-4.021593 9.18929-6.293333 14.766308-6.293333 5.566786 0 10.898211 2.27174 14.756075 6.293333l487.482607 507.887332C1023.035022 522.336416 1022.768963 535.291472 1014.613212 543.119765z&quot;</span> <span class="hljs-attr">p-id</span>=<span class="hljs-string">&quot;1699&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">path</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">svg</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">a</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">svg</span> <span class="hljs-attr">t</span>=<span class="hljs-string">&quot;1649231612539&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;icon&quot;</span> <span class="hljs-attr">viewBox</span>=<span class="hljs-string">&quot;0 0 1024 1024&quot;</span> <span class="hljs-attr">version</span>=<span class="hljs-string">&quot;1.1&quot;</span> <span class="hljs-attr">xmlns</span>=<span class="hljs-string">&quot;http://www.w3.org/2000/svg&quot;</span> <span class="hljs-attr">p-id</span>=<span class="hljs-string">&quot;1944&quot;</span> <span class="hljs-attr">width</span>=<span class="hljs-string">&quot;32&quot;</span> <span class="hljs-attr">height</span>=<span class="hljs-string">&quot;32&quot;</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">path</span> <span class="hljs-attr">d</span>=<span class="hljs-string">&quot;M961.870987 319.751465l0-150.640905L64.175625 169.110559l0 652.838655 897.695363 0 0-342.705246c0-11.307533 9.15859-20.466124 20.466124-20.466124 11.2973 0 20.466124 9.15859 20.466124 20.466124l0 363.17137c0 11.2973-9.168824 20.466124-20.466124 20.466124L43.709501 862.881462c-11.307533 0-20.466124-9.168824-20.466124-20.466124l0-693.770903c0-11.307533 9.15859-20.466124 20.466124-20.466124l938.62761 0c11.2973 0 20.466124 9.15859 20.466124 20.466124l0 182.025707c0 6.815219-3.40761 13.190417-9.066493 16.986883l-428.499238 287.589974c-6.753821 4.523013-15.533788 4.635577-22.379707 0.276293l-383.361201-243.587807c-9.537214-6.057973-12.361539-18.706037-6.293333-28.243251 6.057973-9.537214 18.706037-12.361539 28.243251-6.303566l372.074134 236.414431L961.870987 319.751465z&quot;</span> <span class="hljs-attr">p-id</span>=<span class="hljs-string">&quot;1945&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">path</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">svg</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">a</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">svg</span> <span class="hljs-attr">t</span>=<span class="hljs-string">&quot;1649231635404&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;icon&quot;</span> <span class="hljs-attr">viewBox</span>=<span class="hljs-string">&quot;0 0 1024 1024&quot;</span> <span class="hljs-attr">version</span>=<span class="hljs-string">&quot;1.1&quot;</span> <span class="hljs-attr">xmlns</span>=<span class="hljs-string">&quot;http://www.w3.org/2000/svg&quot;</span> <span class="hljs-attr">p-id</span>=<span class="hljs-string">&quot;2190&quot;</span> <span class="hljs-attr">width</span>=<span class="hljs-string">&quot;32&quot;</span> <span class="hljs-attr">height</span>=<span class="hljs-string">&quot;32&quot;</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">path</span> <span class="hljs-attr">d</span>=<span class="hljs-string">&quot;M936.723238 911.36571c0 11.307533-9.168824 20.466124-20.466124 20.466124l-778.24483 0c-5.638417 0-11.031241-2.322905-14.899338-6.436596-3.868097-4.103458-5.863545-9.629311-5.525853-15.257495 3.346211-55.688323 25.521257-99.3221 67.804269-133.37773 35.344996-28.478612 79.94068-46.01808 119.286804-61.490469 48.115857-18.920932 89.836051-35.32453 102.371552-64.120366 1.964748-23.300682 1.811252-41.382503 1.627057-62.186318-0.030699-3.121084-0.051165-6.2831-0.071631-9.526981-18.839067-18.798135-38.189787-58.748009-45.199435-94.215802-6.702656-3.428076-12.852726-8.575306-18.051121-15.20633-10.19213-13.006222-16.823154-31.732725-19.698644-55.667857-2.732228-22.75833 4.082992-40.164768 13.323447-51.451836-25.050536-103.947444-17.692964-183.03878 21.908986-235.227396 33.42118-44.032866 88.577385-67.057255 163.954119-68.438719 0.122797-0.010233 0.245593-0.010233 0.378623-0.010233 49.415456 0 86.448908 13.323447 105.789395 37.749766 35.05847 6.938016 61.715597 24.774243 79.316463 53.109592 18.992563 30.566156 26.513864 72.357981 22.349007 124.208906-2.967588 37.043684-11.102872 69.789483-16.833387 89.273233 8.964162 11.2973 15.451924 28.468378 12.770861 50.786687-2.87549 23.935132-9.496282 42.661635-19.698644 55.667857-5.188162 6.610558-11.317767 11.747555-17.999956 15.185864-4.553713 23.8942-13.609972 44.933375-19.156292 56.333006-6.098905 12.545734-14.807241 27.792996-25.009603 37.974893-0.020466 3.295046-0.051165 6.508227-0.081864 9.670244-0.184195 20.742417-0.337691 38.762839 1.616824 61.971423 12.525268 28.795836 54.081733 45.199435 101.992929 64.120366 49.89641 19.698644 106.444311 42.027186 144.245242 85.98842 7.367805 8.575306 6.395664 21.48943-2.169409 28.867468-8.575306 7.367805-21.499663 6.395664-28.867468-2.179642-31.200606-36.296671-80.534198-55.770188-128.240733-74.599022-55.882751-22.062482-108.654652-42.896996-126.275985-90.26584-0.63445-1.698688-1.033539-3.479241-1.197268-5.290493-2.40477-26.677593-2.220574-47.225581-2.036379-68.970838 0.061398-6.129604 0.112564-12.463869 0.112564-19.084661 0-7.490601 4.093225-14.367219 10.652618-17.959024 7.562233-5.464455 31.568996-45.455261 35.723619-84.320431 1.043772-9.772574 8.892531-17.426905 18.685571-18.225083 2.619664-0.214894 13.20065-7.592932 17.068747-39.765679 1.985214-16.526395-6.057973-22.338774-6.139837-22.400173-8.145517-4.952802-11.757788-14.858406-8.749268-23.914666 15.717983-47.286979 33.9226-140.837632 2.466168-191.481056-12.555967-20.210297-31.968086-31.886221-59.341526-35.69292-6.293333-0.86981-11.819187-4.625344-14.960737-10.140964-9.148357-16.055674-37.493939-25.654286-75.847455-25.684986-62.104453 1.176802-106.485243 18.757203-131.914402 52.260248-16.833387 22.195511-26.196639 52.239781-27.803229 89.303932-1.524726 35.017538 3.816932 76.318176 15.871479 122.745578 2.27174 8.728802-1.442862 17.918092-9.138124 22.615067-0.051165 0.030699-8.114818 5.863545-6.129604 22.38994 3.868097 32.172747 14.449084 39.550785 17.068747 39.765679 9.803273 0.798179 17.641799 8.452509 18.685571 18.225083 4.123924 38.670741 28.928866 78.784344 36.767392 84.299965 6.579859 3.581572 10.69355 10.478655 10.69355 17.97949 0 6.54916 0.051165 12.811794 0.102331 18.869766 0.184195 21.816888 0.36839 42.426275-2.056845 69.185732-0.153496 1.811252-0.562818 3.591805-1.197268 5.290493-17.621333 47.38931-70.608128 68.223824-126.69554 90.286306-38.404682 15.103999-78.119195 30.719652-108.593254 55.268768-27.557636 22.205745-43.766806 48.709375-50.019207 82.263585l755.210207 0C927.554414 890.899586 936.723238 900.06841 936.723238 911.36571z&quot;</span> <span class="hljs-attr">p-id</span>=<span class="hljs-string">&quot;2191&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">path</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">svg</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;hover-on&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">nav</span>&gt;</span><br></code></pre></td></tr></table></figure><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br></pre></td><td class="code"><pre><code class="hljs scss"><span class="hljs-selector-tag">nav</span> &#123;<br>  <span class="hljs-attribute">width</span>: <span class="hljs-number">500px</span>;<br>  <span class="hljs-attribute">height</span>: <span class="hljs-number">105px</span>;<br>  <span class="hljs-attribute">margin</span>: <span class="hljs-number">50px</span> auto <span class="hljs-number">0</span>;<br>  <span class="hljs-attribute">box-sizing</span>: border-box;<br>  <span class="hljs-attribute">display</span>: flex;<br>  <span class="hljs-attribute">align-items</span>: center;<br>  <span class="hljs-attribute">justify-content</span>: space-around;<br>  <span class="hljs-attribute">background</span>: <span class="hljs-number">#432fbf</span>;<br>  <span class="hljs-attribute">border-bottom-right-radius</span>: <span class="hljs-number">40px</span>;<br>  <span class="hljs-attribute">border-bottom-left-radius</span>: <span class="hljs-number">40px</span>;<br>  <span class="hljs-attribute">position</span>:relative;<br>  <span class="hljs-selector-class">.hover-on</span>&#123;<br>    <span class="hljs-attribute">display</span>:block;<br>    <span class="hljs-attribute">width</span>:<span class="hljs-number">155px</span>;<br>    <span class="hljs-attribute">height</span>:<span class="hljs-number">60px</span>;<br>    <span class="hljs-attribute">border-radius</span>:<span class="hljs-number">10px</span>;<br>    <span class="hljs-attribute">content</span>:<span class="hljs-string">&quot;&quot;</span>;<br>    <span class="hljs-attribute">position</span>:absolute;<br>    <span class="hljs-attribute">left</span>:<span class="hljs-number">15px</span>;<br>    <span class="hljs-attribute">background</span>:<span class="hljs-number">#5E4ECB</span>;<br>    <span class="hljs-attribute">z-index</span>:<span class="hljs-number">10</span>;<br>    <span class="hljs-attribute">transition</span><span class="hljs-selector-pseudo">:left</span> <span class="hljs-selector-class">.2s</span> linear<br>  &#125;<br>&#125;<br><span class="hljs-selector-tag">nav</span> <span class="hljs-selector-tag">a</span> &#123;<br>  <span class="hljs-attribute">display</span>: flex;<br>  <span class="hljs-attribute">align-items</span>: center;<br>  <span class="hljs-attribute">justify-content</span>: center;<br>  <span class="hljs-attribute">text-decoration</span>: none;<br>  <span class="hljs-attribute">position</span>:relative;<br>  <span class="hljs-attribute">cursor</span>:pointer;<br>  <span class="hljs-attribute">z-index</span>:<span class="hljs-number">99</span>;<br>  svg &#123;<br>    fill: <span class="hljs-number">#fff</span>;<br>    <span class="hljs-attribute">height</span>: <span class="hljs-number">30px</span>;<br>    <span class="hljs-attribute">width</span>:<span class="hljs-number">30px</span>;<br>    <span class="hljs-attribute">opacity</span>:.<span class="hljs-number">5</span>;<br>    <span class="hljs-attribute">margin-left</span>:<span class="hljs-number">0</span>;<br>    <span class="hljs-attribute">transition</span>:all .<span class="hljs-number">5s</span> linear;<br>    <span class="hljs-attribute">position</span>:absolute;<br>    <span class="hljs-attribute">left</span>:<span class="hljs-number">50%</span>;<br>    <span class="hljs-attribute">margin-left</span>:-<span class="hljs-number">15px</span>;<br>  &#125;<br>  &amp;<span class="hljs-selector-class">.active</span> &#123;<br>    svg&#123;<br>      <span class="hljs-attribute">margin-right</span>:<span class="hljs-number">10px</span>;<br>      <span class="hljs-attribute">opacity</span>:<span class="hljs-number">1</span>;<br>      <span class="hljs-attribute">position</span>:static;<br>      <span class="hljs-attribute">transform</span>:none;<br>    &#125;<br>    &amp;<span class="hljs-selector-pseudo">::after</span>&#123;<br>      <span class="hljs-attribute">opacity</span>:<span class="hljs-number">1</span>;<br>    &#125;<br>  &#125;<br>  &amp;<span class="hljs-selector-pseudo">::after</span> &#123;<br>    <span class="hljs-attribute">display</span>:block;<br>    <span class="hljs-attribute">content</span>: <span class="hljs-string">&quot;&quot;</span>;<br>    <span class="hljs-attribute">font-size</span>: <span class="hljs-number">24px</span>;<br>    <span class="hljs-attribute">color</span>: <span class="hljs-number">#fff</span>;<br>    <span class="hljs-attribute">opacity</span>:<span class="hljs-number">0</span>;<br>    <span class="hljs-attribute">transition</span>:opacity .<span class="hljs-number">2s</span> linear<br>  &#125;<br>  &amp;<span class="hljs-selector-pseudo">:nth-of-type</span>(<span class="hljs-number">1</span>) &#123;<br>    &amp;<span class="hljs-selector-pseudo">::after</span> &#123;<br>      <span class="hljs-attribute">content</span>: <span class="hljs-string">&quot;Home&quot;</span>;<br>    &#125;<br>  &#125;<br>  &amp;<span class="hljs-selector-pseudo">:nth-of-type</span>(<span class="hljs-number">2</span>) &#123;<br>    &amp;<span class="hljs-selector-pseudo">::after</span> &#123;<br>      <span class="hljs-attribute">content</span>: <span class="hljs-string">&quot;Inbox&quot;</span>;<br>    &#125;<br>  &#125;<br>  &amp;<span class="hljs-selector-pseudo">:nth-of-type</span>(<span class="hljs-number">3</span>) &#123;<br>    &amp;<span class="hljs-selector-pseudo">::after</span> &#123;<br>      <span class="hljs-attribute">content</span>: <span class="hljs-string">&quot;Profile&quot;</span>;<br>    &#125;<br>  &#125;<br>&#125;<br><span class="hljs-keyword">@keyframes</span> showIn&#123;<br>  <span class="hljs-number">0%</span> &#123;<span class="hljs-attribute">opacity</span>:<span class="hljs-number">0</span>&#125;<br>  <span class="hljs-number">100%</span> &#123;<span class="hljs-attribute">opacity</span>:<span class="hljs-number">1</span>&#125;<br>&#125;<br></code></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">var</span> btns = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">getElementsByTagName</span>(<span class="hljs-string">&quot;a&quot;</span>);<br><span class="hljs-keyword">var</span> navLeft = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">getElementById</span>(<span class="hljs-string">&quot;tab&quot;</span>).<span class="hljs-property">offsetLeft</span>;<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;navLeft&quot;</span>, navLeft);<br><span class="hljs-keyword">var</span> hover = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">getElementsByClassName</span>(<span class="hljs-string">&quot;hover-on&quot;</span>)[<span class="hljs-number">0</span>];<br><span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> i = <span class="hljs-number">0</span>; i &lt; btns.<span class="hljs-property">length</span>; i++) &#123;<br>  <span class="hljs-keyword">var</span> btn = btns[i];<br>  btn.<span class="hljs-property">index</span> = i;<br>  btn.<span class="hljs-property">onclick</span> = <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&#x27;按钮左侧距离&#x27;</span>,<span class="hljs-variable language_">this</span>.<span class="hljs-property">offsetLeft</span>)<br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> j = <span class="hljs-number">0</span>; j &lt; btns.<span class="hljs-property">length</span>; j++) &#123;<br>      btns[j].<span class="hljs-property">className</span> = <span class="hljs-string">&quot;&quot;</span>;<br>    &#125;<br>    <span class="hljs-variable language_">this</span>.<span class="hljs-property">className</span> = <span class="hljs-string">&quot;active&quot;</span>;<br>    hover.<span class="hljs-property">style</span>.<span class="hljs-property">left</span> = <span class="hljs-variable language_">this</span>.<span class="hljs-property">offsetLeft</span>-<span class="hljs-number">40</span> + <span class="hljs-string">&quot;px&quot;</span>;<br>  &#125;;<br>&#125;<br><br></code></pre></td></tr></table></figure><p>总体基本还原了动图的效果，但是还是对实现有些不满意，首先是文字的渐变有些过慢，所以在移除当前tab的时候，文字的渐隐和图标会有一段重合的时间，不够美观，大家如果有其他更优雅的方法也欢迎在评论区附上你们的代码</p><iframe src="https://codepen.io/fangge/full/zYpRmpM" style="width:100%;height:300px">]]></content>
    
    
    <categories>
      
      <category>前端</category>
      
    </categories>
    
    
    <tags>
      
      <tag>前端开发</tag>
      
      <tag>HTML</tag>
      
      <tag>CSS</tag>
      
      <tag>Javascript</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>MacOS M1芯片 安装NVM</title>
    <link href="/2022/03/03/fed7/"/>
    <url>/2022/03/03/fed7/</url>
    
    <content type="html"><![CDATA[<p>首先介绍一下自己电脑和系统的情况</p><div class="note note-info">            <p>MacBook Pro（14英寸，2021年）<br>芯片 Apple M1 Pro<br>MacOs:  12.2.1 Monterey</p>          </div><p>由于在安装nvm上踩了一些坑，所以在这里和大家分享一下在M1芯片上怎么安装nvm包管理器</p><h1 id="卸载node以及相关模块"><a href="#卸载node以及相关模块" class="headerlink" title="卸载node以及相关模块"></a>卸载node以及相关模块</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 查看已经安装在全局的模块</span><br>npm <span class="hljs-built_in">ls</span> -g --depth=0<br><span class="hljs-comment"># 删除全局 node_modules 目录</span><br>sudo <span class="hljs-built_in">rm</span> -rf /usr/local/lib/node_modules<br><span class="hljs-comment"># 删除 node</span><br>sudo <span class="hljs-built_in">rm</span> /usr/local/bin/node <br><span class="hljs-comment"># 删除全局 node 模块注册的软链</span><br><span class="hljs-built_in">cd</span> /usr/local/bin &amp;&amp; <span class="hljs-built_in">ls</span> -l | grep <span class="hljs-string">&quot;../lib/node_modules/&quot;</span> | awk <span class="hljs-string">&#x27;&#123;print $9&#125;&#x27;</span>| xargs <span class="hljs-built_in">rm</span><br></code></pre></td></tr></table></figure><h1 id="安装nvm"><a href="#安装nvm" class="headerlink" title="安装nvm"></a>安装nvm</h1><h2 id="执行安装"><a href="#执行安装" class="headerlink" title="执行安装"></a>执行安装</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.37.1/install.sh | bash<br></code></pre></td></tr></table></figure><h2 id="打开终端，进入用户的home目录中"><a href="#打开终端，进入用户的home目录中" class="headerlink" title="打开终端，进入用户的home目录中"></a>打开终端，进入用户的home目录中</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cd</span> ~/<br></code></pre></td></tr></table></figure><h2 id="检查配置文件"><a href="#检查配置文件" class="headerlink" title="检查配置文件"></a>检查配置文件</h2><p>使<code>ls -a</code>显示这个目录下的所有文件（夹）（包含隐藏文件及文件夹），查看有没有 <code>.zshrc</code>这个文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">ls</span> -a<br></code></pre></td></tr></table></figure><p>如果没有，就新建一个</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">touch</span> ~/.zshrc<br></code></pre></td></tr></table></figure><h2 id="配置-zshrc文件"><a href="#配置-zshrc文件" class="headerlink" title="配置.zshrc文件"></a>配置.zshrc文件</h2><p>将 nvm 环境变量添加到 shell 中, 这里我系统默认的是的zsh而不是bash，需要配置一下，打开.zshrc文件，在最后一行添加</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">export</span> NVM_DIR=<span class="hljs-string">&quot;<span class="hljs-variable">$HOME</span>/.nvm&quot;</span><br>[ -s <span class="hljs-string">&quot;<span class="hljs-variable">$NVM_DIR</span>/nvm.sh&quot;</span> ] &amp;&amp; \. <span class="hljs-string">&quot;<span class="hljs-variable">$NVM_DIR</span>/nvm.sh&quot;</span>  <span class="hljs-comment"># This loads nvm</span><br>[ -s <span class="hljs-string">&quot;<span class="hljs-variable">$NVM_DIR</span>/bash_completion&quot;</span> ] &amp;&amp; \. <span class="hljs-string">&quot;<span class="hljs-variable">$NVM_DIR</span>/bash_completion&quot;</span>  <span class="hljs-comment"># This loads nvm bash_completion</span><br></code></pre></td></tr></table></figure><h2 id="加载配置文件"><a href="#加载配置文件" class="headerlink" title="加载配置文件"></a>加载配置文件</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">source</span> ~/.zshrc<br></code></pre></td></tr></table></figure><h2 id="测试是否安装成功"><a href="#测试是否安装成功" class="headerlink" title="测试是否安装成功"></a>测试是否安装成功</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">nvm -v<br></code></pre></td></tr></table></figure><p>如果还是不成功，可以重新编辑.zshrc文件，在末尾添加并保存退出</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">source</span> ~/.bash_profile<br></code></pre></td></tr></table></figure><h1 id="安装14以下的版本，先进入Rosetta-shell环境"><a href="#安装14以下的版本，先进入Rosetta-shell环境" class="headerlink" title="安装14以下的版本，先进入Rosetta shell环境"></a>安装14以下的版本，先进入Rosetta shell环境</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">arch</span> -x86_64 zsh<br></code></pre></td></tr></table></figure><h1 id="使用nvm"><a href="#使用nvm" class="headerlink" title="使用nvm"></a>使用nvm</h1><p>可以直接用help命令查看相关用法，一般有以下用法</p><figure class="highlight mel"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs mel">nvm list  <span class="hljs-comment">// 列出所有已经安装的版本</span><br>nvm <span class="hljs-keyword">ls</span>-remote  <span class="hljs-comment">// 查看所有的node可用的版本</span><br>nvm install XXX  <span class="hljs-comment">// 下载你想要的版本</span><br>nvm use XXX  <span class="hljs-comment">// 使用指定版本的node</span><br>nvm current   <span class="hljs-comment">// 显示当前使用的版本</span><br>nvm <span class="hljs-keyword">alias</span> <span class="hljs-keyword">default</span> XXX  <span class="hljs-comment">// 每次启动终端都使用该版本的node </span><br></code></pre></td></tr></table></figure><p>如果在安装node的时候出现以下提示</p><blockquote><p>cannot create directory ‘&#x2F;home&#x2F;ic&#x2F;.nvm&#x2F;alias&#x2F;lts’: Permission denied<br>则说明我们没有权限创建这个目录，那么要做的就是修改 .nvm 目录的权限，找到 .nvm 目录位置，执行</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo <span class="hljs-built_in">chmod</span> -R 777 .nvm<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>前端</category>
      
    </categories>
    
    
    <tags>
      
      <tag>前端开发</tag>
      
      <tag>HTML</tag>
      
      <tag>CSS</tag>
      
      <tag>Javascript</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>WakaTime Dashboard Pro - 更新日志</title>
    <link href="/2021/11/20/fed6/"/>
    <url>/2021/11/20/fed6/</url>
    
    <content type="html"><![CDATA[<p>前篇WakaTime Dashboard介绍：</p><blockquote><p><a href="/2021/06/29/fed5/">WakaTime Dashboard Pro</a></p></blockquote><p><a href="https://github.com/fangge/wakatime-dashboard-pro">项目地址</a><br><a href="https://wakatime.mrfangge.com/">项目 Demo</a></p><p>距离上一次更新项目已经有一段时间，这次主要重新介绍一下这个项目可能会遇到的一些问题和做出的一些更新</p><h2 id="使用问题"><a href="#使用问题" class="headerlink" title="使用问题"></a>使用问题</h2><ol><li>github中的gist同步是有限制的，笔者自测同步到300天多一些的时候，github的api，也就是<strong><a href="https://api.github.com/gists/xxx">https://api.github.com/gists/xxx</a></strong>这个核心接口，只会展示部分内容，比如我的gist现在每天都同步，但是接口只是返回到2021-10-27的json，也就是后面的json单纯用请求github的api的方式，是没办法看到的，解决方法要么是大家自行clone一下代码然后改成获取本地json（也就是自己找方法把gist中的json同步到本地或其他地方），要么就只能删掉前面一些月份的json来让后面同步的东西接口能返回过来<blockquote><p>利用<a href="https://github.com/superman66/wakatime-sync">wakatime-sync</a>将你的每天的数据同步到 gist 中（原理是利用<a href="https://docs.github.com/en/actions">Github Action</a>每天定时请求 wakatime 的免费 api，获取 json 文件后再上传到 gist 中）</p></blockquote></li></ol><div class="note note-info">            <p>如果有需要的朋友，也可以直接看我的另一个修改为<a href="https://github.com/fangge/wakatime-dashboard-pro/tree/local"><u>获取本地json的分支</u></a></p>          </div><ol start="2"><li>依然是gist同步的问题，大神现在的wakatime-sync的做法是利用github Action去同步的，但是Action有个问题是如果你不去主动更新项目或者不主动点一下开启，在运行了一段时间后就会自动停止，所以如果大家自己有服务器的话，<strong>wakatime-sync</strong>这个项目可以找到这个<a href="https://github.com/superman66/wakatime-sync/tree/9eba97a683ab1289d2c7f9ecd3b50e35bdb0b7b3">提交</a>，用旧的方式去同步你的wakatime文件</li></ol><h2 id="相关更新"><a href="#相关更新" class="headerlink" title="相关更新"></a>相关更新</h2><p>因为工作原因时长需要写周报，所以给项目底部加上了项目周报功能，周报显示的就是你当前选择日期范围内的项目汇总，时间段取的就是开发过这个项目的第一天和最后一天，而且顺便为表格增加了编辑功能，大家可以方便更新周报中的项目详情，欢迎大家继续对我的渣代码提出<a href="https://github.com/fangge/wakatime-dashboard-pro/pulls">宝贵意见</a><br><img src="/img/blog/1637425411607.jpg" alt="周报生成器你懂的"></p><h1 id="项目更新日志"><a href="#项目更新日志" class="headerlink" title="项目更新日志"></a>项目更新日志</h1><ol><li><a href="/2023/04/04/fed11/">2023.4.4更新</a></li><li><a href="/2021/11/20/fed6/">2021.11.20更新</a></li><li><a href="/2021/06/29/fed5/">WakaTime Dashboard Pro</a></li></ol>]]></content>
    
    
    <categories>
      
      <category>前端</category>
      
    </categories>
    
    
    <tags>
      
      <tag>前端开发</tag>
      
      <tag>HTML</tag>
      
      <tag>CSS</tag>
      
      <tag>Javascript</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>WakaTime Dashboard Pro</title>
    <link href="/2021/06/29/fed5/"/>
    <url>/2021/06/29/fed5/</url>
    
    <content type="html"><![CDATA[<p><img src="/img/blog/b9cc66cd-cb04-4900-afbe-3daf8d0ff0e5.png" alt="wakatime-dashboard-pro"><br><a href="https://github.com/fangge/wakatime-dashboard-pro">项目地址</a><br><a href="https://wakatime.mrfangge.com/">项目 Demo</a></p><hr><p>之前一直有使用一个开源项目， <strong>superman66</strong>大神的<a href="https://github.com/superman66/wakatime-dashboard">wakatime-dashboard</a> ，大致介绍一下这个项目，就是利用另一个同步的项目：<a href="https://github.com/superman66/wakatime-sync">wakatime-sync</a>，每天将你的 WakaTime 的数据同步到你的 github 的 gist 上，然后再读取 gist 上的 json 数据，用图表去展示你的代码使用情况，非常喜欢 wakatime 这个统计工具，是因为自己很喜欢回顾之前做的项目情况，知道自己这段时间究竟做了哪些事情，也有利于自己更好地分配时间</p><div class="note note-info">            <p>什么是<a href="https://wakatime.com/">WakaTime</a>: 它是一个可以统计你日常开发项目具体信息的工具。 在相应的编辑器中安装插件后，您可以获取您过去 7 天的代码信息。 如果您需要获得更多，则需要付费升级到高级版本</p>          </div><p><img src="/img/blog/20210629115606.jpg" alt="WakaTime"></p><h2 id="开始优化"><a href="#开始优化" class="headerlink" title="开始优化"></a>开始优化</h2><p>但是个人因为用久了觉得之前的图表不能那么方便地显示一些项目具体信息，于是乎对大神原有的项目进行了重构，主要有以下这些功能的改进和增加：</p><h3 id="一、功能增加"><a href="#一、功能增加" class="headerlink" title="一、功能增加"></a>一、功能增加</h3><ol><li>增加日历选择工具，可以选择具体的某段时间，而不是只能选择前 N 天</li><li>增加下载图表功能，可以方便地下载自己的项目图表数据</li><li>在图表数据日期比较多的情况下，可以让用户横向滚动或出现日期筛选滚动条</li><li>增加选择时间内的总的项目使用情况（原有的只是每天的项目情况）</li><li>增加选择时间内的总的编程语言使用情况</li><li>增加选择时间内的开发工具的使用情况</li><li>增加夜间模式</li><li>结合 GIthub Action 随时同步自己的修改到 master 分支，方便 Github Page 直接使用项目</li></ol><h3 id="二、功能去除"><a href="#二、功能去除" class="headerlink" title="二、功能去除"></a>二、功能去除</h3><ol><li>去掉登录功能，直接让用户随时输入 gistid</li><li>去除相关友情链接</li></ol><h2 id="技术栈和构建框架选择"><a href="#技术栈和构建框架选择" class="headerlink" title="技术栈和构建框架选择"></a>技术栈和构建框架选择</h2><p>之前一直想着试试<a href="https://vitejs.dev/">Vite</a>开发，于是乎这次正好就用上了，主体依然是用<strong>React</strong>开发，但因为之前项目用的图框架是<strong>bizcharts</strong>，所以这次想着直接简单点直接用**<a href="https://ant.design/">Ant Design</a>+Antd 的<a href="https://charts.ant.design/">图表框架</a>**，整个项目使用下来，觉得 Vite 确实挺方便的</p><blockquote><p>某些插件用的时候可能会有兼容问题，因为其强制采用了<code>ES Module</code> 来实现模块的加载，所以如果你使用的包有问题，可能要搜一下对应的一些兼容方法</p></blockquote><div class="note note-primary">            <p>Antd Charts某些图表的配置并不能通用，在官方文档上没有指出来，还好在Github上有人提供类似的issue，总算找到解决方法，如果大家在自己开发的时候，可以注意一下这点</p>          </div><h2 id="安装和使用步骤"><a href="#安装和使用步骤" class="headerlink" title="安装和使用步骤"></a>安装和使用步骤</h2><ol><li>登录<a href="https://wakatime.com/">WakaTime</a>，按照使用方法在你的 IDE 上安装好插件和配置<strong>wakatime key</strong></li><li>利用<a href="https://github.com/superman66/wakatime-sync">wakatime-sync</a>将你的每天的数据同步到 gist 中（<em>原理是利用<a href="https://docs.github.com/en/actions">Github Action</a>每天定时请求 wakatime 的免费 api，获取 json 文件后再上传到 gist 中</em>）</li><li>clone 这个项目并安装</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">git <span class="hljs-built_in">clone</span> https://github.com/fangge/wakatime-dashboardpro.git &amp;&amp; <span class="hljs-built_in">cd</span> wakatime-dashboardpro<br>npm i<br></code></pre></td></tr></table></figure><ol start="4"><li>使用</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">npm run build &amp;&amp; npm run dev<br></code></pre></td></tr></table></figure><h2 id="亮点功能介绍"><a href="#亮点功能介绍" class="headerlink" title="亮点功能介绍"></a>亮点功能介绍</h2><h3 id="1-时间段选择"><a href="#1-时间段选择" class="headerlink" title="1. 时间段选择"></a>1. 时间段选择</h3><p>如果选择具体某段时间，则前面的前 N 天选择则失效，图表可以拖动选择的时间内的某段时间，随时定位到某段具体的时间<br><img src="/img/blog/20210629171957.jpg" alt="时间选择"></p><h3 id="2-具体项目每日的时间变化"><a href="#2-具体项目每日的时间变化" class="headerlink" title="2. 具体项目每日的时间变化"></a>2. 具体项目每日的时间变化</h3><p>得益于 antd 图表中的<a href="https://charts.ant.design/zh-CN/demos/column#%E5%B8%A6%E8%81%94%E5%8A%A8%E5%8C%BA%E5%9F%9F%E7%9A%84%E7%99%BE%E5%88%86%E6%AF%94%E6%9F%B1%E7%8A%B6%E5%9B%BE">联动区域例子</a>，这次鼠标移动到图表中，你可以方便地看到具体某个项目这段时间内的时间变化<br><img src="/img/blog/20210629172546.jpg" alt="联动区域"></p><h3 id="3-选择时间内的项目总概况"><a href="#3-选择时间内的项目总概况" class="headerlink" title="3. 选择时间内的项目总概况"></a>3. 选择时间内的项目总概况</h3><p>利用矩形树图直观地展示你选择时间内项目的总体时间占比<br><img src="/img/blog/20210629172928.jpg" alt="选择时间内的项目总概况"></p><h3 id="4-编程语言概况"><a href="#4-编程语言概况" class="headerlink" title="4. 编程语言概况"></a>4. 编程语言概况</h3><p>饼图展示选择时间内的编程语言使用情况<br><img src="/img/blog/20210629173757.jpg" alt="language"></p><h3 id="5-暗黑模式支持"><a href="#5-暗黑模式支持" class="headerlink" title="5. 暗黑模式支持"></a>5. 暗黑模式支持</h3><p>项目支持根据系统主题色来变化浅色和暗色模式<br><img src="/img/blog/43d1d9bf-9576-4f23-a615-557fece803bd.png" alt="暗黑模式"></p><h2 id="计划优化的功能"><a href="#计划优化的功能" class="headerlink" title="计划优化的功能"></a>计划优化的功能</h2><ul><li><input disabled="" type="checkbox"> 优化直方图的展示方式，找到悬浮在具体项目信息上展示联动的时候，可以直接悬浮的是哪个项目，而不用每次都去看图例，不够清晰</li><li><input disabled="" type="checkbox"> 增加使用的操作系统的概况</li></ul><h2 id="项目总结"><a href="#项目总结" class="headerlink" title="项目总结"></a>项目总结</h2><p>这次的折腾，也是逼自己以产品化思维，用户角度去开发一个项目的过程，本质上是为了让自己可以多用代码去做一些自己想做的事情，找回一些写代码的激情，哈哈，代码渣渣欢迎大家fork这个项目并提交你们的改进方案呀~</p><h1 id="项目更新日志"><a href="#项目更新日志" class="headerlink" title="项目更新日志"></a>项目更新日志</h1><ol><li><a href="/2023/04/04/fed11/">2023.4.4更新</a></li><li><a href="/2021/11/20/fed6/">2021.11.20更新</a></li><li><a href="/2021/06/29/fed5/">WakaTime Dashboard Pro</a></li></ol>]]></content>
    
    
    <categories>
      
      <category>前端</category>
      
    </categories>
    
    
    <tags>
      
      <tag>前端开发</tag>
      
      <tag>HTML</tag>
      
      <tag>CSS</tag>
      
      <tag>Javascript</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hexo+Github Action构建Github Page博客</title>
    <link href="/2021/06/13/fed4/"/>
    <url>/2021/06/13/fed4/</url>
    
    <content type="html"><![CDATA[<p>最近重拾了Github page，之前有了解到结合<a href="https://github.com/features/actions"><strong>Github Action</strong></a>这个利器，现在发文章更流畅了，正好这段时间想着重新写写博客，对自己技术做一些反思和沉淀，所以就重新折腾了一次，在这里做一个生成Github Page的总结，可以避免各位踩坑</p><div class="note note-primary">            <p>本篇适合基础入门者从头学习怎么建立github page</p>          </div><h2 id="Github项目"><a href="#Github项目" class="headerlink" title="Github项目"></a>Github项目</h2><ol><li>首先Github建一个<strong>你的github用户名.github.io</strong>的项目，比如我的github是github.com&#x2F;fangge，fangge就是我的用户名，所以要建一个fangge.github.io的项目</li><li>建好后，进入项目中的<strong>Setting</strong>中，点击左侧的<strong>Pages</strong>，选择你要显示的你的Page的分支和目录，保存后你的github page就已经可以访问了，github本身还提供了几款简单的主题供你选择<br><img src="/img/blog/gpsetting.jpg" alt="GitHub Page"></li></ol><p>到这里了如果你觉得已经可以满足你的个人需要了，那你就可以尽情在你设置的分支里自己写各种你所需要的html文件，然后githubpage就会自动去读取里面的文件，但我们当然不能止步于此，加油继续折腾</p><h2 id="Hexo"><a href="#Hexo" class="headerlink" title="Hexo"></a>Hexo</h2><div class="note note-info">            <p>Hexo是一款基于Node.js的静态博客框架，依赖少易于安装使用，可以方便的生成静态网页托管在GitHub和Heroku上，是搭建博客的首选框架。。Hexo同时也是GitHub上的开源项目，参见：<a href="https://github.com/hexojs/hexo">hexojs&#x2F;hexo</a> 如果想要更加全面的了解Hexo，可以到其官网 Hexo 了解更多的细节，因为Hexo的创建者是台湾人，对中文的支持很友好，可以选择中文进行查看。</p>          </div><ul><li><p>毕竟总是手写html不方便，我们写博客，程序员当然最喜欢用Markdown来写，而Hexo就是其中最好的选择之一，我们首先全局安装hexo命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">npm install hexo-cli -g<br></code></pre></td></tr></table></figure></li><li><p>然后clone 刚才你建好的github.io的项目，输入命令<code>git branch</code>来建一个新的分支并<code>checkout</code></p><blockquote><p><strong>这一步记得做，之后用Github Action会涉及到</strong></p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">git branch xxx<br>git checkout xxx<br></code></pre></td></tr></table></figure></li><li><p>在你新建好的<code>xxx</code>目录下，开始初始化hexo博客</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">hexo init<br></code></pre></td></tr></table></figure></li><li><p>初始完成后，直接start命令就可以本地预览你的博客了</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">hexo s<br></code></pre></td></tr></table></figure></li><li><p>写作的话都是在<code>source</code>里面的<code>_posts</code>去编辑对应的文章markdown，你可以用方便的hexo命令来生成文章</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">hexo new xxx<br></code></pre></td></tr></table></figure><p>xxx就是生成的markdown的文件名，hexo的写作还有一些文档和注意事项，可以在文档<a href="https://hexo.io/zh-cn/docs/writing">Front-matter</a>中查看，如果你希望用不同的模板来新建文章，可以在<code>scaffolds</code>中新建一个markdown模板，然后新建文章的时候，可以直接写<code>(比如aaa就是你新建的aaa.md的模板)</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">hexo new aaa xxx<br></code></pre></td></tr></table></figure></li><li><p>预览完毕后，可以直接用generate命令来生成博客，也就是hexo会将你的markdown，生成githubpage所需要的html文件，生成目录是<code>public</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">hexo g<br></code></pre></td></tr></table></figure></li></ul><p>那么到这一步，其实你就可以手动将public中的文件，复制到你的master分支，提交后访问你的Github Page地址，就可以看到Hexo生成好的博客了</p><blockquote><p>复制到你GithubPage设置的分支去，不一定是master</p></blockquote><h2 id="Github-Action"><a href="#Github-Action" class="headerlink" title="Github Action"></a>Github Action</h2><p>但这样每次都要复制也太麻烦了，有没有什么方法可以只要我们提交当前分支，Github就自动帮我们生成博客呢，答案当然是肯定的，下面有请神奇的Github Action</p><blockquote><p>大家知道，持续集成由很多操作组成，比如抓取代码、运行测试、登录远程服务器，发布到第三方服务等等。GitHub 把这些操作就称为 actions。</p><p>很多操作在不同项目里面是类似的，完全可以共享。GitHub 注意到了这一点，想出了一个很妙的点子，允许开发者把每个操作写成独立的脚本文件，存放到代码仓库，使得其他开发者可以引用。</p><p>如果你需要某个 action，不必自己写复杂的脚本，直接引用他人写好的 action 即可，整个持续集成过程，就变成了一个 actions 的组合。这就是 GitHub Actions 最特别的地方。 - 阮一峰</p><footer><strong>Github Action -</strong><cite><a href="https://github.com/features/actions">github.com/features/actions</a></cite></footer></blockquote><p>所以我们现在的目标就是，只要提交我们的hexo代码后，也就是提交到我们的博客分支后，action自动帮我们运行<code>hexo c &amp;&amp; hexo g</code>生成博客文件，然后把生成的产物推送到master分支，那以后我们只要关注我们的markdown代码即可，其他的都是action帮我们处理好，那么现在开始action教程</p><h3 id="新建一个Access-Token"><a href="#新建一个Access-Token" class="headerlink" title="新建一个Access Token"></a>新建一个Access Token</h3><p>进入<a href="https://github.com/settings/tokens">个人设置页</a>新建一个Access Token<br><img src="/img/blog/ghat.jpg" alt="AccessToken"></p><p>直接全选所有选项后，点击<strong>Generate token</strong><br><img src="/img/blog/20210613175425.jpg"></p><p>生成后请自行保存好生成的token，如果关掉后就不再显示了</p><h3 id="设置个人Secrets"><a href="#设置个人Secrets" class="headerlink" title="设置个人Secrets"></a>设置个人Secrets</h3><p>回到github.io项目的Settings中，新建一个token，名字是<strong>ACCESS_TOKEN</strong>，值是刚才你保存的access token，如图<br><img src="/img/blog/20210613175950.jpg"></p><h3 id="新建action的yml文件"><a href="#新建action的yml文件" class="headerlink" title="新建action的yml文件"></a>新建action的yml文件</h3><p>回到刚才博客源码的那个分支，新建目录<code>.github/workflows</code>，然后新建一个<strong>main.yml</strong>文件，到时候Action就会读取这个文件来做对应的操作，将以下代码复制进去</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">name:</span> <span class="hljs-string">Blog</span> <span class="hljs-string">CI/CD</span><br><br><span class="hljs-comment"># 触发条件：在 push 到 hexo-blog-backup 分支后触发</span><br><span class="hljs-attr">on:</span><br>  <span class="hljs-attr">push:</span><br>    <span class="hljs-attr">branches:</span> <br>      <span class="hljs-bullet">-</span> <span class="hljs-string">hexo-backup</span><br><br><span class="hljs-attr">env:</span><br>  <span class="hljs-attr">TZ:</span> <span class="hljs-string">Asia/Shanghai</span><br><br><span class="hljs-attr">jobs:</span><br>  <span class="hljs-attr">blog-cicd:</span><br>    <span class="hljs-attr">name:</span> <span class="hljs-string">Hexo</span> <span class="hljs-string">blog</span> <span class="hljs-string">build</span> <span class="hljs-string">&amp;</span> <span class="hljs-string">deploy</span><br>    <span class="hljs-attr">runs-on:</span> <span class="hljs-string">ubuntu-latest</span> <span class="hljs-comment"># 使用最新的 Ubuntu 系统作为编译部署的环境</span><br><br>    <span class="hljs-attr">steps:</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">Checkout</span> <span class="hljs-string">codes</span><br>      <span class="hljs-attr">uses:</span> <span class="hljs-string">actions/checkout@v2</span><br><br>    <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">Setup</span> <span class="hljs-string">node</span><br>      <span class="hljs-comment"># 设置 node.js 环境</span><br>      <span class="hljs-attr">uses:</span> <span class="hljs-string">actions/setup-node@v1</span><br>      <span class="hljs-attr">with:</span><br>        <span class="hljs-attr">node-version:</span> <span class="hljs-string">&#x27;12.x&#x27;</span><br><br>    <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">Cache</span> <span class="hljs-string">node</span> <span class="hljs-string">modules</span><br>      <span class="hljs-comment"># 设置包缓存目录，避免每次下载</span><br>      <span class="hljs-attr">uses:</span> <span class="hljs-string">actions/cache@v1</span><br>      <span class="hljs-attr">with:</span><br>        <span class="hljs-attr">path:</span> <span class="hljs-string">~/.npm</span><br>        <span class="hljs-attr">key:</span> <span class="hljs-string">$&#123;&#123;</span> <span class="hljs-string">runner.os</span> <span class="hljs-string">&#125;&#125;-node-$&#123;&#123;</span> <span class="hljs-string">hashFiles(&#x27;**/package-lock.json&#x27;)</span> <span class="hljs-string">&#125;&#125;</span><br><br>    <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">Install</span> <span class="hljs-string">hexo</span> <span class="hljs-string">dependencies</span><br>      <span class="hljs-comment"># 下载 hexo-cli 脚手架及相关安装包</span><br>      <span class="hljs-attr">run:</span> <span class="hljs-string">|</span><br><span class="hljs-string">        npm install -g hexo-cli</span><br><span class="hljs-string">        npm install</span><br><span class="hljs-string"></span><br>    <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">Generate</span> <span class="hljs-string">files</span><br>      <span class="hljs-comment"># 编译 markdown 文件</span><br>      <span class="hljs-attr">run:</span> <span class="hljs-string">|</span><br><span class="hljs-string">        hexo clean</span><br><span class="hljs-string">        hexo generate</span><br><span class="hljs-string"></span><br>    <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">Deploy</span> <span class="hljs-string">hexo</span> <span class="hljs-string">blog</span><br>      <span class="hljs-attr">env:</span> <br>        <span class="hljs-comment"># Github 仓库</span><br>        <span class="hljs-attr">GITHUB_REPO:</span> <span class="hljs-string">github.com/fangge/fangge.github.io</span><br>      <span class="hljs-comment"># 将编译后的博客文件推送到指定仓库</span><br>      <span class="hljs-attr">run:</span> <span class="hljs-string">|</span><br><span class="hljs-string">        cd ./public &amp;&amp; git init &amp;&amp; git add .</span><br><span class="hljs-string">        git config user.name &quot;mrfangge&quot;</span><br><span class="hljs-string">        git config user.email &quot;fangge-sun@163.com&quot;</span><br><span class="hljs-string">        git add .</span><br><span class="hljs-string">        git commit -m &quot;GitHub Actions Auto Builder at $(date +&#x27;%Y-%m-%d %H:%M:%S&#x27;)&quot;</span><br><span class="hljs-string">        git push --force --quiet &quot;https://$&#123;&#123; secrets.ACCESS_TOKEN &#125;&#125;@$GITHUB_REPO&quot; master:master</span><br></code></pre></td></tr></table></figure><h3 id="万事俱备，只欠push"><a href="#万事俱备，只欠push" class="headerlink" title="万事俱备，只欠push"></a>万事俱备，只欠push</h3><p>操作万上面所有东西后，你就可以直接push你这个博客源码分支了，然后你可以去项目的action那里看到对应的进程详情，成功与否都能知道是什么问题<br><img src="/img/blog/20210613180630.jpg"></p><p>当成功后，master就能看到新生成的blog文件，至此，整个博客的发布流程就完全搞定了，Enjoy it！</p><div class="note note-light">            <ol><li><code>hexo server</code>之后发现没有热更新，不太习惯，可以自行安装<code>hexo-browsersync</code></li><li>Hexo有丰富的免费主题库，我自己用的是<a href="https://hexo.fluid-dev.com/docs/">Fluid</a>，挺舒服的，大家可以试试</li></ol>          </div>]]></content>
    
    
    <categories>
      
      <category>前端</category>
      
    </categories>
    
    
    <tags>
      
      <tag>前端开发</tag>
      
      <tag>HTML</tag>
      
      <tag>CSS</tag>
      
      <tag>Javascript</tag>
      
      <tag>Github</tag>
      
      <tag>Hexo</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>标签组件探索</title>
    <link href="/2017/07/22/fed/"/>
    <url>/2017/07/22/fed/</url>
    
    <content type="html"><![CDATA[<p>最近在改版的时候，遇到一个标签插入的小需求，没错，就像下图显示的那样：<br><img src="/img/blog/tag.jpg" alt="需求样式"></p><p>刚开始想着不就一个简单的标签组件，很简单的嘛，可是后来发现越简单的东西，可能需要考虑的用户体验，还有本身组件的可扩展性都是需要仔细斟酌的。</p><p>在踩了坑之后，决定把这个标签逻辑重构，形成单独的标签组件，以方便日后的复用</p><h2 id="标签组件功能及逻辑"><a href="#标签组件功能及逻辑" class="headerlink" title="标签组件功能及逻辑"></a>标签组件功能及逻辑</h2><p>在决定做成组件之前，又重新看了之前的代码，然后思考了一下一个标签组件到底需要什么功能，才能保证这个组件的可扩展性高，用户体验又好呢，于是就规划了一下这个组件可以有的功能点：</p><h3 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h3><ol><li>标签插入去重</li><li>可设定空格或回车输入</li><li>限制可插入标签数</li><li>是否有需屏蔽标签</li><li>是否有推荐标签</li><li>删除标签方法（回退、点击删除）</li><li>各种提示的自定义</li></ol><h3 id="逻辑"><a href="#逻辑" class="headerlink" title="逻辑"></a>逻辑</h3><ol><li>初始化，判断已有标签数，并设置可插入的剩余标签数</li><li>设置 input 的 placeholder 提示，根据用户希望使用的插入方式设置文案</li><li>插入标签，如果标签为必填项，则判断是否有输入文字，如果没有，则提示必填标签文案</li><li>键盘按了设定的插入按键后，开始遍历已有的标签，已存在标签则无法插入，并提示</li><li>键盘按了设定的插入按键后，判断标签字数是否超过限定字数（这里待定，也可以直接用 max-length 来限定）</li><li>键盘按了设定的插入按键后，如果可以插入标签，则插入后清空输入框内容并获取焦点</li><li>按回退键，或直接点击标签可以进行删除，删除之后，如果必填标签，判断标签数量是否为 0，为 0 则提示必填标签文案</li></ol><h3 id="标签组件基本架构"><a href="#标签组件基本架构" class="headerlink" title="标签组件基本架构"></a>标签组件基本架构</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs javascript">(<span class="hljs-keyword">function</span> (<span class="hljs-params"><span class="hljs-variable language_">window</span></span>) &#123;<br>  <span class="hljs-keyword">var</span> <span class="hljs-title class_">TagSdk</span> = <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>    <span class="hljs-keyword">return</span>;<br>  &#125;;<br>  <span class="hljs-comment">/**</span><br><span class="hljs-comment">   * <span class="hljs-doctag">@description</span> 扩展参数对比</span><br><span class="hljs-comment">   * <span class="hljs-doctag">@param</span> &#123;<span class="hljs-type">object</span>&#125; <span class="hljs-variable">target</span> - 目标对象</span><br><span class="hljs-comment">   * <span class="hljs-doctag">@param</span> &#123;<span class="hljs-type">object</span>&#125; <span class="hljs-variable">source</span> - 源对象</span><br><span class="hljs-comment">   * <span class="hljs-doctag">@returns</span> &#123;<span class="hljs-type">object</span>&#125; - 合成的对象</span><br><span class="hljs-comment">   */</span><br>  <span class="hljs-title class_">TagSdk</span>.<span class="hljs-property"><span class="hljs-keyword">prototype</span></span>.<span class="hljs-property">extend</span> = <span class="hljs-keyword">function</span> (<span class="hljs-params">target, source</span>) &#123;<br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> p <span class="hljs-keyword">in</span> source) &#123;<br>      <span class="hljs-keyword">if</span> (source.<span class="hljs-title function_">hasOwnProperty</span>(p)) &#123;<br>        target[p] = source[p];<br>      &#125;<br>    &#125;<br>    <span class="hljs-keyword">return</span> target;<br>  &#125;;<br>  <span class="hljs-title class_">TagSdk</span>.<span class="hljs-property"><span class="hljs-keyword">prototype</span></span>.<span class="hljs-property">xxx</span> = <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;&#125;;<br>&#125;)(<span class="hljs-variable language_">window</span>, <span class="hljs-variable language_">document</span>);<br></code></pre></td></tr></table></figure><h3 id="组件说明"><a href="#组件说明" class="headerlink" title="组件说明"></a>组件说明</h3><ul><li>开始使用，默认参数如下</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">/** 初始化</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> opts 参数</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> &#123;<span class="hljs-type">number</span>&#125; <span class="hljs-variable">insertType</span> - 输入标签的方式，13为回车，32为空格，如果选择32，则输入的标签不能允许有空格</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> &#123;<span class="hljs-type">number</span>&#125; <span class="hljs-variable">maxTag</span> - 允许插入的标签数量</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> &#123;<span class="hljs-type">number</span>&#125; <span class="hljs-variable">maxTagLength</span> - 标签字数限制</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> &#123;<span class="hljs-type">string</span>&#125; <span class="hljs-variable">maxTagTip</span> - 可插入标签数量提示容器</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> &#123;<span class="hljs-type">string</span>&#125; <span class="hljs-variable">alertTag</span> - 标签相关提示容器，如果为alert，则直接弹出系统提示框</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> &#123;<span class="hljs-type">string</span>&#125; <span class="hljs-variable">hotTag</span> - 推荐标签</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> &#123;<span class="hljs-type">string</span>&#125; <span class="hljs-variable">inputTag</span> - 输入标签为空的提示</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> &#123;<span class="hljs-type">string</span>&#125; <span class="hljs-variable">lengthError</span> - 超过限制标签数量提示</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> &#123;<span class="hljs-type">string</span>&#125; <span class="hljs-variable">exitError</span> - 标签去重提示</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> &#123;<span class="hljs-type">bollean</span>&#125; <span class="hljs-variable">emptyFlag</span> - 是否必须填标签</span><br><span class="hljs-comment"> */</span><br><span class="hljs-title class_">TagSdk</span>.<span class="hljs-title function_">tagInit</span>(&#123;<br>  <span class="hljs-attr">insertType</span>: <span class="hljs-number">13</span>,<br>  <span class="hljs-attr">maxTag</span>: <span class="hljs-number">20</span>,<br>  <span class="hljs-attr">maxTagLength</span>: <span class="hljs-number">20</span>,<br>  <span class="hljs-attr">maxTagTip</span>: <span class="hljs-string">&#x27;tag-num&#x27;</span>,<br>  <span class="hljs-attr">alertTag</span>: <span class="hljs-string">&#x27;tag-alert&#x27;</span>,<br>  <span class="hljs-attr">hotTag</span>: <span class="hljs-string">&#x27;tag-hot&#x27;</span>,<br>  <span class="hljs-attr">inputTag</span>: <span class="hljs-string">&#x27;tag-input&#x27;</span>,<br>  <span class="hljs-attr">inputError</span>: <span class="hljs-string">&#x27;请输入标签&#x27;</span>,<br>  <span class="hljs-attr">numError</span>: <span class="hljs-string">&#x27;已超过限制标签数&#x27;</span>,<br>  <span class="hljs-attr">exitError</span>: <span class="hljs-string">&#x27;已存在标签&#x27;</span>,<br>  <span class="hljs-attr">emptyFlag</span>: <span class="hljs-literal">false</span>,<br>&#125;);<br></code></pre></td></tr></table></figure><ul><li>删除功能<br>按回退键，或直接点击标签进行删除</li></ul><p><a href="https://github.com/fangge/tagSdk">项目链接</a></p>]]></content>
    
    
    <categories>
      
      <category>前端</category>
      
    </categories>
    
    
    <tags>
      
      <tag>前端开发</tag>
      
      <tag>HTML</tag>
      
      <tag>CSS</tag>
      
      <tag>Javascript</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>微信jssdk使用流程</title>
    <link href="/2017/04/21/fed3/"/>
    <url>/2017/04/21/fed3/</url>
    
    <content type="html"><![CDATA[<blockquote><p>本篇适合从没有接触过微信 jssdk 的同学</p></blockquote><h2 id="旧的分享代码"><a href="#旧的分享代码" class="headerlink" title="旧的分享代码"></a>旧的分享代码</h2><p>在经历了一段时间普通用户的鬼哭狼嚎后（微信的分享突然不能用了），微信终于推出了正式的 jssdk，再重新贴一下旧的微信的分享代码</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">//给微信设置分享文案</span><br><span class="hljs-keyword">var</span> onBridgeReady = <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>  <span class="hljs-keyword">var</span> appId = <span class="hljs-string">&#x27;&#x27;</span>;<br>  <span class="hljs-comment">// 发送给好友;</span><br>  <span class="hljs-title class_">WeixinJSBridge</span>.<span class="hljs-title function_">on</span>(<span class="hljs-string">&#x27;menu:share:appmessage&#x27;</span>, <span class="hljs-keyword">function</span> (<span class="hljs-params">argv</span>) &#123;<br>    <span class="hljs-keyword">var</span> imgUrl = sharePic;<br>    <span class="hljs-keyword">var</span> link = shareUrl;<br>    <span class="hljs-keyword">var</span> title = shareTitle;<br>    <span class="hljs-keyword">var</span> shareDesc = shareTxt;<br>    <span class="hljs-title class_">WeixinJSBridge</span>.<span class="hljs-title function_">invoke</span>(<br>      <span class="hljs-string">&#x27;sendAppMessage&#x27;</span>,<br>      &#123;<br>        <span class="hljs-attr">img_url</span>: imgUrl,<br>        <span class="hljs-attr">img_width</span>: <span class="hljs-string">&#x27;640&#x27;</span>,<br>        <span class="hljs-attr">img_height</span>: <span class="hljs-string">&#x27;640&#x27;</span>,<br>        <span class="hljs-attr">link</span>: link,<br>        <span class="hljs-attr">desc</span>: shareDesc,<br>        <span class="hljs-attr">title</span>: title,<br>      &#125;,<br>      <span class="hljs-keyword">function</span> (<span class="hljs-params">res</span>) &#123;<br>        <span class="hljs-comment">//分享成功后回调函数</span><br>      &#125;<br>    );<br>  &#125;);<br>  <span class="hljs-comment">// 分享到朋友圈;</span><br>  <span class="hljs-title class_">WeixinJSBridge</span>.<span class="hljs-title function_">on</span>(<span class="hljs-string">&#x27;menu:share:timeline&#x27;</span>, <span class="hljs-keyword">function</span> (<span class="hljs-params">argv</span>) &#123;<br>    <span class="hljs-keyword">var</span> imgUrl = sharePic;<br>    <span class="hljs-keyword">var</span> link = shareUrl;<br>    <span class="hljs-keyword">var</span> title = shareTitle;<br>    <span class="hljs-keyword">var</span> shareDesc = shareTxt;<br>    <span class="hljs-title class_">WeixinJSBridge</span>.<span class="hljs-title function_">invoke</span>(<br>      <span class="hljs-string">&#x27;shareTimeline&#x27;</span>,<br>      &#123;<br>        <span class="hljs-attr">img_url</span>: imgUrl,<br>        <span class="hljs-attr">img_width</span>: <span class="hljs-string">&#x27;640&#x27;</span>,<br>        <span class="hljs-attr">img_height</span>: <span class="hljs-string">&#x27;640&#x27;</span>,<br>        <span class="hljs-attr">link</span>: link,<br>        <span class="hljs-attr">desc</span>: shareDesc,<br>        <span class="hljs-attr">title</span>: shareDesc,<br>      &#125;,<br>      <span class="hljs-keyword">function</span> (<span class="hljs-params">res</span>) &#123;<br>        <span class="hljs-comment">//分享成功后回调函数</span><br>      &#125;<br>    );<br>  &#125;);<br>&#125;;<br><span class="hljs-keyword">if</span> (<span class="hljs-variable language_">document</span>.<span class="hljs-property">addEventListener</span>) &#123;<br>  <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">addEventListener</span>(<span class="hljs-string">&#x27;WeixinJSBridgeReady&#x27;</span>, onBridgeReady, <span class="hljs-literal">false</span>);<br>&#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (<span class="hljs-variable language_">document</span>.<span class="hljs-property">attachEvent</span>) &#123;<br>  <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">attachEvent</span>(<span class="hljs-string">&#x27;WeixinJSBridgeReady&#x27;</span>, onBridgeReady);<br>  <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">attachEvent</span>(<span class="hljs-string">&#x27;onWeixinJSBridgeReady&#x27;</span>, onBridgeReady);<br>&#125;<br></code></pre></td></tr></table></figure><p>微信发布了新的 jssdk 后，官方宣称的是大家以后都只能用新的代码了，可是经过测试，上面这一段旧的代码还是可以用的，只要你的页面所在的域名是在微信的“白名单”内，如果加上以上代码后可以正常分享，那么就证明你的域名是在微信的白名单内</p><h2 id="新的-jssdk-使用方法"><a href="#新的-jssdk-使用方法" class="headerlink" title="新的 jssdk 使用方法"></a>新的 jssdk 使用方法</h2><p><a href="https://developers.weixin.qq.com/doc/offiaccount/OA_Web_Apps/JS-SDK.html">微信 JS-SDK 说明文档</a></p><p>新的方式比之前的方式复杂一些，如果你想要你的页面可以在微信内分享，必须满足以下条件：</p><div class="note note-primary">            <ol><li>你有一个已备案的域名</li><li>你有一个微信公众号（服务号或订阅号都行）</li><li>你有相关的后台服务来生成签名（php、java、nodejs 以及 python）</li></ol>          </div><p>前两个比较容易理解，这里我就不展开了，后面所谓的签名到底是什么呢，这里我用一个浅显易懂的流程来向大家说明一下微信 jssdk 是怎么运作的：</p><ol><li>获取当前时间（10 位，精确到秒）、公众号 AppID 和 AppSecret、页面地址、随机字符串</li><li>通过 <a href="https://api.weixin.qq.com/cgi-bin/token?grant_type=client_credential&appid=**%E5%85%AC%E4%BC%97%E5%8F%B7AppID**&secret=**%E5%85%AC%E4%BC%97%E5%8F%B7AppSecret**%E5%8F%96%E5%BE%97">https://api.weixin.qq.com/cgi-bin/token?grant_type=client_credential&amp;appid=**公众号AppID**&amp;secret=**公众号AppSecret**取得</a> ACCESS_TOKEN</li><li>通过 <a href="https://api.weixin.qq.com/cgi-bin/ticket/getticket?access_token=**ACCESS_TOKEN**&type=jsapi%E5%8F%96%E5%BE%97">https://api.weixin.qq.com/cgi-bin/ticket/getticket?access_token=**ACCESS_TOKEN**&amp;type=jsapi取得</a> jsapi_ticket（有效期为 7200s，也就是 2h）</li><li>用获得的当前时间、页面地址、随机字符串和 jsapi_ticket 生成签名</li><li>用公众号 AppID、当前时间、随机字符串和签名来配置 jssdk 并使用</li></ol><hr><p>那么来详细解释一下流程中的一些点：</p><h3 id="（一）已备案的域名和公众号"><a href="#（一）已备案的域名和公众号" class="headerlink" title="（一）已备案的域名和公众号"></a>（一）已备案的域名和公众号</h3><p>注册公众号并且认证这里就不展开了，大家直接去<a href="https://mp.weixin.qq.com/">https://mp.weixin.qq.com/</a> 了解即可，可是为什么需要已备案的域名呢？因为如果你需要使用 jssdk，需要登录微信公众平台进入“公众号设置”的“功能设置”里填写“JS 接口安全域名”，这里的域名所需要的是已备案的域名，设置完成后，才能开通相对应的接口权限。</p><blockquote><p>服务号只有两个域名白名单，订阅号有三个</p></blockquote><p>对于权限来说，服务号比订阅号多了一些权限（因为服务号可以验证，订阅号不能），比如微信支付、卡券等等，还有就是读取用户的相关信息等，这个大家可以自行根据需求选择公众号类型</p><h3 id="（二）随机字符串"><a href="#（二）随机字符串" class="headerlink" title="（二）随机字符串"></a>（二）随机字符串</h3><p>可以用以下函数生成任意长度的字符串</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">//生成随机字符串</span><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">randomString</span>(<span class="hljs-params">len</span>) &#123;<br>  len = len || <span class="hljs-number">32</span>;<br>  <span class="hljs-keyword">var</span> chars =<br>    <span class="hljs-string">&#x27;ABCDEFGHJKMNPQRSTWXYZabcdefhijkmnprstwxyz2345678&#x27;</span>; <span class="hljs-comment">/****默认去掉了容易混淆的字符oOLl,9gq,Vv,Uu,I1****/</span><br>  <span class="hljs-keyword">var</span> maxPos = chars.<span class="hljs-property">length</span>;<br>  <span class="hljs-keyword">var</span> pwd = <span class="hljs-string">&#x27;&#x27;</span>;<br>  <span class="hljs-keyword">for</span> (i = <span class="hljs-number">0</span>; i &lt; len; i++) &#123;<br>    pwd += chars.<span class="hljs-title function_">charAt</span>(<span class="hljs-title class_">Math</span>.<span class="hljs-title function_">floor</span>(<span class="hljs-title class_">Math</span>.<span class="hljs-title function_">random</span>() * maxPos));<br>  &#125;<br>  <span class="hljs-keyword">return</span> pwd;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="（三）签名"><a href="#（三）签名" class="headerlink" title="（三）签名"></a>（三）签名</h3><div class="note note-info">            <p><strong>签名算法</strong>：参与签名的字段包括 noncestr（随机字符串）, 有效的 jsapi_ticket, timestamp（时间戳）, url（当前网页的 URL，不包含#及其后面部分） 。对所有待签名参数按照字段名的 ASCII 码从小到大排序（字典序）后，使用 URL 键值对的格式（即 key1&#x3D;value1&amp;key2&#x3D;value2…）拼接成字符串 string1。这里需要注意的是所有参数名均为小写字符。对 string1 作 sha1 加密，字段名和字段值都采用原始值，不进行 URL 转义。</p>          </div><p>在上述介绍的 jssdk 运作流程中，2、3、4 步骤其实都是直接放在后台实现的，这也是为什么我说需要后台服务的缘故，具体的后台代码 demo 微信文档里面已经给出了，下面贴一个链接：<br><a href="http://demo.open.weixin.qq.com/jssdk/sample.zip">http://demo.open.weixin.qq.com/jssdk/sample.zip</a></p><div class="note note-warning">            <p>备注：链接中包含 php、java、nodejs 以及 python 的示例代码供第三方参考，第三方切记要对获取的 accesstoken 以及 jsapi_ticket 进行缓存以确保不会触发频率限制，另外注意生成的签名有效时间为 2 小时，2 小时后就要重新生成</p>          </div><h3 id="（四）使用-jssdk"><a href="#（四）使用-jssdk" class="headerlink" title="（四）使用 jssdk"></a>（四）使用 jssdk</h3><p>配置的代码如下：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs javascript">wx.<span class="hljs-title function_">config</span>(&#123;<br>    <span class="hljs-attr">debug</span>: <span class="hljs-literal">true</span>, <span class="hljs-comment">// 开启调试模式,调用的所有api的返回值会在客户端alert出来，若要查看传入的参数，可以在pc端打开，参数信息会通过log打出，仅在pc端时才会打印。</span><br>    <span class="hljs-attr">appId</span>: <span class="hljs-string">&#x27;&#x27;</span>, <span class="hljs-comment">// 必填，公众号的唯一标识</span><br>    <span class="hljs-attr">timestamp</span>: , <span class="hljs-comment">// 必填，生成签名的时间戳</span><br>    <span class="hljs-attr">nonceStr</span>: <span class="hljs-string">&#x27;&#x27;</span>, <span class="hljs-comment">// 必填，生成签名的随机串</span><br>    <span class="hljs-attr">signature</span>: <span class="hljs-string">&#x27;&#x27;</span>,<span class="hljs-comment">// 必填，签名，见附录1</span><br>    <span class="hljs-attr">jsApiList</span>: [] <span class="hljs-comment">// 必填，需要使用的JS接口列表，所有JS接口列表见附录2</span><br>&#125;);<br></code></pre></td></tr></table></figure><p>jsApiList 请大家直接在<a href="https://developers.weixin.qq.com/doc/offiaccount/OA_Web_Apps/JS-SDK.html">微信 JS-SDK 说明文档</a>里面找到对应的使用方法即可，这里就不再赘述</p>]]></content>
    
    
    <categories>
      
      <category>前端</category>
      
    </categories>
    
    
    <tags>
      
      <tag>前端开发</tag>
      
      <tag>Javascript</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>广工校徽CSS3版</title>
    <link href="/2014/01/01/fed2/"/>
    <url>/2014/01/01/fed2/</url>
    
    <content type="html"><![CDATA[<p>因为虐心地去吃了夜宵，而且吃太多撑着了，暂时睡不着，就直接上传这个星期随便玩的一个小东西吧，也可能是大四情结在作怪，星期一起床突然就想到想用 CSS3 来弄一个校徽，然后再用 Html5 来实现，为了让自己的执行力高一些，而且最近遇到了很不愉快的事，就抓紧了时间来完成这个小计划（好了，就不要吐槽我没有实现我的大计划了，其实是有的，这几天一直都在写需求），嗯嗯，不多说，直接和大家介绍一下这次的完成步骤吧。</p><h2 id="步骤一：分析校徽"><a href="#步骤一：分析校徽" class="headerlink" title="步骤一：分析校徽"></a>步骤一：分析校徽</h2><p>首先是分析校徽，这部很关键，其实任何你想用 css3 来实现的这一类效果，其实说白了就是看你的图形学，或者说你的空间思维好不好，用什么样的方法去实现这个校徽，还有就是不同方法之间的代码实现效率等等，如果不考虑这些，会让自己的 css3 代码变得非常冗余，而且徒增自己的工作量，得不偿失。<br><img src="/img/blog/6597201708052102870.jpg"></p><p>星期一有想法的时候就立刻做，发现越做越难做，主要就是因为我没怎么分析这个校徽，就想着直接动手试试看，这样只会越弄越糟糕，所以后来就平下心来，好好用 PS 慢慢地去测量各种尺寸，还有在草稿纸上画各种方案来实现这个校徽的效果，这里我可以给大家一个例子，就打比方说校徽中间 logo 的那个弯弯的东西我是怎么去分析它和实现它的，嗯嗯，因为这个最简单，可以和大家交流一下过程，让大家高燃起学习的兴趣，如果有更合适的方案，欢迎交流！</p><p><img src="/img/blog/2536652490134271702.jpg"></p><p>其实基本上看这张图大家就很明白我想说明的是什么方法，就是用一些简单图形的叠加和相互覆盖，来实现形状效果，这其实就是用 CSS3 做图案的精髓所在，将复杂图形分解成数个简单图形，和解决问题的方法一样，将复杂问题分解成数个数个简单问题，然后逐个击破，看到上面的图，1&#x2F;4 圆，半圆这两个如果接触过 CSS3 的就知道直接用 border-radius 来解决就好，其他的都是矩形，更简单。</p><p>以此类推，观察这个 logo 的其他部分，除了上图，下面那两个两条杠就分别一个矩形，两个和矩形等高的半圆形就可以；最下面的直接矩形；广东工业大学这几个字我就直接截图了，如果还用 css3 来弄我就真心找虐了；英文就直接用 css3 的旋转用 transform 属性就好；最难的就是外轮廓的花瓣，想了很久，后来使用了多个 1&#x2F;4 圆，和旋转兼叠加形成，当然，还要用到一个我没过的 css 属性，就是 clip，这个属性是专门用来截断的，可能大家用的比较少，这里给一个规范：</p><div class="note note-info">            <p>clip : auto | rect ( number number number number ) 取值：auto :　 默认值。对象无剪切</p>          </div><p>然后 number 和大多数的 css 简写一样，都是上右下左，大家可以试试看。</p><h2 id="步骤二：写代码"><a href="#步骤二：写代码" class="headerlink" title="步骤二：写代码"></a>步骤二：写代码</h2><p>基本上确定了要怎么画，就开始正式写代码了，过程中最纠结的就是要不断地调角度和高度等这些很微小的数据，因为用到旋转的关系，所以即使你旋转一度，所以定位上都要随之改变一些，当然像我比较懒的话，就直接开一个调试面板（其实也不是懒，如果真心调一下，刷一下，我觉得亲你就没必要继续做下去了，除非你是强迫症），然后直接修改 css 看效果，都修改后一次性改代码就好。</p><p><a href="https://github.com/fangge/css3logo">项目地址</a><br><a href="https://www.mrfangge.com/css3logo/css3logo.html">可变颜色效果</a></p><p>DEMO：</p><p class="codepen" data-height="479" data-theme-id="dark" data-default-tab="css,result" data-user="fangge" data-slug-hash="PopygmM" style="height: 479px; box-sizing: border-box; display: flex; align-items: center; justify-content: center; border: 2px solid; margin: 1em 0; padding: 1em;" data-pen-title="PopygmM">  <span>See the Pen <a href="https://codepen.io/fangge/pen/PopygmM">  PopygmM</a> by Mr.F (<a href="https://codepen.io/fangge">@fangge</a>)  on <a href="https://codepen.io">CodePen</a>.</span></p><script async src="https://cpwebassets.codepen.io/assets/embed/ei.js"></script><p>微信发布了新的 jssdk 后，官方宣称的是大家以后都只能用新的代码了，可是经过测试，上面这一段旧的代码还是可以用的，只要你的页面所在的域名是在微信的“白名单”内，具体测试的话请以下的文件测试：</p>]]></content>
    
    
    <categories>
      
      <category>前端</category>
      
    </categories>
    
    
    <tags>
      
      <tag>前端开发</tag>
      
      <tag>HTML</tag>
      
      <tag>CSS</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
